{"version":3,"file":"src_apps_explorer_index_ts.bundle.js","mappings":"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","sources":["webpack:///./src/apps/core/hooks/useModelDetailsClient.ts","webpack:///./src/apps/core/hooks/useModelInformationClient.ts","webpack:///./src/apps/explorer/components/ExplorerNav/ExplorerNav.render.tsx","webpack:///./src/apps/explorer/components/ExplorerNav/ExplorerNav.root.tsx","webpack:///./src/apps/explorer/components/ExplorerNav/ExplorerNav.state.ts","webpack:///./src/apps/explorer/components/ExplorerNav/ExplorerNav.styles.ts","webpack:///./src/apps/explorer/components/ExplorerNav/index.ts","webpack:///./src/apps/explorer/components/ExplorerPage/ExplorerPage.render.tsx","webpack:///./src/apps/explorer/components/ExplorerPage/ExplorerPage.state.ts","webpack:///./src/apps/explorer/components/ExplorerPage/ExplorerPage.styles.ts","webpack:///./src/apps/explorer/components/ExplorerPage/ExplorerPage.tsx","webpack:///./src/apps/explorer/components/ExplorerPage/index.ts","webpack:///./src/apps/explorer/components/ExplorerRibbon/ExplorerRibbon.render.tsx","webpack:///./src/apps/explorer/components/ExplorerRibbon/ExplorerRibbon.root.tsx","webpack:///./src/apps/explorer/components/ExplorerRibbon/ExplorerRibbon.state.ts","webpack:///./src/apps/explorer/components/ExplorerRibbon/index.ts","webpack:///./src/apps/explorer/components/QueryPanel/QueryPanel.render.tsx","webpack:///./src/apps/explorer/components/QueryPanel/QueryPanel.root.tsx","webpack:///./src/apps/explorer/components/QueryPanel/QueryPanel.state.ts","webpack:///./src/apps/explorer/components/QueryPanel/QueryPanel.styles.ts","webpack:///./src/apps/explorer/components/QueryPanel/QueryPanel.types.ts","webpack:///./src/apps/explorer/components/QueryPanel/index.ts","webpack:///./src/apps/explorer/components/events/EventList/EventList.render.tsx","webpack:///./src/apps/explorer/components/events/EventList/EventList.root.tsx","webpack:///./src/apps/explorer/components/events/EventList/EventList.state.ts","webpack:///./src/apps/explorer/components/events/EventList/EventList.styles.ts","webpack:///./src/apps/explorer/components/events/EventList/index.ts","webpack:///./src/apps/explorer/components/index.ts","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesList/TimeSeriesList.render.tsx","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesList/TimeSeriesList.root.tsx","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesList/TimeSeriesList.state.ts","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesList/TimeSeriesList.styles.ts","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesList/index.ts","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesPage/TimeSeriesPage.render.tsx","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesPage/TimeSeriesPage.root.tsx","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesPage/TimeSeriesPage.state.ts","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesPage/TimeSeriesPage.styles.ts","webpack:///./src/apps/explorer/components/timeSeries/TimeSeriesPage/index.ts","webpack:///./src/apps/explorer/components/timeSeries/index.ts","webpack:///./src/apps/explorer/components/twins/GraphPage/GraphPage.render.tsx","webpack:///./src/apps/explorer/components/twins/GraphPage/GraphPage.state.ts","webpack:///./src/apps/explorer/components/twins/GraphPage/GraphPage.styles.ts","webpack:///./src/apps/explorer/components/twins/GraphPage/GraphPage.tsx","webpack:///./src/apps/explorer/components/twins/GraphPage/index.ts","webpack:///./src/apps/explorer/components/twins/HierarchyPage/HierarchyPage.render.tsx","webpack:///./src/apps/explorer/components/twins/HierarchyPage/HierarchyPage.root.tsx","webpack:///./src/apps/explorer/components/twins/HierarchyPage/HierarchyPage.state.ts","webpack:///./src/apps/explorer/components/twins/HierarchyPage/HierarchyPage.styles.ts","webpack:///./src/apps/explorer/components/twins/HierarchyPage/index.ts","webpack:///./src/apps/explorer/components/twins/TwinList/TwinList.render.tsx","webpack:///./src/apps/explorer/components/twins/TwinList/TwinList.root.tsx","webpack:///./src/apps/explorer/components/twins/TwinList/TwinList.state.ts","webpack:///./src/apps/explorer/components/twins/TwinList/TwinList.styles.ts","webpack:///./src/apps/explorer/components/twins/TwinList/index.ts","webpack:///./src/apps/explorer/components/twins/TwinsPage/TwinsPage.render.tsx","webpack:///./src/apps/explorer/components/twins/TwinsPage/TwinsPage.state.ts","webpack:///./src/apps/explorer/components/twins/TwinsPage/TwinsPage.styles.ts","webpack:///./src/apps/explorer/components/twins/TwinsPage/TwinsPage.tsx","webpack:///./src/apps/explorer/components/twins/TwinsPage/index.ts","webpack:///./src/apps/explorer/components/twins/index.ts","webpack:///./src/apps/explorer/contexts/ExplorerContext.tsx","webpack:///./src/apps/explorer/contexts/ExplorerContext.utils.ts","webpack:///./src/apps/explorer/contexts/index.ts","webpack:///./src/apps/explorer/index.ts","webpack:///./src/apps/explorer/models/QueryCertifiedEvents.ts"],"sourcesContent":["import {\r\n  MockModelDetailsClient,\r\n  ModelDetailsClient,\r\n  useSharedState,\r\n  useTridentContext,\r\n} from '@do/core';\r\nimport { useMemo } from 'react';\r\n\r\nexport const useModelDetailsClient = (apiReady = true) => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  return useMemo(() => {\r\n    // useMockData in jest should always have a value\r\n    if (tridentContext?.useMockData ?? !apiReady) {\r\n      return new MockModelDetailsClient();\r\n    }\r\n    if (\r\n      tridentContext &&\r\n      tridentContext.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new ModelDetailsClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [tridentContext, workspaceId, artifactId, capacityId, apiReady]);\r\n};\r\n","import {\r\n  MockModelInformationClient,\r\n  ModelInformationClient,\r\n  ModelInformationClientType,\r\n  useSharedState,\r\n  useTridentContext,\r\n} from '@do/core';\r\nimport { useMemo } from 'react';\r\n\r\nexport const useModelInformationClient = (\r\n  apiReady = true,\r\n): ModelInformationClientType | undefined => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  return useMemo(() => {\r\n    // useMockData in jest should always have a value\r\n    if (tridentContext?.useMockData ?? !apiReady) {\r\n      return new MockModelInformationClient();\r\n    }\r\n    if (\r\n      tridentContext &&\r\n      tridentContext.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new ModelInformationClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [tridentContext, workspaceId, artifactId, apiReady, capacityId]);\r\n};\r\n","import React from 'react';\r\nimport { IExplorerNavRenderProps } from './ExplorerNav.types';\r\nimport { Button, Tab, TabList } from '@fluentui/react-components';\r\nimport { t, strings } from '@do/localization';\r\nimport { SlideSearch24Regular } from '@fluentui/react-icons';\r\nimport { QueryPanel } from '../QueryPanel';\r\n\r\nexport enum TestIds {\r\n  NavigationRoot = 'explorer-page-nav',\r\n  TwinsTab = 'explorer-page-nav-twins',\r\n  TwinCount = 'explorer-page-nav-twins-count',\r\n  TimeSeriesTab = 'explorer-page-nav-time-series',\r\n  TimeSeriesCount = 'explorer-page-nav-time-series-count',\r\n  EventsTab = 'explorer-page-nav-events',\r\n  EventCount = 'explorer-page-nav-events-count',\r\n  AdvancedQuery = 'explorer-page-nav-advanced-query',\r\n}\r\n\r\nexport const useExplorerNavRender: React.FC<IExplorerNavRenderProps> = (\r\n  props,\r\n) => {\r\n  const { state, styles } = props;\r\n  const { selectedTab, onTabChange, isQueryPanelVisible, onQueryPanelToggle } =\r\n    state;\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <TabList\r\n        selectedValue={selectedTab}\r\n        onTabSelect={onTabChange}\r\n        role='navigation'\r\n        data-testid={TestIds.NavigationRoot}\r\n      >\r\n        <Tab\r\n          value='twins'\r\n          data-testid={TestIds.TwinsTab}\r\n          className={styles.tab}\r\n        >\r\n          <div className={styles.tabLabel}>\r\n            {t(strings.explorer.nav.twins)}\r\n            {state.twinCountDisplayString ? (\r\n              <div data-testid={TestIds.TwinCount}>\r\n                {state.twinCountDisplayString}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </Tab>\r\n        <Tab\r\n          value='timeSeries'\r\n          data-testid={TestIds.TimeSeriesTab}\r\n          className={styles.tab}\r\n        >\r\n          <div className={styles.tabLabel}>\r\n            {t(strings.explorer.nav.timeseries)}\r\n            {state.timeSeriesCountDisplayString ? (\r\n              <div data-testid={TestIds.TimeSeriesCount}>\r\n                {state.timeSeriesCountDisplayString}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </Tab>\r\n        <Tab\r\n          value='events'\r\n          data-testid={TestIds.EventsTab}\r\n          className={styles.tab}\r\n        >\r\n          <div className={styles.tabLabel}>\r\n            {t(strings.explorer.nav.events)}\r\n            {state.eventCountDisplayString ? (\r\n              <div data-testid={TestIds.EventCount}>\r\n                {state.eventCountDisplayString}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </Tab>\r\n      </TabList>\r\n      <div className={styles.actionButtons}>\r\n        {/* TODO: Disabled until we implement the column picker */}\r\n        {/* <ColumnOptions /> */}\r\n        <Button\r\n          appearance={state.isAdvancedQueryActive ? 'primary' : 'secondary'}\r\n          icon={<SlideSearch24Regular />}\r\n          onClick={onQueryPanelToggle}\r\n          data-testid={TestIds.AdvancedQuery}\r\n        >\r\n          {t(strings.explorer.tabActions.advanced_query)}\r\n        </Button>\r\n      </div>\r\n      <QueryPanel\r\n        isVisible={isQueryPanelVisible}\r\n        onClose={onQueryPanelToggle}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { useExplorerNavRender } from './ExplorerNav.render';\r\nimport { useClassNames } from './ExplorerNav.styles';\r\nimport { useExplorerNavState } from './ExplorerNav.state';\r\n\r\nconst MODULE_NAME = 'ExplorerNav';\r\n\r\nexport const ExplorerNav: React.FC = () => {\r\n  // get state\r\n  const state = useExplorerNavState();\r\n  const debugLogging = useDebugLogging();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state, styles}', MODULE_NAME, {\r\n      state,\r\n      styles,\r\n    });\r\n\r\n  // render the component\r\n  return useExplorerNavRender({ state, styles });\r\n};\r\n\r\nExplorerNav.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo, useState } from 'react';\r\nimport { IExplorerNavState } from './ExplorerNav.types';\r\nimport { useExplorerRouteProps } from '../../hooks/routeProps/useExplorerRouteProps';\r\nimport { useNavigation } from '@do/core';\r\nimport { SelectTabData, SelectTabEvent } from '@fluentui/react-components';\r\nimport { useExplorerContext } from '../../contexts';\r\nimport {\r\n  isFilterRuleEmpty,\r\n  isSortRuleEmpty,\r\n} from '../../contexts/ExplorerContext.utils';\r\n\r\nexport const useExplorerNavState = (): IExplorerNavState => {\r\n  // contexts\r\n  const { searchString, twinCount, timeSeriesCount, eventCount, tabbedQuery } =\r\n    useExplorerContext();\r\n\r\n  // state\r\n  const [isQueryPanelVisible, setIsQueryPanelVisible] =\r\n    useState<boolean>(false);\r\n  const routeProps = useExplorerRouteProps();\r\n\r\n  // hooks\r\n  const navigation = useNavigation();\r\n\r\n  // callbacks\r\n  const onQueryPanelToggle = useCallback(() => {\r\n    setIsQueryPanelVisible((currentState) => !currentState);\r\n  }, []);\r\n\r\n  const onTabChange = useCallback(\r\n    (_: SelectTabEvent, data: SelectTabData) => {\r\n      navigation?.navigate({\r\n        path: `${routeProps.explorerPath}/${data.value}`,\r\n      });\r\n    },\r\n    [navigation, routeProps.explorerPath],\r\n  );\r\n\r\n  // result\r\n  const getCountString = useCallback(\r\n    (count?: number) => {\r\n      if (count !== undefined && searchString.length > 0) {\r\n        if (count > 100) return '(100+)';\r\n        return `(${count})`;\r\n      }\r\n      return '';\r\n    },\r\n    [searchString],\r\n  );\r\n\r\n  const isAdvancedQueryActive = useMemo(() => {\r\n    const tabName = routeProps.tabName;\r\n    const filterRules = tabbedQuery[tabName].filterRules;\r\n    const sortRules = tabbedQuery[tabName].sortRules;\r\n\r\n    const anyFilterRuleExists = filterRules.some((f) => !isFilterRuleEmpty(f));\r\n    const anySortRuleExists = sortRules.some((s) => !isSortRuleEmpty(s));\r\n    return anyFilterRuleExists || anySortRuleExists;\r\n  }, [routeProps.tabName, tabbedQuery]);\r\n\r\n  const state: IExplorerNavState = useMemo(() => {\r\n    return {\r\n      selectedTab: routeProps.tabName,\r\n      onTabChange,\r\n      isQueryPanelVisible,\r\n      onQueryPanelToggle,\r\n      isAdvancedQueryActive,\r\n      twinCountDisplayString: getCountString(twinCount),\r\n      eventCountDisplayString: getCountString(eventCount),\r\n      timeSeriesCountDisplayString: getCountString(timeSeriesCount),\r\n    };\r\n  }, [\r\n    routeProps.tabName,\r\n    onTabChange,\r\n    isQueryPanelVisible,\r\n    onQueryPanelToggle,\r\n    isAdvancedQueryActive,\r\n    getCountString,\r\n    twinCount,\r\n    eventCount,\r\n    timeSeriesCount,\r\n  ]);\r\n\r\n  return state;\r\n};\r\n","import { IExplorerNavStyles, ExplorerNavClasses } from './ExplorerNav.types';\r\nimport { makeStyles, shorthands } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IExplorerNavStyles =\r\n  makeStyles<ExplorerNavClasses>({\r\n    root: {\r\n      marginBottom: '4px',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n    },\r\n    tab: {\r\n      marginBottom: '0px',\r\n      paddingBottom: '4px',\r\n    },\r\n    tabLabel: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      marginBottom: '0px',\r\n      columnGap: '4px',\r\n    },\r\n    actionButtons: {\r\n      display: 'flex',\r\n      ...shorthands.gap('8px'),\r\n    },\r\n  });\r\n","export { ExplorerNav } from './ExplorerNav.root';\r\n","import React from 'react';\r\nimport { IExplorerPageRenderProps } from './ExplorerPage.types';\r\nimport { Page } from '@do/components';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { TwinsPage } from '../twins';\r\nimport { TimeSeriesPage } from '../timeSeries';\r\nimport { EventList } from '../events/EventList';\r\nimport { ExplorerNav } from '../ExplorerNav';\r\nimport { ExplorerRibbon } from '../ExplorerRibbon';\r\nimport { ExplorerContextProvider } from '../../contexts';\r\nimport { TimeSeriesContextProvider } from '../../contexts/TimeSeriesContext';\r\n\r\nexport const useExplorerPageRender: React.FC<IExplorerPageRenderProps> = (\r\n  props,\r\n) => {\r\n  const { state, styles } = props;\r\n  const { explorerPath } = state;\r\n  return (\r\n    <ExplorerContextProvider>\r\n      <Page ribbon={<ExplorerRibbon />}>\r\n        <ExplorerNav />\r\n        <div className={styles.panels}>\r\n          <Switch>\r\n            <Route path={`${explorerPath}/events`}>\r\n              <EventList />\r\n            </Route>\r\n            <Route path={`${explorerPath}/timeSeries`}>\r\n              <TimeSeriesContextProvider>\r\n                <TimeSeriesPage />\r\n              </TimeSeriesContextProvider>\r\n            </Route>\r\n            <Route path='*'>\r\n              <TwinsPage />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Page>\r\n    </ExplorerContextProvider>\r\n  );\r\n};\r\n","import { useMemo } from 'react';\r\nimport {\r\n  IExplorerPageStateProps,\r\n  IExplorerPageState,\r\n} from './ExplorerPage.types';\r\nimport { ExtensionRoutes } from '@do/core';\r\n\r\nexport const useExplorerPageState = (\r\n  props: IExplorerPageStateProps,\r\n): IExplorerPageState => {\r\n  // contexts\r\n\r\n  // state\r\n  const { artifactId } = props;\r\n\r\n  // hooks\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: IExplorerPageState = useMemo(() => {\r\n    const explorerPath = ExtensionRoutes.explorer(artifactId);\r\n    return {\r\n      explorerPath,\r\n      artifactId,\r\n    };\r\n  }, [artifactId]);\r\n\r\n  return state;\r\n};\r\n","import { IExplorerPageStyles, ExplorerPageClasses } from './ExplorerPage.types';\r\nimport { makeStyles } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IExplorerPageStyles =\r\n  makeStyles<ExplorerPageClasses>({\r\n    header: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n    },\r\n    panels: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      paddingTop: '12px',\r\n    },\r\n  });\r\n","import React from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { IExplorerPageProps } from './ExplorerPage.types';\r\nimport { useExplorerPageRender } from './ExplorerPage.render';\r\nimport { useClassNames } from './ExplorerPage.styles';\r\nimport { useExplorerPageState } from './ExplorerPage.state';\r\nimport { useRouteMatch, useParams } from 'react-router-dom';\r\n\r\nconst MODULE_NAME = 'ExplorerPage';\r\n\r\nexport const ExplorerPage: React.FC<IExplorerPageProps> = (_props) => {\r\n  // get route info for state\r\n  const path = useRouteMatch().path;\r\n  const artifact = useParams<{ artifactObjectId: string }>();\r\n  // get state\r\n  const state = useExplorerPageState({\r\n    path,\r\n    artifactId: artifact.artifactObjectId,\r\n  });\r\n  const debugLogging = useDebugLogging();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state, styles}', MODULE_NAME, {\r\n      state,\r\n      styles,\r\n    });\r\n\r\n  // render the component\r\n  return useExplorerPageRender({ state, styles });\r\n};\r\n\r\nExplorerPage.displayName = MODULE_NAME;\r\n","export { ExplorerPage } from './ExplorerPage';\r\nexport {\r\n  IExplorerPageProps,\r\n  IExplorerBaseRouteProps,\r\n} from './ExplorerPage.types';\r\n","import React from 'react';\r\nimport { IExplorerRibbonRenderProps } from './ExplorerRibbon.types';\r\nimport { Input, ToolbarButton, ToolbarGroup } from '@fluentui/react-components';\r\nimport {\r\n  ArrowClockwise24Regular,\r\n  Search20Regular,\r\n} from '@fluentui/react-icons';\r\nimport { strings, t } from '@do/localization';\r\n\r\nexport enum TestIds {\r\n  SEARCH_INPUT = 'explorer-ribbon-search-input',\r\n}\r\n\r\nexport const useExplorerRibbonRender: React.FC<IExplorerRibbonRenderProps> = (\r\n  props,\r\n) => {\r\n  const { state } = props;\r\n\r\n  return (\r\n    <>\r\n      <ToolbarGroup>\r\n        <ToolbarButton icon={<ArrowClockwise24Regular />}>\r\n          {t(strings.explorer.ribbon.refresh)}\r\n        </ToolbarButton>\r\n      </ToolbarGroup>\r\n      <ToolbarGroup>\r\n        <Input\r\n          contentBefore={<Search20Regular />}\r\n          placeholder={t(strings.explorer.ribbon.search_placeholder)}\r\n          value={state.searchString}\r\n          onChange={(_ex, data) => state.setSearchString(data.value)}\r\n          data-testid={TestIds.SEARCH_INPUT}\r\n        />\r\n      </ToolbarGroup>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IExplorerRibbonProps } from './ExplorerRibbon.types';\r\nimport { useExplorerRibbonRender } from './ExplorerRibbon.render';\r\nimport { useExplorerRibbonState } from './ExplorerRibbon.state';\r\n\r\nconst MODULE_NAME = 'ExplorerRibbon';\r\n\r\nexport const ExplorerRibbon: React.FC<IExplorerRibbonProps> = (_props) => {\r\n  // get state\r\n  const state = useExplorerRibbonState(_props);\r\n\r\n  // render the item\r\n  return useExplorerRibbonRender({ state });\r\n};\r\n\r\nExplorerRibbon.displayName = MODULE_NAME;\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport { useDebounce } from 'use-debounce';\r\nimport { Status } from '@trident/certified-events';\r\nimport { getLogger } from '@do/core';\r\nimport {\r\n  IExplorerRibbonProps,\r\n  IExplorerRibbonState,\r\n} from './ExplorerRibbon.types';\r\nimport { useExplorerContext } from '../../contexts';\r\nimport {\r\n  KeywordSearchActivity,\r\n  QueryFeature,\r\n} from '../../models/QueryCertifiedEvents';\r\n\r\nexport const useExplorerRibbonState = (\r\n  _props: IExplorerRibbonProps,\r\n): IExplorerRibbonState => {\r\n  // contexts\r\n  const { keywordQuery, searchString: contextSearchString } =\r\n    useExplorerContext();\r\n\r\n  // state\r\n  const [searchString, setSearchString] = useState<string>(contextSearchString);\r\n  const [debouncedSearchString] = useDebounce(searchString, 500);\r\n\r\n  // hooks\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    const currentTime = new Date().toISOString();\r\n    getLogger().logStandardizedCertifiedEvent({\r\n      featureName: QueryFeature.KeywordSearch,\r\n      activityName: KeywordSearchActivity.UserFinishedTyping,\r\n      activityStatus: Status.Succeeded,\r\n      operationStartTime: currentTime,\r\n      operationEndTime: currentTime,\r\n    });\r\n    keywordQuery(debouncedSearchString);\r\n  }, [debouncedSearchString, keywordQuery]);\r\n\r\n  // result\r\n  const state: IExplorerRibbonState = useMemo(() => {\r\n    return {\r\n      searchString,\r\n      setSearchString,\r\n    };\r\n  }, [searchString]);\r\n\r\n  return state;\r\n};\r\n","export { ExplorerRibbon } from './ExplorerRibbon.root';\r\nexport { IExplorerRibbonProps } from './ExplorerRibbon.types';\r\n","import React from 'react';\r\nimport { IQueryPanelRenderProps } from './QueryPanel.types';\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerHeaderTitle,\r\n} from '@fluentui/react-components/unstable';\r\nimport {\r\n  Accordion,\r\n  AccordionHeader,\r\n  AccordionItem,\r\n  AccordionPanel,\r\n  Button,\r\n  Combobox,\r\n  Field,\r\n  Label,\r\n  Link,\r\n  MessageBar,\r\n  MessageBarBody,\r\n  MessageBarTitle,\r\n  Option,\r\n  Tooltip,\r\n} from '@fluentui/react-components';\r\nimport {\r\n  Dismiss16Regular,\r\n  Info16Regular,\r\n  Add24Regular,\r\n} from '@fluentui/react-icons';\r\nimport { strings, t } from '@do/localization';\r\nimport { FilterRow, SortRow } from '@do/components';\r\n\r\nexport enum QueryPanelTestIds {\r\n  QueryPanelRoot = 'query-panel-root',\r\n  ModelPicker = 'query-panel-model-picker',\r\n  ModelOption = 'query-panel-model-option',\r\n  FilterRowPrefix = 'query-panel-filter-row',\r\n  SortRow = 'query-panel-sort-row',\r\n  QueryButton = 'query-panel-query-button',\r\n  ErrorBanner = 'query-panel-error-banner',\r\n}\r\n\r\nexport const useQueryPanelRender: React.FC<IQueryPanelRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  return (\r\n    <Drawer\r\n      position='end'\r\n      open={state.isVisible}\r\n      size={'large'}\r\n      onOpenChange={state.onClose}\r\n      data-testid={QueryPanelTestIds.QueryPanelRoot}\r\n    >\r\n      <DrawerHeader>\r\n        <DrawerHeaderTitle\r\n          action={\r\n            <Button\r\n              appearance='subtle'\r\n              aria-label={t(strings.common.close)}\r\n              icon={<Dismiss16Regular />}\r\n              onClick={state.onClose}\r\n            />\r\n          }\r\n        >\r\n          {t(strings.explorer.query_panel.title)}\r\n        </DrawerHeaderTitle>\r\n      </DrawerHeader>\r\n      <DrawerBody className={styles.body}>\r\n        {t(strings.explorer.query_panel.subtitle)}\r\n        {state.queryPanelErrorBanner && (\r\n          <MessageBar\r\n            intent='error'\r\n            data-testid={QueryPanelTestIds.ErrorBanner}\r\n          >\r\n            <MessageBarBody>\r\n              <MessageBarTitle>\r\n                {state.queryPanelErrorBanner.errorCode}\r\n              </MessageBarTitle>\r\n              {state.queryPanelErrorBanner.errorMessage}{' '}\r\n              <Link>{t(strings.common.learn_more)}</Link>\r\n            </MessageBarBody>\r\n          </MessageBar>\r\n        )}\r\n        {state.selectedTab === 'twins' && (\r\n          <Field>\r\n            <div className={styles.tooltip}>\r\n              <Label>\r\n                {t(strings.explorer.query_panel.group_section_title)}\r\n              </Label>\r\n              <Tooltip\r\n                content={{\r\n                  children: t(strings.explorer.query_panel.tooltip_content),\r\n                }}\r\n                relationship='label'\r\n              >\r\n                <Info16Regular tabIndex={0} />\r\n              </Tooltip>\r\n            </div>\r\n            <Combobox\r\n              className={styles.combobox}\r\n              placeholder={t(\r\n                strings.explorer.query_panel.group_picker_placeholder,\r\n              )}\r\n              value={state.modelName}\r\n              onOptionSelect={(_, data) => {\r\n                data.optionValue && state.setModel(data.optionValue);\r\n              }}\r\n              data-testid={QueryPanelTestIds.ModelPicker}\r\n            >\r\n              {state.modelOptions.map((option) => (\r\n                <Option\r\n                  key={option.modelId}\r\n                  data-testid={QueryPanelTestIds.ModelOption}\r\n                >\r\n                  {option.modelName}\r\n                </Option>\r\n              ))}\r\n            </Combobox>\r\n          </Field>\r\n        )}\r\n        <Accordion\r\n          multiple\r\n          defaultOpenItems={[\r\n            t(strings.explorer.query_panel.filter_section_title),\r\n            t(strings.explorer.query_panel.sort_section_title),\r\n          ]}\r\n        >\r\n          <AccordionItem\r\n            value={t(strings.explorer.query_panel.filter_section_title)}\r\n          >\r\n            <AccordionHeader>\r\n              {t(strings.explorer.query_panel.filter_section_title)}\r\n            </AccordionHeader>\r\n            <AccordionPanel>\r\n              {state.filterRules.map((rule, index) => {\r\n                return (\r\n                  <FilterRow\r\n                    key={`filter${index}`}\r\n                    rowIndex={index}\r\n                    totalRows={state.filterRules.length}\r\n                    propertyOptions={state.propertyOptions}\r\n                    propertyType={rule.type}\r\n                    property={rule.property}\r\n                    operator={rule.operator}\r\n                    value={rule.value}\r\n                    setProperty={state.setFilterProperty}\r\n                    setOperator={state.setFilterOperator}\r\n                    setValue={state.setFilterValue}\r\n                    deleteFilterRule={state.deleteFilterRule}\r\n                    allowDeleteFinalRow={false}\r\n                    logicalOperator={rule.logicalOperator}\r\n                    setLogicalOperator={state.setFilterLogicalOperator}\r\n                    timeSeriesStartTimeUTC={rule.timeSeriesStartTimeUTC ?? ''}\r\n                    setTimeSeriesStartTimeUTC={\r\n                      state.setFilterTimeSeriesStartTimeUTC\r\n                    }\r\n                    timeSeriesEndTimeUTC={rule.timeSeriesEndTimeUTC ?? ''}\r\n                    setTimeSeriesEndTimeUTC={\r\n                      state.setFilterTimeSeriesEndTimeUTC\r\n                    }\r\n                    setFilterValid={state.setFilterValid}\r\n                  />\r\n                );\r\n              })}\r\n              <Button icon={<Add24Regular />} onClick={state.addFilterRule}>\r\n                {t(strings.explorer.query_panel.add_filter_button)}\r\n              </Button>\r\n            </AccordionPanel>\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            value={t(strings.explorer.query_panel.sort_section_title)}\r\n          >\r\n            <AccordionHeader>\r\n              {t(strings.explorer.query_panel.sort_section_title)}\r\n            </AccordionHeader>\r\n            <AccordionPanel>\r\n              {/* NOTE: Hardcoded to one sort rule for now */}\r\n              <SortRow\r\n                propertyOptions={state.propertyOptions}\r\n                property={state.sortRules[0].property}\r\n                order={state.sortRules[0].order}\r\n                setProperty={state.setSortProperty}\r\n                setOrder={state.setSortOrder}\r\n                propertyValidationMessage={state.propertyValidationMessage}\r\n                orderValidationMessage={state.orderValidationMessage}\r\n              />\r\n            </AccordionPanel>\r\n          </AccordionItem>\r\n        </Accordion>\r\n      </DrawerBody>\r\n      <DrawerFooter>\r\n        <Button\r\n          appearance='primary'\r\n          onClick={state.onQuery}\r\n          disabled={state.disableApplyQueryButton}\r\n          data-testid={QueryPanelTestIds.QueryButton}\r\n        >\r\n          {t(strings.explorer.query_panel.primary_button_title)}\r\n        </Button>\r\n        <Button onClick={state.onClose}>{t(strings.common.cancel)}</Button>\r\n      </DrawerFooter>\r\n    </Drawer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IQueryPanelProps } from './QueryPanel.types';\r\nimport { useQueryPanelRender } from './QueryPanel.render';\r\nimport { useClassNames } from './QueryPanel.styles';\r\nimport { useQueryPanelState } from './QueryPanel.state';\r\n\r\nconst MODULE_NAME = 'QueryPanel';\r\n\r\nexport const QueryPanel: React.FC<IQueryPanelProps> = (props) => {\r\n  // get state\r\n  const state = useQueryPanelState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useQueryPanelRender({ state, styles });\r\n};\r\n\r\nQueryPanel.displayName = MODULE_NAME;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Status } from '@trident/certified-events';\r\nimport {\r\n  AttributeSuggestion,\r\n  ModelAttribute,\r\n  ModelTimeseriesDataPoint,\r\n  TimeSeriesDataPointSuggestion,\r\n  getLogger,\r\n  useDebugLogging,\r\n} from '@do/core';\r\nimport {\r\n  FilterRule,\r\n  IQueryPanelProps,\r\n  IQueryPanelState,\r\n  QueryPanelErrorBanner,\r\n  SortRule,\r\n  eventPropertyOptions,\r\n  timeSeriesPropertyOptions,\r\n  twinPropertyOptions,\r\n} from './QueryPanel.types';\r\nimport { strings, t } from '@do/localization';\r\nimport { useExplorerRouteProps } from '../../hooks/routeProps/useExplorerRouteProps';\r\nimport { useExplorerContext } from '../../contexts';\r\nimport {\r\n  getAdvancedSearchQuery,\r\n  isFilterRuleEmpty,\r\n  isSortRuleEmpty,\r\n} from '../../contexts/ExplorerContext.utils';\r\nimport {\r\n  AdvancedQueryActivity,\r\n  QueryFeature,\r\n} from '../../models/QueryCertifiedEvents';\r\nimport {\r\n  Property,\r\n  ValueType,\r\n  SqlTypeFilterRowTypeMapping,\r\n} from '@do/components';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'QueryPanel.state';\r\n\r\nexport const useQueryPanelState = (\r\n  props: IQueryPanelProps,\r\n): IQueryPanelState => {\r\n  const {\r\n    twinsAdvancedQuery,\r\n    timeSeriesAdvancedQuery,\r\n    eventsAdvancedQuery,\r\n    tabbedQuery,\r\n    setQuery,\r\n    attributeSuggestions,\r\n    timeSeriesDataPointSuggestions,\r\n    models,\r\n    selectedModel,\r\n    getAndSetModel,\r\n  } = useExplorerContext();\r\n  const routeProps = useExplorerRouteProps();\r\n\r\n  // state\r\n  const [modelName, setModelName] = useState<string>('');\r\n  const [filterRules, setFilterRules] = useState<FilterRule[]>(\r\n    tabbedQuery[routeProps.tabName].filterRules,\r\n  );\r\n  const [sortRules, setSortRules] = useState<SortRule[]>(\r\n    tabbedQuery[routeProps.tabName].sortRules,\r\n  );\r\n  const [sortPropertyValidationMessage, setSortPropertyValidationMessage] =\r\n    useState<string | undefined>(undefined);\r\n  const [sortOrderValidationMessage, setSortOrderValidationMessage] = useState<\r\n    string | undefined\r\n  >(undefined);\r\n  const [queryPanelErrorBanner, setQueryPanelErrorBanner] = useState<\r\n    QueryPanelErrorBanner | undefined\r\n  >(undefined);\r\n  const [disableApplyQueryButton, setDisableApplyQueryButton] =\r\n    useState<boolean>(true);\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  const propertyOptions = useMemo(() => {\r\n    if (routeProps.tabName === 'twins') {\r\n      let options: Property[] = twinPropertyOptions;\r\n      // If no model is selected, show all attributes and timeseries data points\r\n      if (!modelName) {\r\n        if (attributeSuggestions.state === 'success') {\r\n          options = options.concat(\r\n            attributeSuggestions.data.map(\r\n              (attributeSuggestion: AttributeSuggestion): Property => ({\r\n                name: attributeSuggestion.identifier,\r\n                type: SqlTypeFilterRowTypeMapping[\r\n                  attributeSuggestion.valueType as ValueType\r\n                ],\r\n                valueType: attributeSuggestion.valueType as ValueType,\r\n                source: 'Attribute',\r\n              }),\r\n            ),\r\n          );\r\n        }\r\n        if (timeSeriesDataPointSuggestions.state === 'success') {\r\n          options = options.concat(\r\n            timeSeriesDataPointSuggestions.data.map(\r\n              (\r\n                timeSeriesDataPointSuggestion: TimeSeriesDataPointSuggestion,\r\n              ): Property => ({\r\n                name: timeSeriesDataPointSuggestion.identifier,\r\n                type: 'timeSeries',\r\n                valueType: timeSeriesDataPointSuggestion.valueType as ValueType,\r\n                source: 'TimeSeries',\r\n              }),\r\n            ),\r\n          );\r\n        }\r\n      }\r\n      if (selectedModel?.state === 'success') {\r\n        options = options.concat(\r\n          selectedModel.data.attributes.map(\r\n            (attribute: ModelAttribute): Property => ({\r\n              name: attribute.name,\r\n              type: SqlTypeFilterRowTypeMapping[\r\n                attribute.valueType as ValueType\r\n              ],\r\n              valueType: attribute.valueType as ValueType,\r\n              source: 'Attribute',\r\n            }),\r\n          ),\r\n        );\r\n\r\n        options = options.concat(\r\n          selectedModel.data.timeseriesDataPoints.map(\r\n            (timeSeriesDataPoint: ModelTimeseriesDataPoint): Property => ({\r\n              name: timeSeriesDataPoint.timeSeriesDataPointId,\r\n              type: 'timeSeries',\r\n              valueType: timeSeriesDataPoint.valueType as ValueType,\r\n              source: 'TimeSeries',\r\n            }),\r\n          ),\r\n        );\r\n      }\r\n      return options;\r\n    } else if (routeProps.tabName === 'events') {\r\n      return eventPropertyOptions;\r\n    }\r\n    return timeSeriesPropertyOptions;\r\n  }, [\r\n    modelName,\r\n    attributeSuggestions,\r\n    timeSeriesDataPointSuggestions,\r\n    selectedModel,\r\n    routeProps.tabName,\r\n  ]);\r\n\r\n  const modelOptions = useMemo(() => {\r\n    if (models?.state === 'success') {\r\n      return models.data.data;\r\n    }\r\n    return [];\r\n  }, [models]);\r\n\r\n  const setModel = useCallback(\r\n    (modelName: string) => {\r\n      setModelName(modelName);\r\n      const modelInfo = modelOptions.find(\r\n        (model) => model.modelName === modelName,\r\n      );\r\n      modelInfo && getAndSetModel(modelInfo.modelId);\r\n    },\r\n    [getAndSetModel, modelOptions],\r\n  );\r\n\r\n  // TODO: Remove hardcoded 0-index when supporting multiple sort rules\r\n  const sortPropertyValidation = useCallback(() => {\r\n    // Only validate if order is not empty\r\n    let validationMessage = undefined;\r\n    if (sortRules[0].property.length === 0 && sortRules[0].order.length > 0) {\r\n      validationMessage = t(\r\n        strings.explorer.query_panel.empty_property_validation_message,\r\n      );\r\n    }\r\n    setSortPropertyValidationMessage(validationMessage);\r\n    return validationMessage;\r\n  }, [sortRules]);\r\n\r\n  // TODO: Remove hardcoded 0-index when supporting multiple sort rules\r\n  const sortOrderValidation = useCallback(() => {\r\n    // Only validate if property is not empty\r\n    let validationMessage = undefined;\r\n    if (sortRules[0].order.length === 0 && sortRules[0].property.length > 0) {\r\n      validationMessage = t(\r\n        strings.explorer.query_panel.empty_order_validation_message,\r\n      );\r\n    }\r\n    setSortOrderValidationMessage(validationMessage);\r\n    return validationMessage;\r\n  }, [sortRules]);\r\n\r\n  const onQuery = useCallback(async () => {\r\n    const propertyError = sortPropertyValidation();\r\n    const orderError = sortOrderValidation();\r\n\r\n    if (!propertyError && !orderError) {\r\n      const currentTime = new Date().toISOString();\r\n      getLogger().logStandardizedCertifiedEvent({\r\n        featureName: QueryFeature.AdvancedQuery,\r\n        activityName: AdvancedQueryActivity.ApplyQueryClicked,\r\n        activityStatus: Status.Succeeded,\r\n        operationStartTime: currentTime,\r\n        operationEndTime: currentTime,\r\n      });\r\n\r\n      const modelInfo = modelOptions.find(\r\n        (model) => model.modelName === modelName,\r\n      );\r\n      const model = modelInfo ? [modelInfo.modelId] : undefined;\r\n      setQuery(routeProps.tabName, filterRules, sortRules, [modelName]);\r\n      const queryObject = getAdvancedSearchQuery(\r\n        routeProps.tabName,\r\n        filterRules,\r\n        sortRules,\r\n        model,\r\n      );\r\n\r\n      switch (routeProps.tabName) {\r\n        case 'twins':\r\n          twinsAdvancedQuery(queryObject);\r\n          break;\r\n        case 'timeSeries':\r\n          timeSeriesAdvancedQuery(queryObject);\r\n          break;\r\n        case 'events':\r\n          eventsAdvancedQuery(queryObject);\r\n          break;\r\n      }\r\n\r\n      props.onClose();\r\n    }\r\n  }, [\r\n    eventsAdvancedQuery,\r\n    filterRules,\r\n    modelName,\r\n    modelOptions,\r\n    props,\r\n    routeProps.tabName,\r\n    setQuery,\r\n    sortOrderValidation,\r\n    sortPropertyValidation,\r\n    sortRules,\r\n    timeSeriesAdvancedQuery,\r\n    twinsAdvancedQuery,\r\n  ]);\r\n\r\n  const setFilterLogicalOperator = useCallback(\r\n    (index: number, logicalOperator: string) => {\r\n      setFilterRules((currentFilterRules) => {\r\n        const newFilterRules = [...currentFilterRules];\r\n        newFilterRules[index].logicalOperator = logicalOperator;\r\n        return newFilterRules;\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const setFilterProperty = useCallback(\r\n    (index: number, property: string, valueType: ValueType) => {\r\n      setFilterRules((currentFilterRules) => {\r\n        const newFilterRules = [...currentFilterRules];\r\n        const propertyOption = propertyOptions.find(\r\n          (prop) => prop.name === property && prop.valueType === valueType,\r\n        );\r\n\r\n        // Reset the operator and value if the property type changes\r\n        const resetOperatorAndValue =\r\n          propertyOption && propertyOption.type !== newFilterRules[index].type;\r\n        if (resetOperatorAndValue) {\r\n          newFilterRules[index].operator = '';\r\n          newFilterRules[index].value = '';\r\n        }\r\n\r\n        if (propertyOption !== undefined) {\r\n          newFilterRules[index].property = propertyOption.name;\r\n          newFilterRules[index].type = propertyOption.type;\r\n          newFilterRules[index].valueType = propertyOption.valueType;\r\n          newFilterRules[index].source = propertyOption.source ?? undefined;\r\n        }\r\n        return newFilterRules;\r\n      });\r\n    },\r\n    [propertyOptions],\r\n  );\r\n\r\n  const setFilterOperator = useCallback((index: number, operator: string) => {\r\n    setFilterRules((currentFilterRules) => {\r\n      const newFilterRules = [...currentFilterRules];\r\n      newFilterRules[index].operator = operator;\r\n      return newFilterRules;\r\n    });\r\n  }, []);\r\n\r\n  const setFilterValue = useCallback((index: number, value: string) => {\r\n    setFilterRules((currentFilterRules) => {\r\n      const newFilterRules = [...currentFilterRules];\r\n      newFilterRules[index].value = value;\r\n      return newFilterRules;\r\n    });\r\n  }, []);\r\n\r\n  const setFilterTimeSeriesStartTimeUTC = useCallback(\r\n    (index: number, value: string) => {\r\n      setFilterRules((currentFilterRules) => {\r\n        const newFilterRules = [...currentFilterRules];\r\n        newFilterRules[index].timeSeriesStartTimeUTC = value;\r\n        return newFilterRules;\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const setFilterTimeSeriesEndTimeUTC = useCallback(\r\n    (index: number, value: string) => {\r\n      setFilterRules((currentFilterRules) => {\r\n        const newFilterRules = [...currentFilterRules];\r\n        newFilterRules[index].timeSeriesEndTimeUTC = value;\r\n        return newFilterRules;\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const setFilterValid = useCallback((index: number, value: boolean) => {\r\n    setFilterRules((currentFilterRules) => {\r\n      const newFilterRules = [...currentFilterRules];\r\n      newFilterRules[index].valid = value;\r\n      return newFilterRules;\r\n    });\r\n  }, []);\r\n\r\n  const addFilterRule = useCallback(() => {\r\n    setFilterRules((currentFilterRules) => {\r\n      const modifiedFilterRules = [...currentFilterRules];\r\n      modifiedFilterRules.push({\r\n        type: 'string',\r\n        property: '',\r\n        operator: '',\r\n        value: '',\r\n        logicalOperator: 'and',\r\n      });\r\n      return modifiedFilterRules;\r\n    });\r\n  }, []);\r\n\r\n  const deleteFilterRule = useCallback((index: number) => {\r\n    setFilterRules((currentFilterRules) => {\r\n      const modifiedFilterRules = [...currentFilterRules];\r\n      modifiedFilterRules.splice(index, 1);\r\n      return modifiedFilterRules;\r\n    });\r\n  }, []);\r\n\r\n  // TODO: Remove hardcoded 0-index when supporting multiple sort rules\r\n  const setSortProperty = useCallback(\r\n    (property: string) => {\r\n      const newSortRules = [...sortRules];\r\n      newSortRules[0].property = property;\r\n      setSortRules(newSortRules);\r\n      sortPropertyValidation();\r\n    },\r\n    [sortPropertyValidation, sortRules],\r\n  );\r\n\r\n  // TODO: Remove hardcoded 0-index when supporting multiple sort rules\r\n  const setSortOrder = useCallback(\r\n    (order: string) => {\r\n      const newSortRules = [...sortRules];\r\n      newSortRules[0].order = order;\r\n      setSortRules(newSortRules);\r\n      sortOrderValidation();\r\n    },\r\n    [sortOrderValidation, sortRules],\r\n  );\r\n\r\n  // side effects\r\n  // Query panel error banner displays errors internal server errors from API\r\n  // calls used to populate the query panel dropdown selections\r\n  useEffect(() => {\r\n    if (attributeSuggestions.state === 'error') {\r\n      setQueryPanelErrorBanner({\r\n        errorMessage: attributeSuggestions.errorMessage,\r\n        errorCode: attributeSuggestions.errorCode,\r\n      });\r\n    } else if (timeSeriesDataPointSuggestions.state === 'error') {\r\n      setQueryPanelErrorBanner({\r\n        errorMessage: timeSeriesDataPointSuggestions.errorMessage,\r\n        errorCode: timeSeriesDataPointSuggestions.errorCode,\r\n      });\r\n    } else if (selectedModel?.state === 'error') {\r\n      setQueryPanelErrorBanner({\r\n        errorMessage: selectedModel.errorMessage,\r\n        errorCode: selectedModel.errorCode,\r\n      });\r\n    } else {\r\n      setQueryPanelErrorBanner(undefined);\r\n    }\r\n  }, [attributeSuggestions, timeSeriesDataPointSuggestions, selectedModel]);\r\n\r\n  useEffect(() => {\r\n    // Reset the filters and sorts when the tab changes\r\n    setFilterRules(tabbedQuery[routeProps.tabName].filterRules);\r\n    setSortRules(tabbedQuery[routeProps.tabName].sortRules);\r\n    if (routeProps.tabName === 'twins') {\r\n      // Currently only support filtering by one model\r\n      const modelName = tabbedQuery[routeProps.tabName].models?.[0];\r\n      modelName && setModel(modelName);\r\n    }\r\n  }, [routeProps.tabName, setModel, tabbedQuery]);\r\n\r\n  useEffect(() => {\r\n    let disableApplyQueryButton = false;\r\n    filterRules.forEach((filterRule: FilterRule, _index: any) => {\r\n      if (\r\n        !isFilterRuleEmpty(filterRule) &&\r\n        (!filterRule.value ||\r\n          !filterRule.property ||\r\n          !filterRule.operator ||\r\n          !filterRule.valid)\r\n      ) {\r\n        disableApplyQueryButton = true;\r\n        return;\r\n      }\r\n      if (filterRule.type === 'timeSeries') {\r\n        if (\r\n          !filterRule.timeSeriesStartTimeUTC ||\r\n          !filterRule.timeSeriesEndTimeUTC\r\n        ) {\r\n          disableApplyQueryButton = true;\r\n          return;\r\n        }\r\n      }\r\n    });\r\n    sortRules.forEach((sortRule: SortRule) => {\r\n      if (\r\n        !isSortRuleEmpty(sortRule) &&\r\n        (!sortRule.property || !sortRule.order)\r\n      ) {\r\n        disableApplyQueryButton = true;\r\n        return;\r\n      }\r\n    });\r\n\r\n    setDisableApplyQueryButton(disableApplyQueryButton);\r\n  }, [\r\n    filterRules,\r\n    sortOrderValidationMessage,\r\n    sortPropertyValidationMessage,\r\n    sortRules,\r\n  ]);\r\n\r\n  // result\r\n  const state: IQueryPanelState = useMemo(() => {\r\n    return {\r\n      isVisible: props.isVisible,\r\n      onClose: props.onClose,\r\n      propertyOptions,\r\n      filterRules,\r\n      setFilterLogicalOperator,\r\n      setFilterProperty,\r\n      setFilterOperator,\r\n      setFilterValue,\r\n      setFilterTimeSeriesStartTimeUTC,\r\n      setFilterTimeSeriesEndTimeUTC,\r\n      addFilterRule,\r\n      deleteFilterRule,\r\n      sortRules,\r\n      setSortProperty,\r\n      setSortOrder,\r\n      propertyValidationMessage: sortPropertyValidationMessage,\r\n      setPropertyValidationMessage: setSortPropertyValidationMessage,\r\n      orderValidationMessage: sortOrderValidationMessage,\r\n      setOrderValidationMessage: setSortOrderValidationMessage,\r\n      onQuery,\r\n      queryPanelErrorBanner,\r\n      setQueryPanelErrorBanner,\r\n      selectedTab: routeProps.tabName,\r\n      modelName: modelName,\r\n      modelOptions,\r\n      setModel,\r\n      disableApplyQueryButton,\r\n      setFilterValid,\r\n    };\r\n  }, [\r\n    props.isVisible,\r\n    props.onClose,\r\n    propertyOptions,\r\n    filterRules,\r\n    setFilterLogicalOperator,\r\n    setFilterProperty,\r\n    setFilterOperator,\r\n    setFilterValue,\r\n    setFilterTimeSeriesStartTimeUTC,\r\n    setFilterTimeSeriesEndTimeUTC,\r\n    addFilterRule,\r\n    deleteFilterRule,\r\n    sortRules,\r\n    setSortProperty,\r\n    setSortOrder,\r\n    sortPropertyValidationMessage,\r\n    sortOrderValidationMessage,\r\n    onQuery,\r\n    queryPanelErrorBanner,\r\n    routeProps.tabName,\r\n    modelName,\r\n    modelOptions,\r\n    setModel,\r\n    disableApplyQueryButton,\r\n    setFilterValid,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import { IQueryPanelStyles, QueryPanelClasses } from './QueryPanel.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IQueryPanelStyles =\r\n  makeStyles<QueryPanelClasses>({\r\n    body: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      fontWeight: tokens.fontWeightSemibold,\r\n      ...shorthands.gap('8px'),\r\n    },\r\n    tooltip: {\r\n      display: 'flex',\r\n      justifyContent: 'left',\r\n      alignItems: 'center',\r\n      marginTop: '12px',\r\n      marginBottom: '4px',\r\n      fontWeight: tokens.fontWeightSemibold,\r\n      ...shorthands.gap('4px'),\r\n    },\r\n    combobox: {\r\n      width: '25%',\r\n    },\r\n  });\r\n","import { ModelInformation } from '@do/core';\r\nimport {\r\n  FilterRowSource,\r\n  FilterRowType,\r\n  Property,\r\n  ValueType,\r\n} from '@do/components';\r\n\r\n/** input parameters to QueryPanel */\r\nexport interface IQueryPanelProps {\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\n/** state values used for rendering the item */\r\nexport type IQueryPanelState = {\r\n  propertyOptions: Property[];\r\n  filterRules: FilterRule[];\r\n  setFilterProperty: (\r\n    index: number,\r\n    property: string,\r\n    valueType: ValueType,\r\n  ) => void;\r\n  setFilterOperator: (index: number, operator: string) => void;\r\n  setFilterValue: (index: number, value: string) => void;\r\n  setFilterLogicalOperator: (index: number, logicalOperator: string) => void;\r\n  setFilterTimeSeriesStartTimeUTC: (index: number, time: string) => void;\r\n  setFilterTimeSeriesEndTimeUTC: (index: number, time: string) => void;\r\n  addFilterRule: () => void;\r\n  deleteFilterRule: (index: number) => void;\r\n  sortRules: SortRule[];\r\n  setSortProperty: (property: string) => void;\r\n  setSortOrder: (order: string) => void;\r\n  propertyValidationMessage: string | undefined;\r\n  setPropertyValidationMessage: (message: string | undefined) => void;\r\n  orderValidationMessage: string | undefined;\r\n  setOrderValidationMessage: (message: string | undefined) => void;\r\n  queryPanelErrorBanner: QueryPanelErrorBanner | undefined;\r\n  setQueryPanelErrorBanner: (error: QueryPanelErrorBanner | undefined) => void;\r\n  onQuery: () => void;\r\n  selectedTab: string;\r\n  modelName: string;\r\n  modelOptions: ModelInformation[];\r\n  setModel: (modelName: string) => void;\r\n  disableApplyQueryButton: boolean;\r\n  setFilterValid: (index: number, isValid: boolean) => void;\r\n} & Pick<IQueryPanelProps, 'isVisible' | 'onClose'>;\r\n\r\n/** the props send to the render function */\r\nexport type IQueryPanelRenderProps = {\r\n  state: IQueryPanelState;\r\n  styles: IQueryPanelStyles;\r\n};\r\n\r\n/** the names of styling classes for QueryPanel */\r\nexport type QueryPanelClasses = 'body' | 'tooltip' | 'combobox';\r\n/** the computed styles object output from the styles hook */\r\nexport type IQueryPanelStyles = Record<QueryPanelClasses, string>;\r\n\r\nexport type FilterRule = {\r\n  property: string;\r\n  type: FilterRowType;\r\n  operator: string;\r\n  value: string;\r\n  logicalOperator?: string;\r\n  source?: FilterRowSource;\r\n  valueType?: ValueType;\r\n  timeSeriesStartTimeUTC?: string;\r\n  timeSeriesEndTimeUTC?: string;\r\n  valid?: boolean;\r\n};\r\n\r\nexport type SortRule = {\r\n  property: string;\r\n  order: string;\r\n};\r\n\r\nexport type QueryPanelErrorBanner = {\r\n  errorCode: string;\r\n  errorMessage: string;\r\n};\r\n\r\n// Constant properties from Twin, Event, and TimeSeriesDataPoint schema\r\nexport const twinPropertyOptions: Property[] = [\r\n  {\r\n    name: 'DisplayName',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'TwinId',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'Description',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'CreatedTimeUTC',\r\n    type: 'date',\r\n    valueType: 'DateTime',\r\n  },\r\n  {\r\n    name: 'UpdatedTimeUTC',\r\n    type: 'date',\r\n    valueType: 'DateTime',\r\n  },\r\n  {\r\n    name: 'ModelId',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  // { name: 'state', type: 'string' }, // There is no state column in this table. Is this supposed to be isDeleted?\r\n  // { name: 'IsDeleted', type: 'boolean' }, // Should we allow filtering by isDeleted?\r\n];\r\nexport const eventPropertyOptions: Property[] = [\r\n  {\r\n    name: 'TwinId',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'EventId',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'EventType',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'SourceTimeUTC',\r\n    type: 'date',\r\n    valueType: 'DateTime',\r\n  },\r\n  {\r\n    name: 'CreatedTimeUTC',\r\n    type: 'date',\r\n    valueType: 'DateTime',\r\n  },\r\n  {\r\n    name: 'Source',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'Message',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'Severity',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n];\r\nexport const timeSeriesPropertyOptions: Property[] = [\r\n  {\r\n    name: 'TimeSeriesDataPointId',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'DataPointSource',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'ValueType',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'DisplayName',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'ValueUOM',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'Description',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  {\r\n    name: 'TwinId',\r\n    type: 'string',\r\n    valueType: 'String',\r\n  },\r\n  // { name: 'IsDeleted', type: 'boolean' }, // Should we allow filtering by isDeleted?\r\n  {\r\n    name: 'CreatedTimeUTC',\r\n    type: 'date',\r\n    valueType: 'DateTime',\r\n  },\r\n  {\r\n    name: 'UpdatedTimeUTC',\r\n    type: 'date',\r\n    valueType: 'DateTime',\r\n  },\r\n];\r\n","export { QueryPanel } from './QueryPanel.root';\r\nexport { IQueryPanelProps } from './QueryPanel.types';\r\n","import React from 'react';\r\nimport { IEventListRenderProps, TwinEvent } from './EventList.types';\r\nimport {\r\n  DataGrid,\r\n  DataGridBody,\r\n  DataGridCell,\r\n  DataGridHeader,\r\n  DataGridHeaderCell,\r\n  DataGridRow,\r\n  Link,\r\n  MessageBar,\r\n  MessageBarBody,\r\n  MessageBarTitle,\r\n  Skeleton,\r\n  SkeletonItem,\r\n  TableColumnDefinition,\r\n  createTableColumn,\r\n} from '@fluentui/react-components';\r\nimport { EmptyContents, PageFooter } from '@do/components';\r\nimport { t, strings } from '@do/localization';\r\nimport { EventDetails } from '../../twins/details/TwinEventsPanel/components/EventsList/components/EventDetails';\r\nimport { PAGE_SIZE } from '../../twins/TwinList/TwinList.state';\r\n\r\nexport enum EventListTestIds {\r\n  Row = 'event-row',\r\n  Skeleton = 'events-skeleton',\r\n}\r\n\r\nexport enum EventListTestIds {\r\n  EventType = 'Event type',\r\n  EventId = 'Event ID',\r\n  TwinId = 'TwinId',\r\n  Source = 'Source',\r\n  Message = 'Message',\r\n  Severity = 'Severity',\r\n  Timestamp = 'Timestamp',\r\n  CreatedTimestamp = 'CreatedTimestamp',\r\n  ErrorBanner = 'Error banner',\r\n}\r\n\r\nexport const useEventListRender: React.FC<IEventListRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  const columns: TableColumnDefinition<any>[] = [\r\n    createTableColumn({\r\n      columnId: 'EventName',\r\n      renderCell: (event: TwinEvent) => {\r\n        return event.eventType;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={EventListTestIds.EventType}\r\n          >\r\n            {t(strings.explorer.events.event_list.event_type)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'EventId',\r\n      renderCell: (event: TwinEvent) => {\r\n        return event.eventId;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={EventListTestIds.EventId}\r\n          >\r\n            {t(strings.explorer.events.event_list.event_id)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'TwinId',\r\n      renderCell: (event: TwinEvent) => {\r\n        return event.twinId;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={EventListTestIds.TwinId}\r\n          >\r\n            {t(strings.explorer.events.event_list.twin_id)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'source',\r\n      renderCell: (event: TwinEvent) => {\r\n        return event.source;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={EventListTestIds.Source}\r\n          >\r\n            {t(strings.explorer.events.event_list.source)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'message',\r\n      renderCell: (event: TwinEvent) => {\r\n        return event.message;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={EventListTestIds.Message}\r\n          >\r\n            {t(strings.explorer.events.event_list.message)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'severity',\r\n      renderCell: (event: TwinEvent) => {\r\n        return event.severity;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={EventListTestIds.Severity}\r\n          >\r\n            {t(strings.explorer.events.event_list.severity)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'created_timestamp',\r\n      renderCell: (event: TwinEvent) => {\r\n        return event.createdTimestamp?.toUTCString();\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={EventListTestIds.CreatedTimestamp}\r\n          >\r\n            {t(strings.explorer.events.event_list.created_timestamp)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'timestamp',\r\n      renderCell: (event: TwinEvent) => {\r\n        return event.sourceTimestamp?.toUTCString();\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={EventListTestIds.Timestamp}\r\n          >\r\n            {t(strings.explorer.events.event_list.timestamp)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {state.errorMessage && (\r\n        <MessageBar\r\n          className={styles.errorBanner}\r\n          intent='error'\r\n          data-testid={EventListTestIds.ErrorBanner}\r\n        >\r\n          <MessageBarBody>\r\n            <MessageBarTitle>{state.errorMessage}</MessageBarTitle>\r\n            <Link>{t(strings.common.learn_more)}</Link>\r\n          </MessageBarBody>\r\n        </MessageBar>\r\n      )}\r\n      {!state.isLoading && !state.events.length ? (\r\n        <EmptyContents\r\n          header={t(strings.explorer.events.event_list.no_data_message)}\r\n        />\r\n      ) : (\r\n        <>\r\n          <DataGrid\r\n            items={!state.isLoading ? state.events : Array(PAGE_SIZE).fill({})}\r\n            columns={columns}\r\n            getRowId={(event: TwinEvent) => event.eventId}\r\n          >\r\n            <DataGridHeader>\r\n              <DataGridRow>\r\n                {({ renderHeaderCell }) => (\r\n                  <DataGridHeaderCell>{renderHeaderCell()}</DataGridHeaderCell>\r\n                )}\r\n              </DataGridRow>\r\n            </DataGridHeader>\r\n            <DataGridBody<TwinEvent>>\r\n              {({ item, rowId }) => (\r\n                <DataGridRow<TwinEvent>\r\n                  data-testid={EventListTestIds.Row}\r\n                  key={rowId}\r\n                  onClick={\r\n                    state.isLoading\r\n                      ? undefined\r\n                      : () => {\r\n                          state.setSelectedEvent(item.eventId);\r\n                        }\r\n                  }\r\n                >\r\n                  {({ renderCell }) => (\r\n                    <DataGridCell>\r\n                      {!state.isLoading ? (\r\n                        renderCell(item)\r\n                      ) : (\r\n                        <Skeleton\r\n                          data-testid={EventListTestIds.Skeleton}\r\n                          className={styles.skeleton}\r\n                        >\r\n                          <SkeletonItem />\r\n                        </Skeleton>\r\n                      )}\r\n                    </DataGridCell>\r\n                  )}\r\n                </DataGridRow>\r\n              )}\r\n            </DataGridBody>\r\n          </DataGrid>\r\n          {!state.isLoading && (\r\n            <div className={styles.pageFooter}>\r\n              <PageFooter\r\n                initialPage={1}\r\n                pageCount={state.pageCount}\r\n                onPageChange={state.setCurrentPage}\r\n              />\r\n            </div>\r\n          )}\r\n          {state.selectedEvent !== undefined && (\r\n            <EventDetails\r\n              eventId={state.selectedEvent}\r\n              onClose={() => {\r\n                state.setSelectedEvent(undefined);\r\n              }}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IEventListProps } from './EventList.types';\r\nimport { useEventListRender } from './EventList.render';\r\nimport { useClassNames } from './EventList.styles';\r\nimport { useEventListState } from './EventList.state';\r\n\r\nconst MODULE_NAME = 'EventList';\r\n\r\nexport const EventList: React.FC<IEventListProps> = (props) => {\r\n  // get state\r\n  const state = useEventListState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useEventListRender({ state, styles });\r\n};\r\n\r\nEventList.displayName = MODULE_NAME;\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport { IEventListProps, IEventListState } from './EventList.types';\r\nimport { useDebugLogging, getLogger } from '@do/core';\r\nimport { useExplorerContext } from '../../../contexts';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'EventList.state';\r\nconst PAGE_SIZE = 10;\r\n\r\nexport const useEventListState = (_props: IEventListProps): IEventListState => {\r\n  // contexts\r\n  const { events } = useExplorerContext();\r\n\r\n  // state\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [selectedEvent, setSelectedEvent] = useState<string | undefined>(\r\n    undefined,\r\n  );\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    if (events.state === 'success') {\r\n      setPageCount(Math.ceil(events.data.length / PAGE_SIZE));\r\n    }\r\n  }, [events]);\r\n\r\n  const shownEvents = useMemo(() => {\r\n    if (events.state === 'success') {\r\n      return events.data.slice(\r\n        (currentPage - 1) * PAGE_SIZE,\r\n        currentPage * PAGE_SIZE,\r\n      );\r\n    }\r\n    return [];\r\n  }, [events, currentPage]);\r\n\r\n  const errorMessage = useMemo(() => {\r\n    if (events.state === 'error') {\r\n      return `${events.errorCode}: ${events.errorMessage}`;\r\n    }\r\n    return undefined;\r\n  }, [events]);\r\n\r\n  // result\r\n  const state: IEventListState = useMemo(() => {\r\n    return {\r\n      events: shownEvents,\r\n      selectedEvent,\r\n      setSelectedEvent,\r\n      currentPage: currentPage,\r\n      setCurrentPage,\r\n      pageCount,\r\n      isLoading: events.state === 'uncalled' || events.state === 'pending',\r\n      errorMessage,\r\n    };\r\n  }, [\r\n    shownEvents,\r\n    selectedEvent,\r\n    currentPage,\r\n    pageCount,\r\n    events.state,\r\n    errorMessage,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import { IEventListStyles, EventListClasses } from './EventList.types';\r\nimport { makeStyles, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IEventListStyles =\r\n  makeStyles<EventListClasses>({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'grid',\r\n    },\r\n    columnHeader: {\r\n      fontWeight: tokens.fontWeightSemibold,\r\n    },\r\n    pageFooter: {\r\n      paddingTop: '24px',\r\n      alignSelf: 'end',\r\n      justifySelf: 'center',\r\n    },\r\n    skeleton: {\r\n      width: '100%',\r\n    },\r\n    errorBanner: {\r\n      marginTop: tokens.spacingVerticalXS,\r\n      marginBottom: tokens.spacingVerticalXS,\r\n    },\r\n  });\r\n","export { EventList } from './EventList.root';\r\nexport { IEventListProps, EventListRouteProps } from './EventList.types';\r\n","export * from './ExplorerPage';\r\n","import React from 'react';\r\nimport { ITimeSeriesListRenderProps } from './TimeSeriesList.types';\r\nimport {\r\n  DataGrid,\r\n  DataGridBody,\r\n  DataGridCell,\r\n  DataGridHeader,\r\n  DataGridHeaderCell,\r\n  DataGridRow,\r\n  Link,\r\n  MessageBar,\r\n  MessageBarBody,\r\n  MessageBarTitle,\r\n  Skeleton,\r\n  SkeletonItem,\r\n  TableColumnDefinition,\r\n  createTableColumn,\r\n} from '@fluentui/react-components';\r\nimport { EmptyContents, PageFooter } from '@do/components';\r\nimport { t, strings } from '@do/localization';\r\nimport { TimeSeries, TimeSeriesSourceType } from '@do/core';\r\nimport { TIME_SERIES_DELIMETER } from '../../../contexts/TimeSeriesContext';\r\n\r\nexport enum TimeSeriesListTestIds {\r\n  Row = 'time-series-row',\r\n  TimeSeriesNameHeader = 'time-series-name-header',\r\n  TimeSeriesIdHeader = 'time-series-id-header',\r\n  TwinIdHeader = 'twin-id-header',\r\n  FormulasHeader = 'formulas-header',\r\n  DescriptionHeader = 'description-header',\r\n  UomHeader = 'uom-header',\r\n  CreatedTimeHeader = 'created-time-header',\r\n  UpdatedTimeHeader = 'updated-time-header',\r\n  Skeleton = 'time-series-skeleton',\r\n  ErrorBanner = 'time-series-error-banner',\r\n}\r\n\r\nexport const useTimeSeriesListRender: React.FC<ITimeSeriesListRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  const columns: TableColumnDefinition<TimeSeries>[] = [\r\n    createTableColumn({\r\n      columnId: 'timeSeriesName',\r\n      renderCell: (timeSeries: TimeSeries) => {\r\n        return timeSeries.timeSeriesName;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TimeSeriesListTestIds.TimeSeriesNameHeader}\r\n          >\r\n            {t(strings.explorer.time_series.time_series_list.time_series_name)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'timeSeriesId',\r\n      renderCell: (timeSeries: TimeSeries) => {\r\n        return timeSeries.timeSeriesDataPointId;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TimeSeriesListTestIds.TimeSeriesIdHeader}\r\n          >\r\n            {t(strings.explorer.time_series.time_series_list.time_series_id)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'twinId',\r\n      renderCell: (timeSeries: TimeSeries) => {\r\n        return timeSeries.twinId;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TimeSeriesListTestIds.TwinIdHeader}\r\n          >\r\n            {t(strings.explorer.time_series.time_series_list.asset_id)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'formulas',\r\n      renderCell: (timeSeries: TimeSeries) => {\r\n        return timeSeries.source === TimeSeriesSourceType.Calculated ? (\r\n          <Link\r\n            as='a'\r\n            onClick={(event) => {\r\n              event.stopPropagation();\r\n              state.navigateToFormulaList(timeSeries.twinId);\r\n            }}\r\n          >\r\n            {t(strings.insights.formulas.list.formulas_link_placeholder)}\r\n          </Link>\r\n        ) : (\r\n          '-'\r\n        );\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TimeSeriesListTestIds.FormulasHeader}\r\n          >\r\n            {t(strings.explorer.time_series.time_series_list.formulas)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'description',\r\n      renderCell: (timeSeries: TimeSeries) => {\r\n        return timeSeries.description;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TimeSeriesListTestIds.DescriptionHeader}\r\n          >\r\n            {t(strings.explorer.time_series.time_series_list.description)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'uom',\r\n      renderCell: (timeSeries: TimeSeries) => {\r\n        return timeSeries.uom;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TimeSeriesListTestIds.UomHeader}\r\n          >\r\n            {t(strings.explorer.time_series.time_series_list.uom)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'created_timestamp',\r\n      renderCell: (timeSeries: TimeSeries) => {\r\n        return timeSeries.createdTime?.toUTCString();\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TimeSeriesListTestIds.CreatedTimeHeader}\r\n          >\r\n            {t(strings.explorer.time_series.time_series_list.created_time)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'updated_timestamp',\r\n      renderCell: (timeSeries: TimeSeries) => {\r\n        return timeSeries.updatedTime?.toUTCString();\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TimeSeriesListTestIds.UpdatedTimeHeader}\r\n          >\r\n            {t(strings.explorer.time_series.time_series_list.updated_time)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {state.errorMessage && (\r\n        <MessageBar\r\n          className={styles.errorBanner}\r\n          intent='error'\r\n          data-testid={TimeSeriesListTestIds.ErrorBanner}\r\n        >\r\n          <MessageBarBody>\r\n            <MessageBarTitle>{state.errorMessage}</MessageBarTitle>\r\n            <Link>{t(strings.common.learn_more)}</Link>\r\n          </MessageBarBody>\r\n        </MessageBar>\r\n      )}\r\n      {!state.isLoading && !state.timeSeries.length ? (\r\n        <EmptyContents\r\n          header={t(strings.explorer.time_series.time_series_list.empty_state)}\r\n        />\r\n      ) : (\r\n        <>\r\n          <DataGrid\r\n            items={!state.isLoading ? state.timeSeries : Array(10).fill({})}\r\n            columns={columns}\r\n            getRowId={(timeSeries: TimeSeries) => {\r\n              if (state.isLoading) {\r\n                return Math.random().toString() + '-skeleton';\r\n              } else {\r\n                return `${timeSeries.timeSeriesDataPointId}${TIME_SERIES_DELIMETER}${timeSeries.twinId}`; // Emoji delimeter to avoid other common GUID formats\r\n              }\r\n            }}\r\n            selectionMode={'multiselect'}\r\n            selectedItems={state.selectedItems}\r\n            onSelectionChange={\r\n              state.isLoading ? undefined : state.setSelectedTimeSeries\r\n            }\r\n            className={styles.dataGrid}\r\n          >\r\n            <DataGridHeader>\r\n              <DataGridRow>\r\n                {({ renderHeaderCell }) => (\r\n                  <DataGridHeaderCell>{renderHeaderCell()}</DataGridHeaderCell>\r\n                )}\r\n              </DataGridRow>\r\n            </DataGridHeader>\r\n            <DataGridBody<TimeSeries>>\r\n              {({ item, rowId }) => (\r\n                <DataGridRow<TimeSeries>\r\n                  data-testid={TimeSeriesListTestIds.Row}\r\n                  key={rowId}\r\n                >\r\n                  {({ renderCell }) => (\r\n                    <DataGridCell>\r\n                      {state.isLoading ? (\r\n                        <Skeleton\r\n                          data-testid={TimeSeriesListTestIds.Skeleton}\r\n                          className={styles.skeleton}\r\n                        >\r\n                          <SkeletonItem />\r\n                        </Skeleton>\r\n                      ) : (\r\n                        renderCell(item)\r\n                      )}\r\n                    </DataGridCell>\r\n                  )}\r\n                </DataGridRow>\r\n              )}\r\n            </DataGridBody>\r\n          </DataGrid>\r\n          {!state.isLoading && (\r\n            <div className={styles.pageFooter}>\r\n              <PageFooter\r\n                initialPage={1}\r\n                pageCount={state.pageCount}\r\n                onPageChange={state.setCurrentPage}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ITimeSeriesListProps } from './TimeSeriesList.types';\r\nimport { useTimeSeriesListRender } from './TimeSeriesList.render';\r\nimport { useClassNames } from './TimeSeriesList.styles';\r\nimport { useTimeSeriesListState } from './TimeSeriesList.state';\r\n\r\nconst MODULE_NAME = 'TimeSeriesList';\r\n\r\nexport const TimeSeriesList: React.FC<ITimeSeriesListProps> = (props) => {\r\n  // get state\r\n  const state = useTimeSeriesListState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useTimeSeriesListRender({ state, styles });\r\n};\r\n\r\nTimeSeriesList.displayName = MODULE_NAME;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport {\r\n  ITimeSeriesListProps,\r\n  ITimeSeriesListState,\r\n} from './TimeSeriesList.types';\r\nimport {\r\n  useAppRouteProps,\r\n  useDebugLogging,\r\n  useNavigation,\r\n} from '@do/core/hooks';\r\nimport { getLogger, getNestedPage } from '@do/core';\r\nimport { useExplorerContext } from '../../../contexts';\r\nimport { useTimeSeriesContext } from '../../../contexts/TimeSeriesContext';\r\nimport {\r\n  DataGridProps,\r\n  OnSelectionChangeData,\r\n  SelectionItemId,\r\n} from '@fluentui/react-components';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'TimeSeriesList.state';\r\nconst EXPANDED_PAGE_SIZE = 10;\r\nconst COMPACT_PAGE_SIZE = 4;\r\n\r\nexport const useTimeSeriesListState = (\r\n  _props: ITimeSeriesListProps,\r\n): ITimeSeriesListState => {\r\n  // contexts\r\n  const { timeSeries } = useExplorerContext();\r\n  const { selectedTimeSeries, setSelectedTimeSeries } = useTimeSeriesContext();\r\n\r\n  // state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [pageSize, setPageSize] = useState(\r\n    selectedTimeSeries.length === 0 ? EXPANDED_PAGE_SIZE : COMPACT_PAGE_SIZE,\r\n  );\r\n  const [selectedItems, setSelectedItems] = useState<Set<SelectionItemId>>(\r\n    new Set(),\r\n  );\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n  const navigation = useNavigation();\r\n  const routeProps = useAppRouteProps();\r\n\r\n  // callbacks\r\n  const onTimeSeriesSelected: DataGridProps['onSelectionChange'] = useCallback(\r\n    (_e: any, data: OnSelectionChangeData) => {\r\n      setSelectedTimeSeries(data.selectedItems);\r\n      setSelectedItems(data.selectedItems);\r\n    },\r\n    [setSelectedTimeSeries],\r\n  );\r\n\r\n  const navigateToFormulaList = useCallback(\r\n    async (twinId: string | undefined) => {\r\n      if (!twinId) return;\r\n      const path = getNestedPage('insights', routeProps.artifactId);\r\n      await navigation?.navigate({ path: `${path}/${twinId}/list` });\r\n    },\r\n    [routeProps.artifactId, navigation],\r\n  );\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    if (timeSeries.state === 'success') {\r\n      const timeSeriesData = timeSeries.data ?? [];\r\n      if (selectedTimeSeries.length === 0) {\r\n        setPageSize(EXPANDED_PAGE_SIZE);\r\n        const pageCount = Math.ceil(timeSeriesData.length / EXPANDED_PAGE_SIZE);\r\n        setPageCount(pageCount);\r\n        // Since de-selecting all timeseries will reduce page #, make sure we're not on a page that no longer exists\r\n        if (currentPage > pageCount) {\r\n          setCurrentPage(pageCount);\r\n        }\r\n      } else {\r\n        if (pageSize === EXPANDED_PAGE_SIZE) {\r\n          setPageSize(COMPACT_PAGE_SIZE);\r\n          setPageCount(Math.ceil(timeSeriesData.length / COMPACT_PAGE_SIZE));\r\n        }\r\n      }\r\n    }\r\n  }, [currentPage, pageSize, selectedTimeSeries.length, timeSeries]);\r\n\r\n  const shownTimeSeries = useMemo(() => {\r\n    if (timeSeries.state === 'success') {\r\n      return timeSeries.data.slice(\r\n        (currentPage - 1) * pageSize,\r\n        currentPage * pageSize,\r\n      );\r\n    }\r\n    return [];\r\n  }, [timeSeries, currentPage, pageSize]);\r\n\r\n  const errorMessage = useMemo(() => {\r\n    if (timeSeries.state === 'error') {\r\n      return `${timeSeries.errorCode}: ${timeSeries.errorMessage}`;\r\n    }\r\n    return undefined;\r\n  }, [timeSeries]);\r\n\r\n  // result\r\n  const state: ITimeSeriesListState = useMemo(() => {\r\n    return {\r\n      timeSeries: shownTimeSeries,\r\n      selectedItems,\r\n      setSelectedTimeSeries: onTimeSeriesSelected,\r\n      currentPage: currentPage,\r\n      setCurrentPage,\r\n      pageCount: pageCount,\r\n      isLoading:\r\n        timeSeries.state === 'uncalled' || timeSeries.state === 'pending',\r\n      errorMessage,\r\n      navigateToFormulaList,\r\n    };\r\n  }, [\r\n    shownTimeSeries,\r\n    selectedItems,\r\n    onTimeSeriesSelected,\r\n    currentPage,\r\n    pageCount,\r\n    timeSeries.state,\r\n    errorMessage,\r\n    navigateToFormulaList,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  ITimeSeriesListStyles,\r\n  TimeSeriesListClasses,\r\n} from './TimeSeriesList.types';\r\nimport { makeStyles, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => ITimeSeriesListStyles =\r\n  makeStyles<TimeSeriesListClasses>({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'grid',\r\n    },\r\n    columnHeader: {\r\n      fontWeight: tokens.fontWeightSemibold,\r\n    },\r\n    pageFooter: {\r\n      paddingTop: '24px',\r\n      alignSelf: 'end',\r\n      justifySelf: 'center',\r\n    },\r\n    dataGrid: {\r\n      width: '100%',\r\n    },\r\n    skeleton: {\r\n      width: '100%',\r\n    },\r\n    errorBanner: {\r\n      marginTop: tokens.spacingVerticalXS,\r\n      marginBottom: tokens.spacingVerticalXS,\r\n    },\r\n  });\r\n","export { TimeSeriesList } from './TimeSeriesList.root';\r\nexport { ITimeSeriesListProps } from './TimeSeriesList.types';\r\n","import React from 'react';\r\nimport { TimeSeriesPageRenderProps } from './TimeSeriesPage.types';\r\nimport { TimeSeriesList } from '../TimeSeriesList';\r\nimport { TimeSeriesChart } from '../../TimeSeriesChart';\r\n\r\nexport const useTimeSeriesPageRender: React.FC<TimeSeriesPageRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.listContainer}>\r\n        <TimeSeriesList />\r\n      </div>\r\n      {state.selectedTimeSeries.length != 0 ? (\r\n        <div className={styles.chartContainer}>\r\n          <TimeSeriesChart />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useTimeSeriesPageRender } from './TimeSeriesPage.render';\r\nimport { useClassNames } from './TimeSeriesPage.styles';\r\nimport { useTimeSeriesPageState } from './TimeSeriesPage.state';\r\n\r\nconst MODULE_NAME = 'TimeSeriesPage';\r\n\r\nexport const TimeSeriesPage: React.FC = () => {\r\n  // get state\r\n  const state = useTimeSeriesPageState();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useTimeSeriesPageRender({ state, styles });\r\n};\r\n\r\nTimeSeriesPage.displayName = MODULE_NAME;\r\n","import { useMemo } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { TimeSeriesPageState } from './TimeSeriesPage.types';\r\nimport { useTimeSeriesContext } from '../../../contexts/TimeSeriesContext';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'TimeSeriesPage.state';\r\n\r\nexport const useTimeSeriesPageState = (): TimeSeriesPageState => {\r\n  // contexts\r\n\r\n  // state\r\n  const { selectedTimeSeries } = useTimeSeriesContext();\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: TimeSeriesPageState = useMemo(() => {\r\n    return {\r\n      selectedTimeSeries,\r\n    };\r\n  }, [selectedTimeSeries]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  TimeSeriesPageStyles,\r\n  TimeSeriesPageClasses,\r\n} from './TimeSeriesPage.types';\r\nimport { makeStyles } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => TimeSeriesPageStyles =\r\n  makeStyles<TimeSeriesPageClasses>({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      rowGap: '24px',\r\n    },\r\n    listContainer: {\r\n      flexGrow: 4,\r\n    },\r\n    chartContainer: {\r\n      flexGrow: 1,\r\n    },\r\n  });\r\n","export { TimeSeriesPage } from './TimeSeriesPage.root';\r\n","export * from './TimeSeriesList';\r\nexport * from './TimeSeriesPage';\r\n","import React from 'react';\r\nimport { IGraphPageRenderProps } from './GraphPage.types';\r\nimport { Graph } from '@do/components/Graph';\r\n\r\nexport const useGraphPageRender: React.FC<IGraphPageRenderProps> = (props) => {\r\n  const { state, styles } = props;\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <Graph data={state.graphData} />\r\n    </div>\r\n  );\r\n};\r\n","import { useMemo } from 'react';\r\nimport { IGraphPageProps, IGraphPageState } from './GraphPage.types';\r\n\r\nexport const useGraphPageState = (props: IGraphPageProps): IGraphPageState => {\r\n  // contexts\r\n\r\n  // state\r\n\r\n  // hooks\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: IGraphPageState = useMemo(() => {\r\n    return {\r\n      graphData: props.data || { nodes: [], edges: [] },\r\n    };\r\n  }, [props.data]);\r\n\r\n  return state;\r\n};\r\n","import { IGraphPageStyles, GraphPageClasses } from './GraphPage.types';\r\nimport { makeStyles } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IGraphPageStyles =\r\n  makeStyles<GraphPageClasses>({\r\n    root: {},\r\n  });\r\n","import React from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { IGraphPageProps } from './GraphPage.types';\r\nimport { useGraphPageRender } from './GraphPage.render';\r\nimport { useClassNames } from './GraphPage.styles';\r\nimport { useGraphPageState } from './GraphPage.state';\r\n\r\nconst MODULE_NAME = 'GraphPage';\r\n\r\nexport const GraphPage: React.FC<IGraphPageProps> = (_props) => {\r\n  // get state\r\n  const state = useGraphPageState(_props);\r\n  const debugLogging = useDebugLogging();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state, styles}', MODULE_NAME, {\r\n      state,\r\n      styles,\r\n    });\r\n\r\n  // render the component\r\n  return useGraphPageRender({ state, styles });\r\n};\r\n\r\nGraphPage.displayName = MODULE_NAME;\r\n","export { GraphPage } from './GraphPage';\r\nexport { IGraphPageProps, GraphPageRouteProps } from './GraphPage.types';\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  HierarchyNode,\r\n  IHierarchyPageRenderProps,\r\n  IHierarchyPageStyles,\r\n} from './HierarchyPage.types';\r\nimport { t, strings } from '@do/localization';\r\nimport { Link, mergeClasses } from '@fluentui/react-components';\r\nimport { HierarchyTree, TreeItemType } from '@do/components';\r\n\r\nexport const enum TestIds {\r\n  HierarchyPage = 'hierarchy-page',\r\n  TwinLinkPrefix = 'twin-link-',\r\n}\r\n\r\nexport const renderItemLink = (\r\n  item: HierarchyNode,\r\n  navigateToDetails: (twinId: string) => void,\r\n) => {\r\n  return (\r\n    <Link // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      data-testid={`${TestIds.TwinLinkPrefix}${item.twin!.twinId}`}\r\n      as='a' // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      onClick={() => navigateToDetails(item.twin!.twinId)}\r\n    >\r\n      {item.childCount > 0\r\n        ? t(strings.hierarchy_tree.display_with_child_count_format, {\r\n            display_name: item.displayName,\r\n            child_count: item.childCount,\r\n          })\r\n        : item.displayName}\r\n    </Link>\r\n  );\r\n};\r\nexport const itemLayout = (\r\n  item: HierarchyNode,\r\n  navigateToDetails: (twinId: string) => void,\r\n  styles: IHierarchyPageStyles,\r\n) => {\r\n  return (\r\n    <div key={`treeItem_${item.path}`} className={styles.item}>\r\n      <div className={styles.column}>\r\n        {item.twin ? renderItemLink(item, navigateToDetails) : item.displayName}\r\n      </div>\r\n      <div className={styles.column}>{item.twin ? item.twin.twinId : ''}</div>\r\n      <div className={styles.column}>\r\n        {item.twin ? item.twin.description : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const useHierarchyPageRender: React.FC<IHierarchyPageRenderProps> = (\r\n  props,\r\n) => {\r\n  const { state, styles } = props;\r\n  const customItemLayout = useCallback(\r\n    (item: HierarchyNode, _: TreeItemType) => {\r\n      return itemLayout(item, state.navigateToDetails, styles);\r\n    },\r\n    [state, styles],\r\n  );\r\n\r\n  return (\r\n    <div className={styles.root} data-testid={TestIds.HierarchyPage}>\r\n      <div className={mergeClasses(styles.header, styles.item)}>\r\n        <div className={styles.column}>\r\n          {t(strings.explorer.twins.hierarchy.displayName)}\r\n        </div>\r\n        <div className={styles.column}>\r\n          {t(strings.explorer.twins.hierarchy.twinId)}\r\n        </div>\r\n        <div className={styles.column}>\r\n          {t(strings.explorer.twins.hierarchy.description)}\r\n        </div>\r\n      </div>\r\n      <HierarchyTree\r\n        customItemLayout={customItemLayout}\r\n        treeItemClassName={styles.rowBorder}\r\n        showMoreClassName={styles.rowBorder}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { useHierarchyPageRender } from './HierarchyPage.render';\r\nimport { useClassNames } from './HierarchyPage.styles';\r\nimport { useHierarchyPageState } from './HierarchyPage.state';\r\n\r\nconst MODULE_NAME = 'HierarchyPage';\r\n\r\nexport const HierarchyPage: React.FC = () => {\r\n  // get state\r\n  const state = useHierarchyPageState();\r\n  const debugLogging = useDebugLogging();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state, styles}', MODULE_NAME, {\r\n      state,\r\n      styles,\r\n    });\r\n\r\n  // render the component\r\n  return useHierarchyPageRender({ state, styles });\r\n};\r\n\r\nHierarchyPage.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo, useRef, useState } from 'react';\r\nimport { IHierarchyPageState } from './HierarchyPage.types';\r\nimport { useNavigation } from '@do/core';\r\nimport { useTwinsExplorerRouteProps } from '../../../hooks/routeProps/useTwinsExplorerRouteProps';\r\n\r\nexport const useHierarchyPageState = (): IHierarchyPageState => {\r\n  // contexts\r\n\r\n  // state\r\n\r\n  // hooks\r\n\r\n  const navigation = useNavigation();\r\n  const [explorerRouteProps] = useState(useTwinsExplorerRouteProps());\r\n  const detailsUrl = useRef(`${explorerRouteProps.twinsPath}/details`);\r\n\r\n  // callbacks\r\n  const navigateToDetails = useCallback(\r\n    async (twinId: string) => {\r\n      await navigation?.navigate({ path: `${detailsUrl.current}/${twinId}` });\r\n    },\r\n    [navigation],\r\n  );\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: IHierarchyPageState = useMemo(() => {\r\n    return {\r\n      navigateToDetails,\r\n    };\r\n  }, [navigateToDetails]);\r\n\r\n  return state;\r\n};\r\n","import {\r\n  IHierarchyPageStyles,\r\n  HierarchyPageClasses,\r\n} from './HierarchyPage.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IHierarchyPageStyles =\r\n  makeStyles<HierarchyPageClasses>({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    header: {\r\n      marginLeft: '24px',\r\n      fontSize: '14px',\r\n      textAlign: 'left',\r\n      fontWeight: tokens.fontWeightSemibold,\r\n      marginBottom: '8px',\r\n    },\r\n    item: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      flexGrow: 1,\r\n      width: 'calc(100vw - 160px)', // TODO: do better here\r\n    },\r\n    column: {\r\n      ...shorthands.flex(1),\r\n    },\r\n    rowBorder: {\r\n      ...shorthands.borderBottom('1px', 'solid'),\r\n      ...shorthands.borderColor(tokens.colorNeutralStroke2),\r\n    },\r\n  });\r\n","export { HierarchyPage } from './HierarchyPage.root';\r\nexport { HierarchyPageRouteProps } from './HierarchyPage.types';\r\n","import React from 'react';\r\nimport { ITwinListRenderProps } from './TwinList.types';\r\nimport {\r\n  DataGrid,\r\n  DataGridBody,\r\n  DataGridCell,\r\n  DataGridHeader,\r\n  DataGridHeaderCell,\r\n  DataGridRow,\r\n  TableColumnDefinition,\r\n  createTableColumn,\r\n  Skeleton,\r\n  SkeletonItem,\r\n  Link,\r\n  MessageBar,\r\n  MessageBarBody,\r\n  MessageBarTitle,\r\n} from '@fluentui/react-components';\r\nimport { t, strings } from '@do/localization';\r\nimport { PageFooter, EmptyContents } from '@do/components';\r\nimport { Twin } from '@do/core/clients/TwinClient';\r\nimport { PAGE_SIZE } from './TwinList.state';\r\n\r\nexport enum TwinListTestIds {\r\n  Row = 'twins-row',\r\n  Skeleton = 'twins-skeleton',\r\n  TwinNameHeader = 'twin-name-header',\r\n  TwinIdHeader = 'twin-id-header',\r\n  DescriptionHeader = 'description-header',\r\n  createdTimeHeader = 'created-time-header',\r\n  updatedTimeHeader = 'updated-time-header',\r\n  modelIdHeader = 'model-id-header',\r\n  stateHeader = 'state-header',\r\n  ErrorBanner = 'error-banner',\r\n  AttributeColumns = 'attribute-columns',\r\n}\r\n\r\nexport const useTwinListRender: React.FC<ITwinListRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  const columns: TableColumnDefinition<Twin>[] = [\r\n    createTableColumn({\r\n      columnId: 'displayName',\r\n      renderCell: (twin: Twin) => {\r\n        return twin.displayName;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TwinListTestIds.TwinNameHeader}\r\n          >\r\n            {t(strings.explorer.twins.list.twin_name)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'twinId',\r\n      renderCell: (twin: Twin) => {\r\n        return twin.twinId;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TwinListTestIds.TwinIdHeader}\r\n          >\r\n            {t(strings.explorer.twins.list.twin_id)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'description',\r\n      renderCell: (twin: Twin) => {\r\n        return twin.description;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TwinListTestIds.DescriptionHeader}\r\n          >\r\n            {t(strings.explorer.twins.list.description)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'createdTime',\r\n      renderCell: (twin: Twin) => {\r\n        return twin.createdTime?.toUTCString();\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TwinListTestIds.createdTimeHeader}\r\n          >\r\n            {t(strings.explorer.twins.list.createdTime)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'updatedTime',\r\n      renderCell: (twin: Twin) => {\r\n        return twin.updatedTime?.toUTCString();\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TwinListTestIds.updatedTimeHeader}\r\n          >\r\n            {t(strings.explorer.twins.list.updatedTime)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'modelId',\r\n      renderCell: (twin: Twin) => {\r\n        return twin.modelId;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TwinListTestIds.modelIdHeader}\r\n          >\r\n            {t(strings.explorer.twins.list.groupId)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn({\r\n      columnId: 'state',\r\n      renderCell: (twin: Twin) => {\r\n        return twin.state;\r\n      },\r\n      renderHeaderCell() {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={TwinListTestIds.stateHeader}\r\n          >\r\n            {t(strings.explorer.twins.list.state)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {state.errorMessage && (\r\n        <MessageBar\r\n          className={styles.errorBanner}\r\n          intent='error'\r\n          data-testid={TwinListTestIds.ErrorBanner}\r\n        >\r\n          <MessageBarBody>\r\n            <MessageBarTitle>{state.errorMessage}</MessageBarTitle>\r\n            <Link>{t(strings.common.learn_more)}</Link>\r\n          </MessageBarBody>\r\n        </MessageBar>\r\n      )}\r\n      {!state.isLoading && (!state.twins || state.twins.length === 0) ? (\r\n        <EmptyContents\r\n          header={t(strings.explorer.twins.list.no_data_message)}\r\n        />\r\n      ) : (\r\n        <>\r\n          <DataGrid\r\n            items={!state.isLoading ? state.twins : Array(PAGE_SIZE).fill({})}\r\n            columns={\r\n              state.attributeColumns\r\n                ? columns.concat(\r\n                    state.attributeColumns.map<TableColumnDefinition<Twin>>(\r\n                      (attributeColumn) =>\r\n                        createTableColumn({\r\n                          columnId: attributeColumn,\r\n                          renderCell: (twin: Twin) => {\r\n                            return (\r\n                              twin.attributes\r\n                                ?.find((value, _index, _obj) => {\r\n                                  return value.name === attributeColumn;\r\n                                })\r\n                                ?.value.toString() || ''\r\n                            );\r\n                          },\r\n                          renderHeaderCell() {\r\n                            return (\r\n                              <span\r\n                                className={styles.columnHeader}\r\n                                data-testid={TwinListTestIds.AttributeColumns}\r\n                              >\r\n                                {attributeColumn}\r\n                              </span>\r\n                            );\r\n                          },\r\n                        }),\r\n                    ),\r\n                  )\r\n                : columns\r\n            }\r\n            getRowId={(twin: Twin) => twin.twinId}\r\n          >\r\n            <DataGridHeader>\r\n              <DataGridRow>\r\n                {({ renderHeaderCell }) => (\r\n                  <DataGridHeaderCell>{renderHeaderCell()}</DataGridHeaderCell>\r\n                )}\r\n              </DataGridRow>\r\n            </DataGridHeader>\r\n            <DataGridBody<Twin>>\r\n              {({ item, rowId }) => (\r\n                <DataGridRow<Twin>\r\n                  data-testid={TwinListTestIds.Row}\r\n                  key={rowId}\r\n                  onClick={\r\n                    state.isLoading\r\n                      ? undefined\r\n                      : () => {\r\n                          state.navigateToDetails(item.twinId);\r\n                        }\r\n                  }\r\n                >\r\n                  {({ renderCell }) => (\r\n                    <DataGridCell>\r\n                      {state.isLoading ? (\r\n                        <Skeleton\r\n                          data-testid={TwinListTestIds.Skeleton}\r\n                          className={styles.skeleton}\r\n                        >\r\n                          <SkeletonItem />\r\n                        </Skeleton>\r\n                      ) : (\r\n                        renderCell(item)\r\n                      )}\r\n                    </DataGridCell>\r\n                  )}\r\n                </DataGridRow>\r\n              )}\r\n            </DataGridBody>\r\n          </DataGrid>\r\n          {!state.isLoading && (\r\n            <div className={styles.pageFooter}>\r\n              <PageFooter\r\n                initialPage={1}\r\n                pageCount={state.pageCount}\r\n                onPageChange={state.setCurrentPage}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { ITwinListProps } from './TwinList.types';\r\nimport { useTwinListRender } from './TwinList.render';\r\nimport { useClassNames } from './TwinList.styles';\r\nimport { useTwinListState } from './TwinList.state';\r\n\r\nconst MODULE_NAME = 'TwinList';\r\n\r\nexport const TwinList: React.FC<ITwinListProps> = (_props) => {\r\n  // get state\r\n  const state = useTwinListState(_props);\r\n  const debugLogging = useDebugLogging();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state, styles}', MODULE_NAME, {\r\n      state,\r\n      styles,\r\n    });\r\n\r\n  // render the component\r\n  return useTwinListRender({ state, styles });\r\n};\r\n\r\nTwinList.displayName = MODULE_NAME;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { ITwinListProps, ITwinListState } from './TwinList.types';\r\nimport { useNavigation } from '@do/core/hooks';\r\nimport { useDebugLogging, getLogger } from '@do/core';\r\nimport { useExplorerContext } from '../../../contexts';\r\nimport { useTwinsExplorerRouteProps } from '../../../hooks/routeProps/useTwinsExplorerRouteProps';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'TwinList.state';\r\nexport const PAGE_SIZE = 10;\r\n\r\nexport const useTwinListState = (_props: ITwinListProps): ITwinListState => {\r\n  // contexts\r\n  const { twins, attributeColumns } = useExplorerContext();\r\n\r\n  // state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageCount, setPageCount] = useState(1);\r\n\r\n  // hooks\r\n  const navigation = useNavigation();\r\n  const [explorerRouteProps] = useState(useTwinsExplorerRouteProps());\r\n  const detailsUrl = useMemo(() => {\r\n    return `${explorerRouteProps.twinsPath}/details`;\r\n  }, [explorerRouteProps.twinsPath]);\r\n\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n  const navigateToDetails = useCallback(\r\n    async (twinId: string) => {\r\n      await navigation?.navigate({ path: `${detailsUrl}/${twinId}` });\r\n    },\r\n    [navigation, detailsUrl],\r\n  );\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    if (twins.state === 'success') {\r\n      setPageCount(Math.ceil(twins.data.length / PAGE_SIZE));\r\n    }\r\n  }, [twins]);\r\n\r\n  const shownTwins = useMemo(() => {\r\n    if (twins.state === 'success') {\r\n      return twins.data.slice(\r\n        (currentPage - 1) * PAGE_SIZE,\r\n        currentPage * PAGE_SIZE,\r\n      );\r\n    }\r\n    return [];\r\n  }, [twins, currentPage]);\r\n\r\n  const errorMessage = useMemo(() => {\r\n    if (twins.state === 'error') {\r\n      return `${twins.errorCode}: ${twins.errorMessage}`;\r\n    }\r\n    return undefined;\r\n  }, [twins]);\r\n\r\n  // result\r\n  const state: ITwinListState = useMemo(() => {\r\n    return {\r\n      twins: shownTwins,\r\n      currentPage,\r\n      setCurrentPage,\r\n      pageCount,\r\n      navigateToDetails,\r\n      isLoading: twins.state === 'uncalled' || twins.state === 'pending',\r\n      errorMessage,\r\n      attributeColumns,\r\n    };\r\n  }, [\r\n    shownTwins,\r\n    currentPage,\r\n    pageCount,\r\n    navigateToDetails,\r\n    twins.state,\r\n    errorMessage,\r\n    attributeColumns,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import { ITwinListStyles, TwinListClasses } from './TwinList.types';\r\nimport { makeStyles, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => ITwinListStyles = makeStyles<TwinListClasses>(\r\n  {\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'grid',\r\n    },\r\n    columnHeader: {\r\n      fontWeight: tokens.fontWeightSemibold,\r\n    },\r\n    pageFooter: {\r\n      paddingTop: '24px',\r\n      alignSelf: 'end',\r\n      justifySelf: 'center',\r\n    },\r\n    skeleton: {\r\n      width: '100%',\r\n    },\r\n    errorBanner: {\r\n      marginTop: tokens.spacingVerticalXS,\r\n      marginBottom: tokens.spacingVerticalXS,\r\n    },\r\n  },\r\n);\r\n","export { TwinList } from './TwinList.root';\r\nexport { ITwinListProps, TwinListRouteProps } from './TwinList.types';\r\n","import React from 'react';\r\nimport { ITwinsPageRenderProps } from './TwinsPage.types';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { GraphPage } from '../GraphPage';\r\nimport { HierarchyPage } from '../HierarchyPage';\r\nimport { TwinList } from '../TwinList';\r\nimport { Button } from '@fluentui/react-components';\r\nimport {\r\n  AppsList24Filled,\r\n  AppsList24Regular,\r\n  TextBulletListTree24Filled,\r\n  TextBulletListTree24Regular,\r\n  bundleIcon,\r\n} from '@fluentui/react-icons';\r\nimport { t, strings } from '@do/localization';\r\nimport mockData from '../GraphPage/GraphPage.mock.json';\r\n\r\nexport enum TestIds {\r\n  HierarchyTab = 'explorer-twin-hierarchy-tab',\r\n  GraphTab = 'explorer-twin-graph-tab',\r\n  ListTab = 'explorer-twin-list-tab',\r\n}\r\n\r\nexport const useTwinsPageRender: React.FC<ITwinsPageRenderProps> = (props) => {\r\n  const { state, styles } = props;\r\n  const { routeProps, setPageName } = state;\r\n  const { twinsPath, pageName } = routeProps;\r\n\r\n  const HierarchyIcons = bundleIcon(\r\n    TextBulletListTree24Filled,\r\n    TextBulletListTree24Regular,\r\n  );\r\n  // TODO: Temporarily remove graph tab until it's ready\r\n  // const GraphIcons = bundleIcon(Branch24Filled, Branch24Regular);\r\n  const ListIcons = bundleIcon(AppsList24Filled, AppsList24Regular);\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.nav}>\r\n        <Button\r\n          icon={<HierarchyIcons />}\r\n          disabled={pageName == 'hierarchy'}\r\n          onClick={() => setPageName('hierarchy')}\r\n          data-testid={TestIds.HierarchyTab}\r\n        >\r\n          {t(strings.explorer.twins.nav.hierarchy)}\r\n        </Button>\r\n        {/* TODO: Temporarily remove graph tab until it's ready\r\n        <Button\r\n          icon={<GraphIcons />}\r\n          disabled={pageName == 'graph'}\r\n          onClick={() => setPageName('graph')}\r\n          data-testid={TestIds.GraphTab}\r\n        >\r\n          {t(strings.explorer.twins.nav.graph)}\r\n        </Button> */}\r\n        <Button\r\n          icon={<ListIcons />}\r\n          disabled={pageName == 'list'}\r\n          onClick={() => setPageName('list')}\r\n          data-testid={TestIds.ListTab}\r\n        >\r\n          {t(strings.explorer.twins.nav.list)}\r\n        </Button>\r\n      </div>\r\n      <div className={styles.content}>\r\n        <Switch>\r\n          <Route path={`${twinsPath}/graph`}>\r\n            <GraphPage data={mockData} />{' '}\r\n            {/* TODO: use the same data as in\r\n            HierarchyPage */}\r\n          </Route>\r\n          <Route path={`${twinsPath}/list`}>\r\n            <TwinList />\r\n          </Route>\r\n          <Route path='*'>\r\n            <HierarchyPage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useMemo } from 'react';\r\nimport { ITwinsPageProps, ITwinsPageState } from './TwinsPage.types';\r\nimport { useTwinsExplorerRouteProps } from '../../../hooks/routeProps/useTwinsExplorerRouteProps';\r\nimport { useNavigation } from '@do/core';\r\n\r\nexport const useTwinsPageState = (_props: ITwinsPageProps): ITwinsPageState => {\r\n  // contexts\r\n\r\n  // state\r\n\r\n  // hooks\r\n  const routeProps = useTwinsExplorerRouteProps();\r\n  const navigation = useNavigation();\r\n  // callbacks\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: ITwinsPageState = useMemo(() => {\r\n    const results = {\r\n      routeProps,\r\n      setPageName: (pageName: string) => {\r\n        // we almost always have a history object and Jest hates mocking it (numerous variations tried)\r\n        navigation?.navigate({\r\n          path: `${routeProps.explorerPath}/${routeProps.tabName}/${pageName}`,\r\n        });\r\n      },\r\n    };\r\n    return results;\r\n  }, [navigation, routeProps]);\r\n\r\n  return state;\r\n};\r\n","import { ITwinsPageStyles, TwinsPageClasses } from './TwinsPage.types';\r\nimport { makeStyles } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => ITwinsPageStyles =\r\n  makeStyles<TwinsPageClasses>({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      rowGap: '4px',\r\n    },\r\n    nav: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      columnGap: '4px',\r\n    },\r\n    content: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n  });\r\n","import React from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { ITwinsPageProps } from './TwinsPage.types';\r\nimport { useTwinsPageRender } from './TwinsPage.render';\r\nimport { useClassNames } from './TwinsPage.styles';\r\nimport { useTwinsPageState } from './TwinsPage.state';\r\n\r\nconst MODULE_NAME = 'TwinsPage';\r\n\r\nexport const TwinsPage: React.FC<ITwinsPageProps> = (_props) => {\r\n  // get state\r\n  const state = useTwinsPageState(_props);\r\n  const debugLogging = useDebugLogging();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state, styles}', MODULE_NAME, {\r\n      state,\r\n      styles,\r\n    });\r\n\r\n  // render the component\r\n  return useTwinsPageRender({ state, styles });\r\n};\r\n\r\nTwinsPage.displayName = MODULE_NAME;\r\n","export { TwinsPage } from './TwinsPage';\r\nexport { ITwinsPageProps, TwinsPageRouteProps } from './TwinsPage.types';\r\n","export * from './HierarchyPage';\r\nexport * from './GraphPage';\r\nexport * from './TwinList';\r\nexport * from './TwinsPage';\r\n","/**\r\n * This context is to store the shared state for the various asset explorer sub pages (twins, time series, events)\r\n */\r\n\r\nimport React, { ReactNode, useCallback, useContext, useMemo } from 'react';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport { ExplorerContextType, TabbedQuery } from './ExplorerContext.types';\r\nimport {\r\n  AttributeSuggestion,\r\n  DataRequest,\r\n  ModelDetails,\r\n  ModelInformation,\r\n  TimeSeries,\r\n  TimeSeriesDataPointSuggestion,\r\n  Twin,\r\n  TwinEvent,\r\n  WithContinuationToken,\r\n  useEventClient,\r\n  useTimeSeriesClient,\r\n  useTwinClient,\r\n  ModelingFeatures,\r\n  ViewModelDetailsPanelActivities,\r\n  ViewModelsListPageActivities,\r\n} from '@do/core';\r\nimport {\r\n  FilterRule,\r\n  SortRule,\r\n} from '../components/QueryPanel/QueryPanel.types';\r\nimport {\r\n  getEventKeywordQuery,\r\n  getTimeSeriesDataPointKeywordQuery,\r\n  getTwinKeywordQuery,\r\n} from './ExplorerContext.utils';\r\nimport {\r\n  AdvancedQueryActivity,\r\n  KeywordSearchActivity,\r\n  QueryFeature,\r\n} from '../models/QueryCertifiedEvents';\r\nimport { useModelInformationClient } from '@do/core/hooks/useModelInformationClient';\r\nimport { useModelDetailsClient } from '@do/core/hooks/useModelDetailsClient';\r\n\r\nexport const ExplorerContext = React.createContext<ExplorerContextType | null>(\r\n  null,\r\n);\r\nexport const useExplorerContext = () => {\r\n  const context = useContext(ExplorerContext);\r\n  if (!context) {\r\n    throw new Error(\r\n      'useExplorerContext must be used within an ExplorerContextProvider',\r\n    );\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ExplorerContextProvider = React.memo(\r\n  (props: { children?: ReactNode }) => {\r\n    const { children } = props;\r\n    const twinClient = useTwinClient();\r\n    const eventClient = useEventClient();\r\n    const timeSeriesClient = useTimeSeriesClient();\r\n    const modelInformationClient = useModelInformationClient();\r\n    const modelDetailClient = useModelDetailsClient();\r\n\r\n    // state - query parameters\r\n    const [searchString, setSearchString] = React.useState<string>('');\r\n    const [tabbedQuery, setTabbedQuery] = React.useState<TabbedQuery>({\r\n      twins: {\r\n        filterRules: [\r\n          {\r\n            type: 'string',\r\n            property: '',\r\n            operator: '',\r\n            value: '',\r\n            valueType: 'String',\r\n          },\r\n        ],\r\n        sortRules: [\r\n          {\r\n            property: '',\r\n            order: '',\r\n          },\r\n        ],\r\n        models: [],\r\n      },\r\n      events: {\r\n        filterRules: [\r\n          {\r\n            type: 'string',\r\n            property: '',\r\n            operator: '',\r\n            value: '',\r\n            valueType: 'String',\r\n          },\r\n        ],\r\n        sortRules: [\r\n          {\r\n            property: '',\r\n            order: '',\r\n          },\r\n        ],\r\n      },\r\n      timeSeries: {\r\n        filterRules: [\r\n          {\r\n            type: 'string',\r\n            property: '',\r\n            operator: '',\r\n            value: '',\r\n            valueType: 'String',\r\n          },\r\n        ],\r\n        sortRules: [\r\n          {\r\n            property: '',\r\n            order: '',\r\n          },\r\n        ],\r\n      },\r\n    });\r\n\r\n    // state - results\r\n    const [twins, setTwins] = React.useState<DataRequest<Twin[]>>({\r\n      state: 'uncalled',\r\n    });\r\n    const [events, setEvents] = React.useState<DataRequest<TwinEvent[]>>({\r\n      state: 'uncalled',\r\n    });\r\n    const [timeSeries, setTimeSeries] = React.useState<\r\n      DataRequest<TimeSeries[]>\r\n    >({\r\n      state: 'uncalled',\r\n    });\r\n    const [attributeSuggestions, setAttributeSuggestions] = React.useState<\r\n      DataRequest<AttributeSuggestion[]>\r\n    >({ state: 'uncalled' });\r\n    const [timeSeriesDataPointSuggestions, setTimeSeriesDataPointSuggestions] =\r\n      React.useState<DataRequest<TimeSeriesDataPointSuggestion[]>>({\r\n        state: 'uncalled',\r\n      });\r\n    const [attributeColumns, setAttributeColumns] = React.useState<string[]>();\r\n    const [models, setModels] =\r\n      React.useState<DataRequest<WithContinuationToken<ModelInformation[]>>>();\r\n    const [selectedModel, setSelectedModel] =\r\n      React.useState<DataRequest<ModelDetails>>();\r\n\r\n    // Callbacks\r\n    const setQuery = useCallback(\r\n      (\r\n        tab: string,\r\n        filterRules: FilterRule[],\r\n        sortRules: SortRule[],\r\n        models?: string[],\r\n      ) => {\r\n        setTabbedQuery((prev) => {\r\n          return {\r\n            ...prev,\r\n            [tab]: {\r\n              filterRules,\r\n              sortRules,\r\n              models,\r\n            },\r\n          };\r\n        });\r\n\r\n        // Updates the attribute columns based on the filter rules\r\n        const attributeColumns = [];\r\n        for (const filterRule of filterRules) {\r\n          // Validates a filter rule is an attribute and that it doesn't already exist in the list\r\n          if (\r\n            filterRule.source === 'Attribute' &&\r\n            attributeColumns.find((col) => col === filterRule.property) ===\r\n              undefined\r\n          ) {\r\n            attributeColumns.push(filterRule.property);\r\n          }\r\n        }\r\n        setAttributeColumns(attributeColumns);\r\n      },\r\n      [],\r\n    );\r\n\r\n    const queryTwins = useCallback(\r\n      async (queryObj?: any, logConfig?: Partial<FeatureEvent>) => {\r\n        setTwins({ state: 'pending' });\r\n        let results = await twinClient?.queryTwins(\r\n          queryObj,\r\n          ['attributes'], // TODO: modify this when we integrate with attributes/tsdp\r\n          logConfig,\r\n        );\r\n\r\n        if (!results) {\r\n          results = {\r\n            state: 'error',\r\n            errorCode: 'Unknown error',\r\n            errorMessage: 'Unknown error',\r\n          };\r\n        }\r\n        setTwins(results);\r\n      },\r\n      [twinClient],\r\n    );\r\n\r\n    const queryAttributeSuggestions = useCallback(async () => {\r\n      setAttributeSuggestions({ state: 'pending' });\r\n      let results = await twinClient?.queryAttributeSuggestions();\r\n\r\n      if (!results) {\r\n        results = {\r\n          state: 'error',\r\n          errorCode: 'Unknown error',\r\n          errorMessage: 'Unknown error',\r\n        };\r\n      }\r\n      setAttributeSuggestions(results);\r\n    }, [twinClient]);\r\n\r\n    const queryTimeSeriesDataPointSuggestions = useCallback(async () => {\r\n      setTimeSeriesDataPointSuggestions({ state: 'pending' });\r\n      let results = await twinClient?.queryTimeSeriesDataPointSuggestions();\r\n\r\n      if (!results) {\r\n        results = {\r\n          state: 'error',\r\n          errorCode: 'Unknown error',\r\n          errorMessage: 'Unknown error',\r\n        };\r\n      }\r\n      setTimeSeriesDataPointSuggestions(results);\r\n    }, [twinClient]);\r\n\r\n    const queryModels = useCallback(async () => {\r\n      setModels({ state: 'pending' });\r\n      let results = await modelInformationClient?.getModels({\r\n        featureName: ModelingFeatures.ViewModelsListPage,\r\n        activityName: ViewModelsListPageActivities.ModelsListFetch,\r\n      });\r\n\r\n      if (!results) {\r\n        results = {\r\n          state: 'error',\r\n          errorCode: 'Unknown error',\r\n          errorMessage: 'Unknown error',\r\n        };\r\n      }\r\n      setModels(results);\r\n    }, [modelInformationClient]);\r\n\r\n    const queryEvents = useCallback(\r\n      async (queryObj?: any, logConfig?: Partial<FeatureEvent>) => {\r\n        setEvents({ state: 'pending' });\r\n        let results = await eventClient?.queryEvents(queryObj, logConfig);\r\n\r\n        if (!results) {\r\n          results = {\r\n            state: 'error',\r\n            errorCode: 'Unknown error',\r\n            errorMessage: 'Unknown error',\r\n          };\r\n        }\r\n        setEvents(results);\r\n      },\r\n      [eventClient],\r\n    );\r\n\r\n    const queryTimeSeries = useCallback(\r\n      async (queryObj?: any, logConfig?: Partial<FeatureEvent>) => {\r\n        setTimeSeries({ state: 'pending' });\r\n        let results = await timeSeriesClient?.queryTimeSeries(\r\n          queryObj,\r\n          logConfig,\r\n        );\r\n\r\n        if (!results) {\r\n          results = {\r\n            state: 'error',\r\n            errorCode: 'Unknown error',\r\n            errorMessage: 'Unknown error',\r\n          };\r\n        }\r\n        setTimeSeries(results);\r\n      },\r\n      [timeSeriesClient],\r\n    );\r\n\r\n    const getAndSetModel = useCallback(\r\n      async (modelId: string) => {\r\n        setSelectedModel({ state: 'pending' });\r\n        let results = (await modelDetailClient?.getModelDetails(modelId, {\r\n          featureName: ModelingFeatures.ViewModelDetailsPanel,\r\n          activityName: ViewModelDetailsPanelActivities.ModelDetailsUpdated,\r\n        })) as DataRequest<ModelDetails>;\r\n\r\n        if (!results) {\r\n          results = {\r\n            state: 'error',\r\n            errorCode: 'Unknown error',\r\n            errorMessage: 'Unknown error',\r\n          };\r\n        }\r\n        setSelectedModel(results);\r\n      },\r\n      [modelDetailClient],\r\n    );\r\n\r\n    const keywordQuery = useCallback(\r\n      async (searchString?: string) => {\r\n        setSearchString(searchString ?? '');\r\n\r\n        const twinQueryObj: any = getTwinKeywordQuery(searchString);\r\n        queryTwins(twinQueryObj, {\r\n          featureName: QueryFeature.KeywordSearch,\r\n          activityName: KeywordSearchActivity.QueryTwinsCalled,\r\n        });\r\n\r\n        const eventQueryObj: any = getEventKeywordQuery(searchString);\r\n        queryEvents(eventQueryObj, {\r\n          featureName: QueryFeature.KeywordSearch,\r\n          activityName: KeywordSearchActivity.QueryEventsCalled,\r\n        });\r\n\r\n        const timeSeriesQueryObj: any =\r\n          getTimeSeriesDataPointKeywordQuery(searchString);\r\n        queryTimeSeries(timeSeriesQueryObj, {\r\n          featureName: QueryFeature.KeywordSearch,\r\n          activityName: KeywordSearchActivity.QueryTimeSeriesCalled,\r\n        });\r\n      },\r\n      [queryTwins, queryEvents, queryTimeSeries],\r\n    );\r\n\r\n    const twinsAdvancedQuery = useCallback(\r\n      async (queryObj?: any) => {\r\n        setSearchString('');\r\n        queryTwins(queryObj, {\r\n          featureName: QueryFeature.AdvancedQuery,\r\n          activityName: AdvancedQueryActivity.QueryTwinsCalled,\r\n        });\r\n      },\r\n      [queryTwins],\r\n    );\r\n\r\n    const timeSeriesAdvancedQuery = useCallback(\r\n      async (queryObj?: any) => {\r\n        setSearchString('');\r\n        queryTimeSeries(queryObj, {\r\n          featureName: QueryFeature.AdvancedQuery,\r\n          activityName: AdvancedQueryActivity.QueryTimeSeriesCalled,\r\n        });\r\n      },\r\n      [queryTimeSeries],\r\n    );\r\n\r\n    const eventsAdvancedQuery = useCallback(\r\n      async (queryObj?: any) => {\r\n        setSearchString('');\r\n        queryEvents(queryObj, {\r\n          featureName: QueryFeature.AdvancedQuery,\r\n          activityName: AdvancedQueryActivity.QueryEventsCalled,\r\n        });\r\n      },\r\n      [queryEvents],\r\n    );\r\n\r\n    useMemo(() => {\r\n      queryAttributeSuggestions();\r\n      queryTimeSeriesDataPointSuggestions();\r\n      queryModels();\r\n    }, [\r\n      queryAttributeSuggestions,\r\n      queryTimeSeriesDataPointSuggestions,\r\n      queryModels,\r\n    ]);\r\n\r\n    const providerProps: ExplorerContextType = useMemo(() => {\r\n      return {\r\n        // Query parameters\r\n        searchString,\r\n        setSearchString,\r\n        tabbedQuery,\r\n        setQuery,\r\n        // Results\r\n        twins,\r\n        setTwins,\r\n        twinCount:\r\n          searchString && twins.state === 'success'\r\n            ? twins.data.length\r\n            : undefined,\r\n        events,\r\n        setEvents,\r\n        eventCount:\r\n          searchString && events.state === 'success'\r\n            ? events.data.length\r\n            : undefined,\r\n        timeSeries,\r\n        setTimeSeries,\r\n        timeSeriesCount:\r\n          searchString && timeSeries.state === 'success'\r\n            ? timeSeries.data.length\r\n            : undefined,\r\n        attributeSuggestions,\r\n        queryAttributeSuggestions,\r\n        timeSeriesDataPointSuggestions,\r\n        keywordQuery,\r\n        twinsAdvancedQuery,\r\n        timeSeriesAdvancedQuery,\r\n        eventsAdvancedQuery,\r\n        attributeColumns,\r\n        models,\r\n        setModels,\r\n        selectedModel,\r\n        getAndSetModel,\r\n      };\r\n    }, [\r\n      searchString,\r\n      tabbedQuery,\r\n      setQuery,\r\n      twins,\r\n      events,\r\n      timeSeries,\r\n      attributeSuggestions,\r\n      queryAttributeSuggestions,\r\n      timeSeriesDataPointSuggestions,\r\n      keywordQuery,\r\n      twinsAdvancedQuery,\r\n      timeSeriesAdvancedQuery,\r\n      eventsAdvancedQuery,\r\n      attributeColumns,\r\n      models,\r\n      setModels,\r\n      selectedModel,\r\n      getAndSetModel,\r\n    ]);\r\n\r\n    return (\r\n      <ExplorerContext.Provider value={providerProps}>\r\n        {children}\r\n      </ExplorerContext.Provider>\r\n    );\r\n  },\r\n);\r\n","import { ExplorerTabs } from '../components/ExplorerPage/ExplorerPage.types';\r\nimport {\r\n  FilterRule,\r\n  SortRule,\r\n} from '../components/QueryPanel/QueryPanel.types';\r\n\r\n// Hardcoded queries for keyword search since these specifically only search about two fields per entity\r\nexport function getTwinKeywordQuery(searchString?: string) {\r\n  const keyword = `%${searchString}%`;\r\n  const queryObj = {\r\n    query: {\r\n      root: {\r\n        type: 'logical',\r\n        left: {\r\n          type: 'comparison',\r\n          left: {\r\n            type: 'variable',\r\n            source: 'Twin',\r\n            value: 'TwinId',\r\n          },\r\n          operator: 'contains',\r\n          right: {\r\n            type: 'constant',\r\n            valueType: 'String',\r\n            value: keyword,\r\n          },\r\n        },\r\n        operator: 'or',\r\n        right: {\r\n          type: 'logical',\r\n          left: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'Twin',\r\n              value: 'DisplayName',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n          operator: 'or',\r\n          right: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'Twin',\r\n              value: 'Description',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return queryObj;\r\n}\r\n\r\nexport function getEventKeywordQuery(searchString?: string) {\r\n  const keyword = `%${searchString}%`;\r\n  const queryObj = {\r\n    query: {\r\n      root: {\r\n        type: 'logical',\r\n        left: {\r\n          type: 'logical',\r\n          left: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'Event',\r\n              value: 'TwinId',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n          operator: 'or',\r\n          right: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'Event',\r\n              value: 'EventId',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n        },\r\n        operator: 'or',\r\n        right: {\r\n          type: 'logical',\r\n          left: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'Event',\r\n              value: 'EventType',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n          operator: 'or',\r\n          right: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'Event',\r\n              value: 'Message',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return queryObj;\r\n}\r\n\r\nexport function getTimeSeriesDataPointKeywordQuery(searchString?: string) {\r\n  const keyword = `%${searchString}%`;\r\n  const queryObj = {\r\n    query: {\r\n      root: {\r\n        type: 'logical',\r\n        left: {\r\n          type: 'logical',\r\n          left: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'DataPoint',\r\n              value: 'TimeSeriesDataPointId',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n          operator: 'or',\r\n          right: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'DataPoint',\r\n              value: 'DisplayName',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n        },\r\n        operator: 'or',\r\n        right: {\r\n          type: 'logical',\r\n          left: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'DataPoint',\r\n              value: 'Description',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n          operator: 'or',\r\n          right: {\r\n            type: 'comparison',\r\n            left: {\r\n              type: 'variable',\r\n              source: 'DataPoint',\r\n              value: 'TwinId',\r\n            },\r\n            operator: 'contains',\r\n            right: {\r\n              type: 'constant',\r\n              valueType: 'String',\r\n              value: keyword,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return queryObj;\r\n}\r\n\r\n// Generated queries based on advanced search filters\r\nexport function getAdvancedSearchQuery(\r\n  source: ExplorerTabs,\r\n  filterRules?: FilterRule[],\r\n  sortRules?: SortRule[],\r\n  models?: string[],\r\n) {\r\n  let iqrSource: 'Twin' | 'DataPoint' | 'Event';\r\n  switch (source) {\r\n    case 'twins':\r\n      iqrSource = 'Twin';\r\n      break;\r\n    case 'timeSeries':\r\n      iqrSource = 'DataPoint';\r\n      break;\r\n    case 'events':\r\n      iqrSource = 'Event';\r\n      break;\r\n  }\r\n\r\n  const queryObj = { query: {} };\r\n  // For each filter rule, create the appropriate query object\r\n  filterRules?.forEach((filterRule) => {\r\n    if (!isFilterRuleEmpty(filterRule)) {\r\n      addFilterObject(filterRule, iqrSource, queryObj.query);\r\n    }\r\n  });\r\n\r\n  if (iqrSource == 'Twin' && models && models.length) {\r\n    addModelObject(queryObj.query, models);\r\n  }\r\n\r\n  // For each sort rule, create the appropriate query object\r\n  if (sortRules && sortRules.length > 0) {\r\n    // Note: Only supporting one sort rule for now\r\n    if (!isSortRuleEmpty(sortRules[0])) {\r\n      addSortObject(sortRules[0], iqrSource, queryObj.query);\r\n    }\r\n  }\r\n\r\n  return queryObj;\r\n}\r\n\r\nfunction addFilterObject(\r\n  filterRule: FilterRule,\r\n  iqrSource: string,\r\n  queryObj: any,\r\n) {\r\n  let value: string | boolean | number | Date = filterRule.value;\r\n\r\n  // Only add the % for contains operator\r\n  if (filterRule.operator === 'contains') {\r\n    value = `%${value}%`;\r\n  }\r\n\r\n  if (filterRule.type === 'date') {\r\n    value = new Date(value + 'Z'); // Add Z so it gets treated as UTC time\r\n  } else if (filterRule.type === 'boolean') {\r\n    value = value === 'true';\r\n  } else if (filterRule.type === 'number' || filterRule.type === 'timeSeries') {\r\n    value = Number(value);\r\n  }\r\n\r\n  const filterObj: any = {\r\n    type: 'comparison',\r\n    left: {\r\n      type: 'variable',\r\n      // If the filter rule has a source, use that, else use the sourceType\r\n      // which is based on the tab\r\n      source: filterRule.source ? filterRule.source : iqrSource,\r\n      value: filterRule.property,\r\n    },\r\n    operator: filterRule.operator,\r\n    right: {\r\n      type: 'constant',\r\n      value: value,\r\n      valueType: filterRule.valueType,\r\n    },\r\n  };\r\n\r\n  if (filterRule.source === 'TimeSeries') {\r\n    if (filterRule.timeSeriesStartTimeUTC && filterRule.timeSeriesEndTimeUTC) {\r\n      filterObj.left.startTimeUTC = new Date(\r\n        filterRule.timeSeriesStartTimeUTC + 'Z',\r\n      );\r\n      filterObj.left.endTimeUTC = new Date(\r\n        filterRule.timeSeriesEndTimeUTC + 'Z',\r\n      );\r\n      filterObj.left.aggregate = 'Any';\r\n    }\r\n  }\r\n\r\n  // If there is just one filter, it's just a comparison filter object,\r\n  // else when there are multiple filters, we need to add a logical object\r\n  if (!queryObj.root || Object.keys(queryObj.root).length === 0) {\r\n    queryObj.root = filterObj;\r\n  } else {\r\n    queryObj.root = {\r\n      type: 'logical',\r\n      left: queryObj.root,\r\n      operator: filterRule.logicalOperator,\r\n      right: filterObj,\r\n    };\r\n  }\r\n}\r\n\r\nfunction addSortObject(sortRule: SortRule, iqrSource: string, queryObj: any) {\r\n  queryObj.sortRules = [\r\n    {\r\n      source: iqrSource,\r\n      column: sortRule.property,\r\n      order: sortRule.order,\r\n    },\r\n  ];\r\n}\r\n\r\nfunction addModelObject(queryObj: any, models?: string[]) {\r\n  queryObj.models = models;\r\n}\r\n\r\nexport function isFilterRuleEmpty(filterRule: FilterRule) {\r\n  return !filterRule.property && !filterRule.operator && !filterRule.value;\r\n}\r\n\r\nexport function isSortRuleEmpty(sortRule: SortRule) {\r\n  return !sortRule.property && !sortRule.order;\r\n}\r\n","export * from './ExplorerContext';\r\n","export * from './components';\r\n","/**\r\n * See README in the telemetry directory for more on how to instrument certified events\r\n */\r\n\r\nexport enum QueryFeature {\r\n  AdvancedQuery = 'DOExploreAdvancedQuery', // Major scenario\r\n  KeywordSearch = 'DOExploreKeywordSearch', // Minor scenario\r\n  QueryPanelInteractions = 'DOQueryPanelInteractions', // Minor scenario\r\n  ExplorerListView = 'DOExplorerListView', // Minor scenario\r\n}\r\n\r\nexport enum AdvancedQueryActivity {\r\n  ApplyQueryClicked = 'ApplyQueryClicked',\r\n  QueryTwinsCalled = 'QueryTwinsCalled',\r\n  QueryTimeSeriesCalled = 'QueryTimeSeriesCalled',\r\n  QueryEventsCalled = 'QueryEventsCalled',\r\n  ResultsRendered = 'ResultsRendered',\r\n}\r\n\r\nexport enum KeywordSearchActivity {\r\n  UserFinishedTyping = 'UserFinishedTyping',\r\n  QueryTwinsCalled = 'QueryTwinsCalled',\r\n  QueryTimeSeriesCalled = 'QueryTimeSeriesCalled',\r\n  QueryEventsCalled = 'QueryEventsCalled',\r\n  ResultsRendered = 'ResultsRendered',\r\n}\r\n\r\nexport enum QueryPanelInteractionsActivity {\r\n  UserOpenedQueryPanel = 'UserOpenedQueryPanel',\r\n  GetModelsCalled = 'GetModelsCalled',\r\n  GetPropertiesCalled = 'GetPropertiesCalled',\r\n  // How granular do we get with CE tracking of filter/sort interactions?\r\n  UserClosedQueryPanel = 'UserClosedQueryPanel',\r\n}\r\n\r\n// TODO: Fill this in\r\nexport enum ExplorerListViewActivity {}\r\n"],"names":["__styles","shorthands","useClassNames","root","jrapky","mc9l5x","Beiy3e4","Brf1p80","tab","Byoj8tv","tabLabel","i8kkvl","actionButtons","Belr9w4","d","header","panels","z8tnut","tokens","body","Bhrd7zp","tooltip","Bt984gj","B6of3ja","combobox","a9b677","Bqenvij","columnHeader","pageFooter","qb2dma","Bdqf98w","skeleton","errorBanner","dataGrid","listContainer","Bh6795r","chartContainer","Frg6f3","Be2twd7","fsow6f","item","column","Bnnss6s","xawz","rowBorder","Bn0qgzm","oivjwe","g2u3we","h3c5rm","B9xav0g","zhjwy3","nav","content"],"sourceRoot":""}