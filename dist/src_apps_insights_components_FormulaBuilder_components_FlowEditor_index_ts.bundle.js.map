{"version":3,"file":"src_apps_insights_components_FormulaBuilder_components_FlowEditor_index_ts.bundle.js","mappings":"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","sources":["webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/FlowEditor.render.tsx","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/FlowEditor.root.tsx","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/FlowEditor.state.ts","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/FlowEditor.styles.ts","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/FlowEditor.types.ts","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/FlowEditor.utils.ts","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/components/CustomNode/CustomNode.render.tsx","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/components/CustomNode/CustomNode.root.tsx","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/components/CustomNode/CustomNode.state.ts","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/components/CustomNode/CustomNode.styles.ts","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/components/CustomNode/index.ts","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/index.ts"],"sourcesContent":["import React, { lazy } from 'react';\r\nimport { Popover, PopoverSurface, tokens } from '@fluentui/react-components';\r\nimport { CUSTOM_NODE_NAME, IFlowEditorRenderProps } from './FlowEditor.types';\r\nimport { CustomNode } from './components/CustomNode';\r\nimport 'reactflow/dist/style.css';\r\nimport { ElementPickerRootMenu } from '../../../ElementPickers/ElementPickerRootMenu';\r\n\r\n/* istanbul ignore next */\r\nconst ReactFlow = lazy(() =>\r\n  import('reactflow').then((module) => ({\r\n    default: module.ReactFlow,\r\n  })),\r\n);\r\n/* istanbul ignore next */\r\nconst Background = lazy(() =>\r\n  import('reactflow').then((module) => ({\r\n    default: module.Background,\r\n  })),\r\n);\r\n/* istanbul ignore next */\r\nconst Controls = lazy(() =>\r\n  import('reactflow').then((module) => ({\r\n    default: module.Controls,\r\n  })),\r\n);\r\n/* istanbul ignore next */\r\nconst MiniMap = lazy(() =>\r\n  import('reactflow').then((module) => ({\r\n    default: module.MiniMap,\r\n  })),\r\n);\r\n\r\nconst gridDotColor = tokens.colorNeutralForeground4;\r\nconst minimapStyle = {\r\n  height: 120,\r\n};\r\nconst nodeTypes = {\r\n  [CUSTOM_NODE_NAME]: CustomNode,\r\n};\r\n\r\nexport const useFlowEditorRender: React.FC<IFlowEditorRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <ReactFlow\r\n        nodes={state.nodes}\r\n        edges={state.edges}\r\n        onNodesDelete={state.onNodesDelete}\r\n        onNodesChange={state.onNodesChange}\r\n        fitView\r\n        nodeTypes={nodeTypes}\r\n        onNodeClick={state.onNodeSelect}\r\n        onContextMenu={state.handleContextMenuTriggered}\r\n      >\r\n        <MiniMap style={minimapStyle} zoomable pannable />\r\n        <Controls />\r\n        <Background color={gridDotColor} gap={16} />\r\n      </ReactFlow>\r\n      <Popover\r\n        open={state.isContextMenuOpen}\r\n        onOpenChange={\r\n          /* istanbul ignore next */\r\n          (e, data) =>\r\n            // handle the popover dismissing itself when you click away\r\n            state.onChangeContextMenuVisibility(data.open)\r\n        }\r\n        positioning={{ positioningRef: state.menuPositioningRef }}\r\n      >\r\n        <PopoverSurface>\r\n          <ElementPickerRootMenu />\r\n        </PopoverSurface>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IFlowEditorProps } from './FlowEditor.types';\r\nimport { useFlowEditorRender } from './FlowEditor.render';\r\nimport { useClassNames } from './FlowEditor.styles';\r\nimport { useFlowEditorState } from './FlowEditor.state';\r\n\r\nconst MODULE_NAME = 'FlowEditor';\r\n\r\nexport const FlowEditor: React.FC<IFlowEditorProps> = (props) => {\r\n  // get state\r\n  const state = useFlowEditorState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useFlowEditorRender({ state, styles });\r\n};\r\n\r\nFlowEditor.displayName = MODULE_NAME;\r\n","import {\r\n  MouseEventHandler,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n} from 'react';\r\nimport {\r\n  getLogger,\r\n  useDebugLogging,\r\n  FormulaElement,\r\n  FormulaRelationship,\r\n} from '@do/core';\r\nimport { IFlowEditorProps, IFlowEditorState } from './FlowEditor.types';\r\nimport {\r\n  Node,\r\n  NodeMouseHandler,\r\n  useEdgesState,\r\n  useNodesState,\r\n} from 'reactflow';\r\nimport { useBoolean } from '@fluentui/react-hooks';\r\nimport {\r\n  PositioningImperativeRef,\r\n  PositioningVirtualElement,\r\n} from '@fluentui/react-components';\r\nimport { useFlowEditorContext } from './context/FlowEditorContext';\r\nimport { FlowEditorContextActionType } from './context/FlowEditorContext.types';\r\nimport { useInsightsPageContext } from '../../../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContextActionType } from '../../../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport {\r\n  convertFormulaRelationshipsToEdges,\r\n  convertFormulaElementsToNodes,\r\n} from './FlowEditor.utils';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'FlowEditor.state';\r\n\r\nconst getEdgesFromState = (\r\n  formulaRelationships: FormulaRelationship[],\r\n  debugLogging: boolean,\r\n) => {\r\n  const edges = convertFormulaRelationshipsToEdges(formulaRelationships);\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Computed relationships from graph data.', {\r\n      edges,\r\n      formulaRelationships,\r\n    });\r\n  return edges;\r\n};\r\n\r\nconst getNodesFromState = (\r\n  formulaElements: FormulaElement[],\r\n  debugLogging: boolean,\r\n) => {\r\n  const nodes = convertFormulaElementsToNodes(formulaElements);\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Computed nodes from graph data.', {\r\n      nodes,\r\n      formulaElements,\r\n    });\r\n  return nodes;\r\n};\r\n\r\nexport const useFlowEditorState = (\r\n  _props: IFlowEditorProps,\r\n): IFlowEditorState => {\r\n  // contexts\r\n  const { pageState, pageDispatch } = useInsightsPageContext();\r\n  const { flowEditorState, flowEditorDispatch } = useFlowEditorContext();\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // state\r\n  const formulaElements = pageState.currentFormula.elements;\r\n  const formulaRelationships = pageState.currentFormula.edges;\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(\r\n    getNodesFromState(formulaElements || [], debugLogging),\r\n  );\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(\r\n    getEdgesFromState(formulaRelationships || [], debugLogging),\r\n  );\r\n  const [isContextMenuOpen, { setTrue, setFalse, toggle }] = useBoolean(false);\r\n  const menuPositioningRef = useRef<PositioningImperativeRef>(null);\r\n\r\n  // callbacks\r\n  const onNodeSelect: NodeMouseHandler = useCallback(\r\n    (_event, node: Node<FormulaElement>) => {\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.SELECTED_NODE_SET,\r\n        payload: {\r\n          value: node.data.id,\r\n        },\r\n      });\r\n    },\r\n    [pageDispatch],\r\n  );\r\n  const onChangeContextMenuVisibility = useCallback(\r\n    (value?: boolean) => {\r\n      if (value === undefined) {\r\n        toggle();\r\n      } else {\r\n        value ? setTrue() : setFalse();\r\n      }\r\n    },\r\n    [setFalse, setTrue, toggle],\r\n  );\r\n  const onContextMenuTriggered: MouseEventHandler<HTMLElement> = useCallback(\r\n    (event) => {\r\n      // Prevent native context menu from showing\r\n      event.preventDefault();\r\n      onChangeContextMenuVisibility(true);\r\n\r\n      const virtualElement: PositioningVirtualElement = {\r\n        getBoundingClientRect:\r\n          /* istanbul ignore next */\r\n          () => {\r\n            return {\r\n              width: 0,\r\n              height: 0,\r\n              x: event.clientX,\r\n              y: event.clientY,\r\n              top: event.clientY,\r\n              right: event.clientX,\r\n              left: event.clientX,\r\n              bottom: event.clientY,\r\n            };\r\n          },\r\n      };\r\n      /* istanbul ignore next */\r\n      menuPositioningRef.current?.setTarget(virtualElement);\r\n    },\r\n    [onChangeContextMenuVisibility],\r\n  );\r\n\r\n  // Delete Node on Click of backspace handling\r\n  const onNodesDelete = useCallback(\r\n    (nodes: Node[]) => {\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.FORMULA_REMOVE_ELEMENTS,\r\n        payload: {\r\n          ids: nodes.map((node) => node.id),\r\n        },\r\n      });\r\n    },\r\n    [pageDispatch],\r\n  );\r\n  // side effects\r\n  // respond to edges in the node data\r\n  useEffect(() => {\r\n    if (formulaElements) {\r\n      const nodes = getNodesFromState(formulaElements, debugLogging);\r\n      setNodes(nodes);\r\n    }\r\n  }, [debugLogging, formulaElements, setNodes]);\r\n\r\n  // respond to changes in the edge data\r\n  useEffect(() => {\r\n    if (formulaRelationships) {\r\n      const edges = getEdgesFromState(formulaRelationships, debugLogging);\r\n      setEdges(edges);\r\n    }\r\n  }, [debugLogging, formulaRelationships, setEdges]);\r\n  // reflect changes in the page context over to the flow editor context\r\n  // using an effect so that if anything else updates the selected element it gets propagated correctly\r\n  useEffect(() => {\r\n    if (\r\n      pageState.currentFormula.selectedElementId !==\r\n      flowEditorState.selectedNodeId\r\n    ) {\r\n      flowEditorDispatch({\r\n        type: FlowEditorContextActionType.SELECTED_NODE_SET,\r\n        payload: {\r\n          value: pageState.currentFormula.selectedElementId,\r\n        },\r\n      });\r\n    }\r\n  }, [\r\n    flowEditorDispatch,\r\n    flowEditorState.selectedNodeId,\r\n    pageState.currentFormula,\r\n  ]);\r\n\r\n  // result\r\n  const state: IFlowEditorState = useMemo(() => {\r\n    return {\r\n      nodes: nodes,\r\n      edges: edges,\r\n      isContextMenuOpen,\r\n      menuPositioningRef,\r\n      onChangeContextMenuVisibility,\r\n      handleContextMenuTriggered: onContextMenuTriggered,\r\n      onNodesChange,\r\n      onNodesDelete,\r\n      onEdgesChange,\r\n      onNodeSelect,\r\n    };\r\n  }, [\r\n    nodes,\r\n    edges,\r\n    isContextMenuOpen,\r\n    onChangeContextMenuVisibility,\r\n    onContextMenuTriggered,\r\n    onNodesChange,\r\n    onNodesDelete,\r\n    onEdgesChange,\r\n    onNodeSelect,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import { IFlowEditorStyles, FlowEditorClasses } from './FlowEditor.types';\r\nimport { makeStyles } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IFlowEditorStyles =\r\n  makeStyles<FlowEditorClasses>({\r\n    root: {\r\n      height: '100%',\r\n    },\r\n  });\r\n","import { MouseEventHandler, RefObject } from 'react';\r\n\r\nimport {\r\n  Edge,\r\n  EdgeChange,\r\n  Node,\r\n  NodeChange,\r\n  NodeMouseHandler,\r\n} from 'reactflow';\r\nimport { FormulaElement } from '@do/core';\r\nimport { PositioningImperativeRef } from '@fluentui/react-components';\r\n\r\nexport const CUSTOM_NODE_NAME = 'CustomNode';\r\nexport type NodeData = FormulaElement & {\r\n  displayType: string;\r\n};\r\n\r\n/** input parameters to FlowEditor */\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface IFlowEditorProps {}\r\n\r\n/** state values used for rendering the item */\r\nexport type IFlowEditorState = {\r\n  nodes: Node<NodeData>[];\r\n  edges: Edge[];\r\n  isContextMenuOpen: boolean;\r\n  menuPositioningRef: RefObject<PositioningImperativeRef>;\r\n  onChangeContextMenuVisibility: (value?: boolean) => void;\r\n  handleContextMenuTriggered: MouseEventHandler<HTMLElement>;\r\n  onNodeSelect: NodeMouseHandler;\r\n  onNodesChange: (nodes: NodeChange[]) => void;\r\n  onNodesDelete: (nodes: Node[]) => void;\r\n  onEdgesChange: (edges: EdgeChange[]) => void;\r\n};\r\n\r\n/** the props send to the render function */\r\nexport type IFlowEditorRenderProps = {\r\n  state: IFlowEditorState;\r\n  styles: IFlowEditorStyles;\r\n};\r\n\r\n/** the names of styling classes for FlowEditor */\r\nexport type FlowEditorClasses = 'root';\r\n/** the computed styles object output from the styles hook */\r\nexport type IFlowEditorStyles = Record<FlowEditorClasses, string>;\r\n","import { Edge, MarkerType, Node } from 'reactflow';\r\nimport { t, strings } from '@do/localization';\r\nimport { v4 } from 'uuid';\r\nimport { FormulaRelationship, FormulaElement, NonThemedColors } from '@do/core';\r\nimport { tokens } from '@fluentui/react-components';\r\nimport { CUSTOM_NODE_NAME, NodeData } from './FlowEditor.types';\r\n\r\ntype GraphNode = Node<NodeData>;\r\nconst BASE_HORIZONTAL_OFFSET = -200;\r\nconst BASE_VERTICAL_OFFSET = -200;\r\nconst NODE_VERTICAL_OFFSET = 100;\r\nconst NODE_HORIZONTAL_OFFSET = 300;\r\n\r\nconst getXPositionByElementType = (element: FormulaElement) => {\r\n  let multiplier = 0;\r\n  switch (element.type) {\r\n    case 'Expression':\r\n    case 'Function':\r\n      multiplier = 2;\r\n      break;\r\n    case 'OutputProperty':\r\n      multiplier = 3;\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n  }\r\n  return BASE_HORIZONTAL_OFFSET + multiplier * NODE_HORIZONTAL_OFFSET;\r\n};\r\nconst getDisplayType = (element: FormulaElement) => {\r\n  switch (element.type) {\r\n    case 'Expression':\r\n      return t(strings.insights.formula_builder.flow_editor.expression);\r\n    case 'Function':\r\n      return t(strings.insights.formula_builder.flow_editor.function);\r\n    case 'InputProperty':\r\n      return t(strings.insights.formula_builder.flow_editor.input_property);\r\n    case 'OutputProperty':\r\n      return t(strings.insights.formula_builder.flow_editor.output_property);\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nexport const convertFormulaElementsToNodes = (\r\n  elements: FormulaElement[],\r\n): GraphNode[] => {\r\n  const nodes: GraphNode[] = [];\r\n\r\n  // group all elements by type\r\n  const elementsByType = new Map<string, FormulaElement[]>();\r\n  elements?.forEach((x) => {\r\n    // group expressions and function for now since we use this for offsets in the layout and they are in the same column\r\n    const type =\r\n      x.type === 'Expression' || x.type === 'Function' ? 'Expression' : x.type;\r\n\r\n    const collection = elementsByType.get(type) || [];\r\n    collection.push(x);\r\n    elementsByType.set(type, collection);\r\n  });\r\n\r\n  // loop each group (necessaryt to be able to compute vertical offset amongst those nodes since we have a very primitive layout algo right now)\r\n  elementsByType.forEach((currentElements: FormulaElement[]) => {\r\n    currentElements.forEach((element, index) => {\r\n      const currentNode: GraphNode = {\r\n        id: element.id,\r\n        position: {\r\n          x: getXPositionByElementType(element),\r\n          y: index * NODE_VERTICAL_OFFSET + BASE_VERTICAL_OFFSET, // TODO: handle cases of expressions pointing to expressions\r\n        },\r\n        type: CUSTOM_NODE_NAME,\r\n        data: {\r\n          ...element,\r\n          displayType: getDisplayType(element),\r\n        },\r\n      };\r\n      nodes.push(currentNode);\r\n    });\r\n  });\r\n  return nodes;\r\n};\r\n\r\nexport const convertFormulaRelationshipsToEdges = (\r\n  relationships: FormulaRelationship[],\r\n): Edge[] => {\r\n  return relationships.map((x) => ({\r\n    id: v4(),\r\n    source: x.source,\r\n    target: x.target,\r\n    style: {\r\n      stroke: tokens.colorBrandBackground,\r\n    },\r\n    markerEnd: {\r\n      type: MarkerType.ArrowClosed,\r\n      color: NonThemedColors.BrandColor,\r\n    },\r\n  }));\r\n};\r\n","import React from 'react';\r\nimport { CustomNodeRenderProps } from './CustomNode.types';\r\nimport { Handle, Position } from 'reactflow';\r\nimport {\r\n  Button,\r\n  Menu,\r\n  MenuPopover,\r\n  MenuTrigger,\r\n  mergeClasses,\r\n} from '@fluentui/react-components';\r\nimport { Add16Regular, Delete16Regular } from '@fluentui/react-icons';\r\nimport { ElementPickerRootMenu } from '../../../../../ElementPickers/ElementPickerRootMenu';\r\nexport const enum CustomNodeTestIds {\r\n  DeleteNodeButton = 'delete-node-button',\r\n}\r\nexport const useCustomNodeRender: React.FC<CustomNodeRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  const { data, isSelected, hasError } = state;\r\n\r\n  // data\r\n  const showLeftHandle = data.type !== 'InputProperty';\r\n  const showRightHandle = data.type !== 'OutputProperty';\r\n\r\n  const isFunctionNode = data.type === 'Function';\r\n  const isOutputNode = data.type === 'OutputProperty';\r\n\r\n  // Set styles based on selected and error state\r\n  let rootClass = styles.root;\r\n  let leftHandleClass = mergeClasses(styles.handleBase, styles.handleLeft);\r\n  let rightHandleClass = mergeClasses(styles.handleBase, styles.handleRight);\r\n  let nameClass = styles.nameBase;\r\n  let statusBarClass = styles.statusBarBase;\r\n  let contextMenuButtonClass = styles.contextMenuButton;\r\n\r\n  if (isSelected && hasError) {\r\n    rootClass = mergeClasses(rootClass, styles.rootSelectedError);\r\n    leftHandleClass = mergeClasses(leftHandleClass, styles.handleLeftSelected);\r\n    rightHandleClass = mergeClasses(\r\n      rightHandleClass,\r\n      styles.handleRightSelected,\r\n    );\r\n    statusBarClass = mergeClasses(\r\n      statusBarClass,\r\n      styles.statusBarSelectedBorderRadius,\r\n      styles.statusBarErrorColor,\r\n    );\r\n    contextMenuButtonClass = mergeClasses(\r\n      contextMenuButtonClass,\r\n      styles.contextMenuButtonError,\r\n    );\r\n  } else if (isSelected && !hasError) {\r\n    nameClass = mergeClasses(nameClass, styles.nameNoError);\r\n    rootClass = mergeClasses(rootClass, styles.rootSelected);\r\n    leftHandleClass = mergeClasses(leftHandleClass, styles.handleLeftSelected);\r\n    rightHandleClass = mergeClasses(\r\n      rightHandleClass,\r\n      styles.handleRightSelected,\r\n    );\r\n    statusBarClass = mergeClasses(\r\n      statusBarClass,\r\n      styles.statusBarSelectedBorderRadius,\r\n      styles.statusBarSelectedColor,\r\n    );\r\n  } else if (!isSelected && hasError) {\r\n    statusBarClass = mergeClasses(\r\n      statusBarClass,\r\n      styles.statusBarUnselectedBorderRadius,\r\n      styles.statusBarErrorColor,\r\n    );\r\n    contextMenuButtonClass = mergeClasses(\r\n      contextMenuButtonClass,\r\n      styles.contextMenuButtonError,\r\n      styles.contextMenuButton,\r\n    );\r\n  } else if (!isSelected && !hasError) {\r\n    nameClass = mergeClasses(nameClass, styles.nameNoError);\r\n    statusBarClass = mergeClasses(\r\n      statusBarClass,\r\n      styles.statusBarUnselectedBorderRadius,\r\n      styles.statusBarUnselectedColor,\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={rootClass}>\r\n      {showLeftHandle && (\r\n        <Handle\r\n          type='target'\r\n          position={Position.Left}\r\n          className={leftHandleClass}\r\n          isConnectable={false}\r\n        />\r\n      )}\r\n      <div className={statusBarClass} />\r\n      <div className={styles.content}>\r\n        <div className={styles.nodeType}>{data.displayType}</div>\r\n        {isFunctionNode && (\r\n          <div>\r\n            <span className={styles.label}>Type:</span>\r\n            <span>{data.dataType}</span>\r\n          </div>\r\n        )}\r\n        <div className={styles.contentNameContainer}>\r\n          <div className={nameClass}>{data.displayName}</div>\r\n          <div>\r\n            <Button\r\n              onClick={state.onDeleteNode}\r\n              size='small'\r\n              appearance='transparent'\r\n              data-testid={CustomNodeTestIds.DeleteNodeButton}\r\n              icon={<Delete16Regular />}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showRightHandle && (\r\n        <Handle\r\n          type='source'\r\n          position={Position.Right}\r\n          id='a'\r\n          className={rightHandleClass}\r\n          isConnectable={false}\r\n        />\r\n      )}\r\n      {!isOutputNode && (\r\n        <Menu>\r\n          <MenuTrigger>\r\n            <Button\r\n              size='small'\r\n              appearance='primary'\r\n              icon={<Add16Regular />}\r\n              className={contextMenuButtonClass}\r\n            />\r\n          </MenuTrigger>\r\n          <MenuPopover>\r\n            <ElementPickerRootMenu dataType={data.type} />\r\n          </MenuPopover>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { CustomNodeProps } from './CustomNode.types';\r\nimport { useCustomNodeRender } from './CustomNode.render';\r\nimport { useClassNames } from './CustomNode.styles';\r\nimport { useCustomNodeState } from './CustomNode.state';\r\n\r\nconst MODULE_NAME = 'CustomNode';\r\n\r\nexport const CustomNode: React.FC<CustomNodeProps> = (props) => {\r\n  // get state\r\n  const state = useCustomNodeState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useCustomNodeRender({ state, styles });\r\n};\r\n\r\nCustomNode.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { CustomNodeProps, CustomNodeState } from './CustomNode.types';\r\nimport { useFlowEditorContext } from '../../context/FlowEditorContext';\r\nimport { InsightsPageContextActionType } from '../../../../../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { useInsightsPageContext } from '../../../../../../contexts/InsightsPageContext/InsightsPageContext';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'CustomNode.state';\r\n\r\nexport const useCustomNodeState = (props: CustomNodeProps): CustomNodeState => {\r\n  // context\r\n  const {\r\n    flowEditorState: { selectedNodeId },\r\n  } = useFlowEditorContext();\r\n  const { pageDispatch } = useInsightsPageContext();\r\n  // state\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n  const onDeleteNode = useCallback(() => {\r\n    const nodeId = props.data.id;\r\n    // remove the element from the formula on clicking the delete button in custom Node\r\n    pageDispatch({\r\n      type: InsightsPageContextActionType.FORMULA_REMOVE_ELEMENTS,\r\n      payload: {\r\n        ids: [nodeId],\r\n      },\r\n    });\r\n  }, [props.data.id, pageDispatch]);\r\n  // side effects\r\n\r\n  // result\r\n  const state: CustomNodeState = useMemo(() => {\r\n    return {\r\n      data: props.data,\r\n      onDeleteNode,\r\n      isSelected: props.data.id === selectedNodeId,\r\n      hasError:\r\n        !!props.data.errorMessages &&\r\n        Object.keys(props.data.errorMessages).length > 0,\r\n    };\r\n  }, [props.data, onDeleteNode, selectedNodeId]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import { CustomNodeStyles, CustomNodeClasses } from './CustomNode.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nconst BRAND_COLOR = tokens.colorBrandBackground;\r\nconst ERROR_COLOR = tokens.colorPaletteRedForeground1;\r\n\r\nexport const useClassNames: () => CustomNodeStyles =\r\n  makeStyles<CustomNodeClasses>({\r\n    root: {\r\n      backgroundColor: tokens.colorNeutralBackground1,\r\n      ...shorthands.borderRadius(tokens.borderRadiusMedium),\r\n      boxShadow: tokens.shadow4,\r\n      display: 'flex',\r\n      width: '200px',\r\n    },\r\n    rootSelected: {\r\n      ...shorthands.border('2px', 'solid', BRAND_COLOR),\r\n    },\r\n    rootSelectedError: {\r\n      ...shorthands.border('2px', 'solid', ERROR_COLOR),\r\n    },\r\n    content: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: '100%',\r\n      ...shorthands.gap('4px'),\r\n      ...shorthands.padding('8px', '8px'),\r\n    },\r\n    contentNameContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    contextMenuButton: {\r\n      ...shorthands.borderRadius('50%'),\r\n      height: '16px',\r\n      minHeight: '16px',\r\n      minWidth: '16px',\r\n      position: 'absolute',\r\n      right: '-24px',\r\n      top: 'calc(50% - 8px)',\r\n      width: '16px',\r\n      '& svg': {\r\n        width: '100%',\r\n      },\r\n    },\r\n    contextMenuButtonError: {\r\n      backgroundColor: ERROR_COLOR,\r\n    },\r\n    handleBase: {\r\n      backgroundColor: BRAND_COLOR,\r\n      width: '4px',\r\n      height: '4px',\r\n      minWidth: '4px',\r\n      minHeight: '4px',\r\n      ...shorthands.border('2px', 'solid', BRAND_COLOR),\r\n      ...shorthands.outline('2px', 'solid', tokens.colorNeutralBackground1),\r\n    },\r\n    handleLeft: {\r\n      left: '-4px', // shift out to handle missing border\r\n    },\r\n    handleRight: {\r\n      right: '-4px', // shift out to handle missing border\r\n    },\r\n    handleLeftSelected: {\r\n      left: '-3px', // move it in when there's a border\r\n    },\r\n    handleRightSelected: {\r\n      right: '-3px', // move it in when there's a border\r\n    },\r\n    label: {\r\n      fontWeight: tokens.fontWeightSemibold,\r\n      marginRight: '4px',\r\n    },\r\n    nameBase: {\r\n      fontWeight: tokens.fontWeightBold,\r\n      wordBreak: 'break-word',\r\n    },\r\n    nameNoError: {\r\n      color: BRAND_COLOR,\r\n    },\r\n    nameError: {\r\n      color: ERROR_COLOR,\r\n    },\r\n    nodeType: {\r\n      fontWeight: tokens.fontWeightSemibold,\r\n    },\r\n    statusBarBase: {\r\n      width: '6px',\r\n    },\r\n    statusBarUnselectedBorderRadius: {\r\n      ...shorthands.borderRadius(\r\n        tokens.borderRadiusMedium,\r\n        0,\r\n        0,\r\n        tokens.borderRadiusMedium,\r\n      ),\r\n    },\r\n    statusBarSelectedBorderRadius: {\r\n      ...shorthands.borderRadius(\r\n        tokens.borderRadiusSmall,\r\n        0,\r\n        0,\r\n        tokens.borderRadiusSmall,\r\n      ),\r\n    },\r\n    statusBarUnselectedColor: {\r\n      backgroundColor: tokens.colorNeutralBackground6,\r\n    },\r\n    statusBarSelectedColor: {\r\n      backgroundColor: BRAND_COLOR,\r\n    },\r\n    statusBarErrorColor: {\r\n      backgroundColor: ERROR_COLOR,\r\n    },\r\n  });\r\n","export { CustomNode } from './CustomNode.root';\r\nexport { CustomNodeProps } from './CustomNode.types';\r\n","export { FlowEditor } from './FlowEditor.root';\r\nexport { IFlowEditorProps } from './FlowEditor.types';\r\n"],"names":["__styles","useClassNames","root","Bqenvij","d","shorthands","tokens","BRAND_COLOR","colorBrandBackground","ERROR_COLOR","colorPaletteRedForeground1","De3pzq","Bbmb7ep","Beyfa6y","B7oj6ja","Btl43ni","E5pizo","mc9l5x","a9b677","rootSelected","B4j52fo","Bekrc4i","Bn0qgzm","ibv6hh","icvyot","vrafjx","oivjwe","wvpqe5","g2u3we","h3c5rm","B9xav0g","zhjwy3","rootSelectedError","content","Beiy3e4","i8kkvl","Belr9w4","z8tnut","z189sj","Byoj8tv","uwmqm3","contentNameContainer","Bt984gj","Brf1p80","contextMenuButton","sshi5w","Bf4jedk","qhf8xq","j35jbq","Bhzewxz","B5pe6w7","contextMenuButtonError","handleBase","Bpd4iqm","oeaueh","Bw0xxkn","handleLeft","oyh7mz","handleRight","handleLeftSelected","handleRightSelected","label","Bhrd7zp","t21cq0","nameBase","Biipf1f","nameNoError","sj55zd","nameError","nodeType","statusBarBase","statusBarUnselectedBorderRadius","statusBarSelectedBorderRadius","statusBarUnselectedColor","statusBarSelectedColor","statusBarErrorColor"],"sourceRoot":""}