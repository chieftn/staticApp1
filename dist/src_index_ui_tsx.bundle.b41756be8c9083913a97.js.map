{"version":3,"file":"src_index_ui_tsx.bundle.b41756be8c9083913a97.js","mappings":";;;;;;;;;;;;;;;AAA0B;AAKQ;AAU3B,SAAS,GAAG,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,iBAAiB,EAAY;IACzE,OAAO,CACH;QACA,iDAAC,2CAAM,IAAC,aAAa,EAAE,MAAM,GAAG,CAC7B,CAEN,CAAC;AACN,CAAC;;;;;;;;;;;;;;;;;;ACtB8B;AAKO;AAE/B,MAAM,MAAM,GAAG,CAAC,KAA4B,EAAE,EAAE;IACnD,OAAO,CACH,iDAAC,+DAAO,oBAAK,KAAK;QAChB,iDAAC,2DAAG,IAAC,KAAK,EAAC,MAAM,gBAAgB;QACjC,iDAAC,2DAAG,IAAC,KAAK,EAAC,MAAM,iBAAiB,CAC5B,CACX;AACL,CAAC,CAAC;;;;;;;;;;;;;;;ACJK,MAAM,YAAY,GAAiB;IACtC,MAAM,EAAE;QACJ,QAAQ,EAAE,QAAQ;KACrB;IACD,GAAG,EAAE;QACD,QAAQ,EAAE,KAAK;KAClB;IACD,IAAI,EAAE;QACF,QAAQ,EAAE,MAAM;KACnB;IACD,KAAK,EAAE;QACH,QAAQ,EAAE,OAAO;KACpB;IACD,GAAG,EAAE;QACD,QAAQ,EAAE,KAAK;KAClB;IACD,IAAI,EAAE;QACF,QAAQ,EAAE,MAAM;KACnB;IACD,IAAI,EAAE;QACF,QAAQ,EAAE,MAAM;KACnB;IACD,EAAE,EAAE;QACA,QAAQ,EAAE,IAAI;KACjB;IACD,EAAE,EAAE;QACA,QAAQ,EAAE,IAAI;KACjB;IACD,EAAE,EAAE;QACA,QAAQ,EAAE,IAAI;KACjB;IACD,EAAE,EAAE;QACA,QAAQ,EAAE,IAAI;KACjB;IACD,KAAK,EAAE;QACH,QAAQ,EAAE,OAAO;KACpB;IACD,KAAK,EAAE;QACH,QAAQ,EAAE,OAAO;KACpB;IACD,OAAO,EAAE;QACL,QAAQ,EAAE,SAAS;KACtB;CACJ,CAAC;;;;;;;;;;;;;;;;;;;;;ACrD4E;AAC/B;AACrB;AACO;AACL;AACkB;AAEvC,SAAS,UAAU,CAAC,MAAkB;IACzC,MAAM,MAAM,GAAG,gFAAqB,EAAE,CAAC;IACvC,MAAM,OAAO,GAAG,6DAAoB,EAAE,CAAC;IACvC,MAAM,kBAAkB,GAAG,uDAAY,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,+DAAoB,CAAC;IACxF,6DAA6D;IAC7D,8DAA8D;IAC9D,0CAA0C;IAC1C,kCAAkC;IAClC,wCAAwC;IACxC,6BAA6B;IAE7B,MAAM;IACN,+BAA+B;IAE/B,6CAAe,CACX,iDAAC,qCAAG;IACA,sBAAsB;;QAAtB,sBAAsB;QACtB,OAAO,EAAE,OAAO,EAChB,eAAe,EAAE,MAAM,EACvB,iBAAiB,EAAE,kBAAkB,GACvC,EACF,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAClC,CAAC;AACN,CAAC","sources":["webpack://sample-tridentreactapp/./src/App.tsx","webpack://sample-tridentreactapp/./src/Ribbon.tsx","webpack://sample-tridentreactapp/./src/environments.ts","webpack://sample-tridentreactapp/./src/index.ui.tsx"],"sourcesContent":["import React from \"react\";\r\n// import { Route, Router, Switch } from \"react-router-dom\";\r\nimport { History } from \"history\";\r\nimport { ExtensionClientAPI } from \"@trident/extension-client\";\r\nimport { EnvironmentSetting } from \"./environments\";\r\nimport { Ribbon } from './Ribbon';\r\n\r\ninterface AppProps {\r\n    history: History;\r\n    extensionClient: ExtensionClientAPI;\r\n    environmentConfig: EnvironmentSetting;\r\n}\r\n\r\n\r\n\r\nexport function App({ history, extensionClient, environmentConfig }: AppProps) {\r\n    return (\r\n        <>\r\n        <Ribbon selectedValue={\"tab1\"}/>\r\n        </>\r\n\r\n    );\r\n}","import * as React from 'react';\r\nimport {\r\n    Tab,\r\n    TabList,\r\n    TabListProps,\r\n  } from \"@fluentui/react-components\";\r\n\r\nexport const Ribbon = (props: Partial<TabListProps>) => {\r\n    return (\r\n        <TabList {...props}>\r\n          <Tab value=\"tab1\">First Tab</Tab>\r\n          <Tab value=\"tab2\">Second Tab</Tab>\r\n      </TabList>\r\n    )\r\n};","import { EnvironmentName } from \"@trident/extension-client\";\r\n\r\nexport interface EnvironmentSetting {\r\n    aSetting: string;\r\n}\r\n\r\nexport type Environments = {\r\n    [key in EnvironmentName]: EnvironmentSetting;\r\n};\r\n\r\nexport const environments: Environments = {\r\n    Onebox: {\r\n        aSetting: \"onebox\",\r\n    },\r\n    INT: {\r\n        aSetting: \"int\",\r\n    },\r\n    TEST: {\r\n        aSetting: \"test\",\r\n    },\r\n    DAILY: {\r\n        aSetting: \"daily\",\r\n    },\r\n    DXT: {\r\n        aSetting: \"dxt\",\r\n    },\r\n    MSIT: {\r\n        aSetting: \"msit\",\r\n    },\r\n    PROD: {\r\n        aSetting: \"prod\",\r\n    },\r\n    FF: {\r\n        aSetting: \"ff\",\r\n    },\r\n    TB: {\r\n        aSetting: \"tb\",\r\n    },\r\n    PF: {\r\n        aSetting: \"pf\",\r\n    },\r\n    MC: {\r\n        aSetting: \"mc\",\r\n    },\r\n    USNat: {\r\n        aSetting: \"usnat\",\r\n    },\r\n    USSec: {\r\n        aSetting: \"ussec\",\r\n    },\r\n    DEFAULT: {\r\n        aSetting: \"default\",\r\n    },\r\n};\r\n","import { createExtensionClient, InitParams } from \"@trident/extension-client\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport { environments } from \"./environments\";\r\n\r\nexport function initialize(params: InitParams) {\r\n    const client = createExtensionClient();\r\n    const history = createBrowserHistory();\r\n    const currentEnvironment = environments[params.environmentName] || environments.DEFAULT;\r\n    // client.onNavigate(route => history.push(route.targetUrl));\r\n    // const [location, setLocation] = React.useState<string>('');\r\n    // client.navigation.onNavigate(route => {\r\n    //     console.log('here we are');\r\n    //     history.replace(route.targetUrl);\r\n    //     setLocation(location);\r\n\r\n    // });\r\n    // client.navigation.navigate()\r\n\r\n    ReactDOM.render(\r\n        <App\r\n            // location={location}\r\n            history={history}\r\n            extensionClient={client}\r\n            environmentConfig={currentEnvironment}\r\n        />,\r\n        document.querySelector(\"#root\")\r\n    );\r\n}\r\n"],"names":[],"sourceRoot":""}