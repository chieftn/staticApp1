{"version":3,"file":"vendors-node_modules_fluentui_react-menu_lib_components_MenuPopover_MenuPopover_js-node_modul-4df2df.bundle.js","mappings":"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;AACH,yDAAyD,gCAAgC,yBAAyB;AAClH,CAAC;AACD;AACA;AACA;AACO;AACP;AACA,yBAAyB,4DAAY;AACrC;AACA;AACA;;;;;;;;;;;;;;;;;;AC1E+B;AAC4B;AACM;AACjE;AACA;AACA;AACA,IAAW;AACX,kBAAkB,wEAAuB;AACzC,WAAW,8EAA0B;AACrC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZ+B;AACgD;AAC/E;AACA;AACA;AACA;AACA,IAAW;AACX,yBAAyB,gDAAmB,CAAC,oFAA0B;AACvE;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV+B;AACsC;AACb;AACyB;AACC;AACC;AACsE;AAC/F;AAC1D;AACA;AACA;AACA;AACA;AACA,IAAW;AACX,YAAY,6CAA6C;AACzD,uBAAuB,8EAAuB;AAC9C,2BAA2B,8EAAuB;AAClD,oBAAoB,8EAAuB;AAC3C,iBAAiB,8EAAuB;AACxC,sBAAsB,8EAAuB;AAC7C,wBAAwB,8EAAuB;AAC/C,0BAA0B,8EAAuB;AACjD,wCAAwC,8EAAqB;AAC7D,sBAAsB,iEAAY;AAClC,YAAY,qBAAqB,EAAE,wEAAe;AAClD,uBAAuB,8CAAiB;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kCAAkC,yCAAY;AAC9C,0BAA0B,yCAAY;AACtC,YAAY,MAAM,EAAE,0EAAS;AAC7B,yCAAyC,+DAAU,GAAG,8DAAS;AAC/D,kBAAkB,0EAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,8DAAS;AACnG;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,oBAAoB,2DAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wEAAa;AAC1B,sBAAsB,2EAAgB,CAAC,0EAAc;AACrD,sBAAsB,2EAAgB,CAAC,0EAAc;AACrD,uBAAuB,2EAAgB,CAAC,0EAAc;AACtD,qBAAqB,2EAAgB,CAAC,0EAAc;AACpD;AACA;AACA;AACA;AACA;AACA,iBAAiB,2EAAgB,CAAC,0EAAc;AAChD,mBAAmB,2EAAgB,CAAC,0EAAc;AAClD;AACA,wCAAwC,yEAAkB;AAC1D;AACA;AACA,kBAAkB,uFAA2B;AAC7C;AACA;AACA;AACA;AACA,QAAQ,yEAAa;AACrB;AACA;AACA,WAAW,yEAAa;AACxB;;;;;;;;;;;;;;;;;;;;ACnK+B;AACc;AAC0B;AACpB;AACnD;AACA;AACA,IAAW;AACX,kBAAkB,0DAAgB;AAClC,0BAA0B,oFAA6B;AACvD,WAAW,gEAAmB;AAC9B;AACA;;;;;;;;;;;;;;;;;;ACX+B;AAC2B;AAC1D;AACA;AACA,IAAW;AACX,yBAAyB,gDAAmB,CAAC,+DAAY;AACzD;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+B;AACsF;AAC6B;AAChE;AACxB;AACW;AACK;AAClB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX,sBAAsB,iEAAY;AAClC,YAAY,uNAAuN;AACnO,sBAAsB,gEAAK;AAC3B,8CAA8C,sFAAyB;AACvE;AACA;AACA;AACA;AACA;AACA,WAAW,wFAA2B;AACtC;AACA,qBAAqB,2CAAc;AACnC,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,YAAY,sDAAsD,EAAE,2EAAc;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+EAAoB;AAClE;AACA;AACA;AACA,KAAK;AACL,iCAAiC,2EAAgB,OAAO,oBAAoB;AAC5E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iBAAiB,EAAE,0EAAS;AACxC,0BAA0B,8EAAuB;AACjD,yBAAyB,2EAAgB;AACzC;AACA;AACA,KAAK;AACL,2BAA2B,yCAAY;AACvC,+BAA+B,yCAAY;AAC3C,iCAAiC,+EAAoB;AACrD;AACA;AACA;AACA,KAAK;AACL,uBAAuB,2EAAgB;AACvC,6DAA6D,2DAAgB;AAC7E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL,oBAAoB,2EAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,uGAAuG,2DAAgB;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL,IAAI,6EAAiB;AACrB,kBAAkB,uEAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA,IAAI,8EAAkB;AACtB,kBAAkB,uEAAe;AACjC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,kEAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI,4CAAe;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY,qBAAqB,EAAE,yEAAe;AAClD,uBAAuB,8CAAiB;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI,4CAAe;AACnB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5PO;AACP,YAAY,mMAAmM;AAC/M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvBuE;AACL;AACJ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX,6BAA6B,8EAAuB;AACpD,+BAA+B,qFAAmB,CAAC,sEAAe;AAClE;AACA;;;;;;;;;;;;;;;;;;;;;ACd+B;AAC+C;AAC9E;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX,YAAY,oCAAoC;AAChD;AACA,qBAAqB,2EAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0EAAe;AACjD;AACA;AACA;AACA,KAAK;AACL,IAAI,4CAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;AC1DkF;AACxC;AAC1C;AACA;AACA;AACA,IAAW;AACX,oBAAoB,uDAAU;AAC9B;AACA;AACA,QAAQ,oDAAW;AACnB;AACA,WAAW,4DAAmB;AAC9B;AACA,kBAAkB,0CAAY;AAC9B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAW;AACX,oBAAoB,uDAAU;AAC9B;AACA;AACA,QAAQ,oDAAW;AACnB;AACA,WAAW,4DAAmB;AAC9B;AACA,kBAAkB,0CAAY;AAC9B;AACA,KAAK;AACL","sources":["webpack:///./node_modules/@fluentui/react-menu/lib/components/MenuPopover/MenuPopover.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/MenuPopover/renderMenuPopover.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/MenuPopover/useMenuPopover.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/MenuPopover/useMenuPopoverStyles.styles.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/MenuTrigger/MenuTrigger.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/MenuTrigger/renderMenuTrigger.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/MenuTrigger/useMenuTrigger.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/Menu/Menu.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/Menu/renderMenu.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/Menu/useMenu.js","webpack:///./node_modules/@fluentui/react-menu/lib/components/Menu/useMenuContextValues.js","webpack:///./node_modules/@fluentui/react-menu/lib/utils/useIsSubmenu.js","webpack:///./node_modules/@fluentui/react-menu/lib/utils/useOnMenuEnter.js","webpack:///./node_modules/@fluentui/react-tabster/lib/hooks/useRestoreFocus.js"],"sourcesContent":["import * as React from 'react';\nimport { useMenuPopover_unstable } from './useMenuPopover';\nimport { useMenuPopoverStyles_unstable } from './useMenuPopoverStyles.styles';\nimport { renderMenuPopover_unstable } from './renderMenuPopover';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * Popover intended to wrap `MenuList` and adds styling and interaction support specific to menus\n */ export const MenuPopover = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useMenuPopover_unstable(props, ref);\n    useMenuPopoverStyles_unstable(state);\n    useCustomStyleHook_unstable('useMenuPopoverStyles_unstable')(state);\n    return renderMenuPopover_unstable(state);\n});\nMenuPopover.displayName = 'MenuPopover';\n","  import { jsx as _jsx } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\nimport { Portal } from '@fluentui/react-portal';\n/**\n * Render the final JSX of MenuPopover\n */ export const renderMenuPopover_unstable = (state)=>{\n    assertSlots(state);\n    if (state.inline) {\n        return /*#__PURE__*/ _jsx(state.root, {});\n    }\n    return /*#__PURE__*/ _jsx(Portal, {\n        mountNode: state.mountNode,\n        children: /*#__PURE__*/ _jsx(state.root, {})\n    });\n};\n","import * as React from 'react';\nimport { ArrowLeft, Tab, ArrowRight, Escape } from '@fluentui/keyboard-keys';\nimport { getIntrinsicElementProps, useEventCallback, useMergedRefs, slot } from '@fluentui/react-utilities';\nimport { useMenuContext_unstable } from '../../contexts/menuContext';\nimport { dispatchMenuEnterEvent } from '../../utils/index';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useIsSubmenu } from '../../utils/useIsSubmenu';\nimport { useRestoreFocusSource } from '@fluentui/react-tabster';\n/**\n * Create the state required to render MenuPopover.\n *\n * The returned state can be modified with hooks such as useMenuPopoverStyles_unstable,\n * before being passed to renderMenuPopover_unstable.\n *\n * @param props - props from this instance of MenuPopover\n * @param ref - reference to root HTMLElement of MenuPopover\n */ export const useMenuPopover_unstable = (props, ref)=>{\n    const popoverRef = useMenuContext_unstable((context)=>context.menuPopoverRef);\n    const setOpen = useMenuContext_unstable((context)=>context.setOpen);\n    const open = useMenuContext_unstable((context)=>context.open);\n    const openOnHover = useMenuContext_unstable((context)=>context.openOnHover);\n    const triggerRef = useMenuContext_unstable((context)=>context.triggerRef);\n    const isSubmenu = useIsSubmenu();\n    const canDispatchCustomEventRef = React.useRef(true);\n    const throttleDispatchTimerRef = React.useRef(0);\n    const restoreFocusSourceAttributes = useRestoreFocusSource();\n    const { dir } = useFluent();\n    const CloseArrowKey = dir === 'ltr' ? ArrowLeft : ArrowRight;\n    // use DOM listener since react events propagate up the react tree\n    // no need to do `contains` logic as menus are all positioned in different portals\n    const mouseOverListenerCallbackRef = React.useCallback((node)=>{\n        if (node) {\n            // Dispatches the custom menu mouse enter event with throttling\n            // Needs to trigger on mouseover to support keyboard + mouse together\n            // i.e. keyboard opens submenus while cursor is still on the parent\n            node.addEventListener('mouseover', (e)=>{\n                if (canDispatchCustomEventRef.current) {\n                    canDispatchCustomEventRef.current = false;\n                    dispatchMenuEnterEvent(popoverRef.current, e);\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore #16889 Node setTimeout type leaking\n                    throttleDispatchTimerRef.current = setTimeout(()=>canDispatchCustomEventRef.current = true, 250);\n                }\n            });\n        }\n    }, [\n        popoverRef,\n        throttleDispatchTimerRef\n    ]);\n    React.useEffect(()=>{\n        ()=>clearTimeout(throttleDispatchTimerRef.current);\n    }, []);\n    var _useMenuContext_unstable;\n    const inline = (_useMenuContext_unstable = useMenuContext_unstable((context)=>context.inline)) !== null && _useMenuContext_unstable !== void 0 ? _useMenuContext_unstable : false;\n    const mountNode = useMenuContext_unstable((context)=>context.mountNode);\n    const rootProps = slot.always(getIntrinsicElementProps('div', {\n        role: 'presentation',\n        ...restoreFocusSourceAttributes,\n        ...props,\n        // FIXME:\n        // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n        // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n        ref: useMergedRefs(ref, popoverRef, mouseOverListenerCallbackRef)\n    }), {\n        elementType: 'div'\n    });\n    const { onMouseEnter: onMouseEnterOriginal, onKeyDown: onKeyDownOriginal } = rootProps;\n    rootProps.onMouseEnter = useEventCallback((event)=>{\n        if (openOnHover || isSubmenu) {\n            setOpen(event, {\n                open: true,\n                keyboard: false,\n                type: 'menuPopoverMouseEnter',\n                event\n            });\n        }\n        onMouseEnterOriginal === null || onMouseEnterOriginal === void 0 ? void 0 : onMouseEnterOriginal(event);\n    });\n    rootProps.onKeyDown = useEventCallback((event)=>{\n        const key = event.key;\n        if (key === Escape || isSubmenu && key === CloseArrowKey) {\n            var _popoverRef_current;\n            if (open && ((_popoverRef_current = popoverRef.current) === null || _popoverRef_current === void 0 ? void 0 : _popoverRef_current.contains(event.target)) && !event.isDefaultPrevented()) {\n                setOpen(event, {\n                    open: false,\n                    keyboard: true,\n                    type: 'menuPopoverKeyDown',\n                    event\n                });\n                // stop propagation to avoid conflicting with other elements that listen for `Escape`\n                // e,g: Dialog, Popover, Menu and Tooltip\n                event.preventDefault();\n            }\n        }\n        if (key === Tab) {\n            setOpen(event, {\n                open: false,\n                keyboard: true,\n                type: 'menuPopoverKeyDown',\n                event\n            });\n            if (!isSubmenu) {\n                var _triggerRef_current;\n                (_triggerRef_current = triggerRef.current) === null || _triggerRef_current === void 0 ? void 0 : _triggerRef_current.focus();\n            }\n        }\n        onKeyDownOriginal === null || onKeyDownOriginal === void 0 ? void 0 : onKeyDownOriginal(event);\n    });\n    return {\n        inline,\n        mountNode,\n        components: {\n            root: 'div'\n        },\n        root: rootProps\n    };\n};\n","import { shorthands, mergeClasses, __styles } from '@griffel/react';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nimport { createSlideStyles } from '@fluentui/react-positioning';\nexport const menuPopoverClassNames = {\n  root: 'fui-MenuPopover'\n};\nconst useStyles = /*#__PURE__*/__styles({\n  root: {\n    Bbmb7ep: [\"f1aa9q02\", \"f16jpd5f\"],\n    Beyfa6y: [\"f16jpd5f\", \"f1aa9q02\"],\n    B7oj6ja: [\"f1jar5jt\", \"fyu767a\"],\n    Btl43ni: [\"fyu767a\", \"f1jar5jt\"],\n    De3pzq: \"fxugw4r\",\n    sj55zd: \"f19n0e5\",\n    B7ck84d: \"f1ewtqcl\",\n    Bf4jedk: \"fl8fusi\",\n    B2u0y6b: \"f1kaai3v\",\n    B68tc82: \"f1p9o1ba\",\n    a9b677: \"f1ahpp82\",\n    E5pizo: \"f1hg901r\",\n    z8tnut: \"f10ra9hq\",\n    z189sj: [\"f8wuabp\", \"fycuoez\"],\n    Byoj8tv: \"f1y2xyjm\",\n    uwmqm3: [\"fycuoez\", \"f8wuabp\"],\n    B4j52fo: \"f5ogflp\",\n    Bekrc4i: [\"f1hqa2wf\", \"finvdd3\"],\n    Bn0qgzm: \"f1f09k3d\",\n    ibv6hh: [\"finvdd3\", \"f1hqa2wf\"],\n    icvyot: \"fzkkow9\",\n    vrafjx: [\"fcdblym\", \"fjik90z\"],\n    oivjwe: \"fg706s2\",\n    wvpqe5: [\"fjik90z\", \"fcdblym\"],\n    g2u3we: \"fghlq4f\",\n    h3c5rm: [\"f1gn591s\", \"fjscplz\"],\n    B9xav0g: \"fb073pr\",\n    zhjwy3: [\"fjscplz\", \"f1gn591s\"],\n    Bahqtrf: \"fk6fouc\",\n    Be2twd7: \"fkhj508\",\n    Bhrd7zp: \"figsok6\",\n    Bg96gwp: \"f1i3iumi\",\n    B93otf3: \"f18k4bn6\",\n    vin17d: \"fo1kyvf\",\n    Ezkn3b: \"fetxo7e\",\n    nyiy2g: \"f8x1vz1\",\n    swvrvq: \"f8g0anz\",\n    Bkovbt3: \"fezwn9i\",\n    hgjdhn: \"fz5efge\",\n    fsy9dk: \"f1ydixl4\",\n    B3ogreh: \"f8dgqj5\",\n    jv49x5: \"fnyfnr8\",\n    Bk7o48c: \"fgw77r4\",\n    Bv12yb3: \"ftje0s4\",\n    z0t1cu: \"fi19xcv\",\n    Bks05zx: \"f1mzajhk\",\n    Bvtglag: \"fjp4h9y\"\n  }\n}, {\n  d: [\".f1aa9q02{border-bottom-right-radius:var(--borderRadiusMedium);}\", \".f16jpd5f{border-bottom-left-radius:var(--borderRadiusMedium);}\", \".f1jar5jt{border-top-right-radius:var(--borderRadiusMedium);}\", \".fyu767a{border-top-left-radius:var(--borderRadiusMedium);}\", \".fxugw4r{background-color:var(--colorNeutralBackground1);}\", \".f19n0e5{color:var(--colorNeutralForeground1);}\", \".f1ewtqcl{box-sizing:border-box;}\", \".fl8fusi{min-width:138px;}\", \".f1kaai3v{max-width:300px;}\", \".f1p9o1ba{overflow-x:hidden;}\", \".f1ahpp82{width:max-content;}\", \".f1hg901r{box-shadow:var(--shadow16);}\", \".f10ra9hq{padding-top:4px;}\", \".f8wuabp{padding-right:4px;}\", \".fycuoez{padding-left:4px;}\", \".f1y2xyjm{padding-bottom:4px;}\", \".f5ogflp{border-top-width:1px;}\", \".f1hqa2wf{border-right-width:1px;}\", \".finvdd3{border-left-width:1px;}\", \".f1f09k3d{border-bottom-width:1px;}\", \".fzkkow9{border-top-style:solid;}\", \".fcdblym{border-right-style:solid;}\", \".fjik90z{border-left-style:solid;}\", \".fg706s2{border-bottom-style:solid;}\", \".fghlq4f{border-top-color:var(--colorTransparentStroke);}\", \".f1gn591s{border-right-color:var(--colorTransparentStroke);}\", \".fjscplz{border-left-color:var(--colorTransparentStroke);}\", \".fb073pr{border-bottom-color:var(--colorTransparentStroke);}\", \".fk6fouc{font-family:var(--fontFamilyBase);}\", \".fkhj508{font-size:var(--fontSizeBase300);}\", \".figsok6{font-weight:var(--fontWeightRegular);}\", \".f1i3iumi{line-height:var(--lineHeightBase300);}\", \".f18k4bn6{animation-composition:accumulate;}\", \".fo1kyvf{animation-duration:var(--durationSlower);}\", \".fetxo7e{animation-timing-function:var(--curveDecelerateMid);}\", \".f8x1vz1{--fui-positioning-slide-distance-x:0px;}\", \".f8g0anz{--fui-positioning-slide-distance-y:10px;}\", \".fezwn9i[data-popper-placement^=right]{--fui-positioning-slide-distance-x:-10px;}\", \".fz5efge[data-popper-placement^=right]{--fui-positioning-slide-distance-y:0px;}\", \".f1ydixl4[data-popper-placement^=bottom]{--fui-positioning-slide-distance-x:0px;}\", \".f8dgqj5[data-popper-placement^=bottom]{--fui-positioning-slide-distance-y:-10px;}\", \".fnyfnr8[data-popper-placement^=left]{--fui-positioning-slide-distance-x:10px;}\", \".fgw77r4[data-popper-placement^=left]{--fui-positioning-slide-distance-y:0px;}\", \".ftje0s4{animation-name:f5j8bii,f79suad;}\"],\n  k: [\"@keyframes f5j8bii{from{opacity:0;}to{opacity:1;}}\", \"@keyframes f79suad{from{transform:translate(var(--fui-positioning-slide-distance-x), var(--fui-positioning-slide-distance-y));}}\"],\n  m: [[\"@media (prefers-reduced-motion){.fi19xcv[data-popper-placement]{animation-duration:1ms;}}\", {\n    m: \"(prefers-reduced-motion)\"\n  }], [\"@media (prefers-reduced-motion){.f1mzajhk[data-popper-placement]{animation-name:f5j8bii;}}\", {\n    m: \"(prefers-reduced-motion)\"\n  }]],\n  t: [\"@supports not (animation-composition: accumulate){.fjp4h9y[data-popper-placement]{animation-name:f5j8bii;}}\"]\n});\n/**\n * Apply styling to the Menu slots based on the state\n */\nexport const useMenuPopoverStyles_unstable = state => {\n  const styles = useStyles();\n  state.root.className = mergeClasses(menuPopoverClassNames.root, styles.root, state.root.className);\n  return state;\n};\n//# sourceMappingURL=useMenuPopoverStyles.styles.js.map","import * as React from 'react';\nimport { useMenuTrigger_unstable } from './useMenuTrigger';\nimport { renderMenuTrigger_unstable } from './renderMenuTrigger';\n/**\n * Wraps a trigger element as an only child\n * and adds the necessary event handling to open a popup menu\n */ export const MenuTrigger = (props)=>{\n    const state = useMenuTrigger_unstable(props);\n    return renderMenuTrigger_unstable(state);\n};\nMenuTrigger.displayName = 'MenuTrigger';\n// type casting here is required to ensure internal type FluentTriggerComponent is not leaked\nMenuTrigger.isFluentTriggerComponent = true;\n","import * as React from 'react';\nimport { MenuTriggerContextProvider } from '../../contexts/menuTriggerContext';\n/**\n * Render the final JSX of MenuTrigger\n *\n * Only renders children\n */ export const renderMenuTrigger_unstable = (state)=>{\n    return /*#__PURE__*/ React.createElement(MenuTriggerContextProvider, {\n        value: state.isSubmenu\n    }, state.children);\n};\n","import * as React from 'react';\nimport { useMenuContext_unstable } from '../../contexts/menuContext';\nimport { useIsSubmenu } from '../../utils/useIsSubmenu';\nimport { useFocusFinders, useRestoreFocusTarget } from '@fluentui/react-tabster';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { ArrowRight, ArrowLeft, Escape, ArrowDown } from '@fluentui/keyboard-keys';\nimport { applyTriggerPropsToChildren, getTriggerChild, isHTMLElement, mergeCallbacks, useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { useARIAButtonProps } from '@fluentui/react-aria';\n/**\n * Create the state required to render MenuTrigger.\n * Clones the only child component and adds necessary event handling behaviours to open a popup menu\n *\n * @param props - props from this instance of MenuTrigger\n */ export const useMenuTrigger_unstable = (props)=>{\n    const { children, disableButtonEnhancement = false } = props;\n    const triggerRef = useMenuContext_unstable((context)=>context.triggerRef);\n    const menuPopoverRef = useMenuContext_unstable((context)=>context.menuPopoverRef);\n    const setOpen = useMenuContext_unstable((context)=>context.setOpen);\n    const open = useMenuContext_unstable((context)=>context.open);\n    const triggerId = useMenuContext_unstable((context)=>context.triggerId);\n    const openOnHover = useMenuContext_unstable((context)=>context.openOnHover);\n    const openOnContext = useMenuContext_unstable((context)=>context.openOnContext);\n    const restoreFocusTargetAttribute = useRestoreFocusTarget();\n    const isSubmenu = useIsSubmenu();\n    const { findFirstFocusable } = useFocusFinders();\n    const focusFirst = React.useCallback(()=>{\n        const firstFocusable = findFirstFocusable(menuPopoverRef.current);\n        firstFocusable === null || firstFocusable === void 0 ? void 0 : firstFocusable.focus();\n    }, [\n        findFirstFocusable,\n        menuPopoverRef\n    ]);\n    const openedWithKeyboardRef = React.useRef(false);\n    const hasMouseMoved = React.useRef(false);\n    const { dir } = useFluent();\n    const OpenArrowKey = dir === 'ltr' ? ArrowRight : ArrowLeft;\n    const child = getTriggerChild(children);\n    const onContextMenu = (event)=>{\n        if (isTargetDisabled(event) || event.isDefaultPrevented()) {\n            return;\n        }\n        if (openOnContext) {\n            event.preventDefault();\n            setOpen(event, {\n                open: true,\n                keyboard: false,\n                type: 'menuTriggerContextMenu',\n                event\n            });\n        }\n    };\n    const onClick = (event)=>{\n        if (isTargetDisabled(event)) {\n            return;\n        }\n        if (!openOnContext) {\n            setOpen(event, {\n                open: !open,\n                keyboard: openedWithKeyboardRef.current,\n                type: 'menuTriggerClick',\n                event\n            });\n            openedWithKeyboardRef.current = false;\n        }\n    };\n    const onKeyDown = (event)=>{\n        if (isTargetDisabled(event)) {\n            return;\n        }\n        const key = event.key;\n        if (!openOnContext && (isSubmenu && key === OpenArrowKey || !isSubmenu && key === ArrowDown)) {\n            setOpen(event, {\n                open: true,\n                keyboard: true,\n                type: 'menuTriggerKeyDown',\n                event\n            });\n        }\n        if (key === Escape && !isSubmenu) {\n            setOpen(event, {\n                open: false,\n                keyboard: true,\n                type: 'menuTriggerKeyDown',\n                event\n            });\n        }\n        // if menu is already open, can't rely on effects to focus\n        if (open && key === OpenArrowKey && isSubmenu) {\n            focusFirst();\n        }\n    };\n    const onMouseEnter = (event)=>{\n        if (isTargetDisabled(event)) {\n            return;\n        }\n        if (openOnHover && hasMouseMoved.current) {\n            setOpen(event, {\n                open: true,\n                keyboard: false,\n                type: 'menuTriggerMouseEnter',\n                event\n            });\n        }\n    };\n    // Opening a menu when a mouse hasn't moved and just entering the trigger is a bad a11y experience\n    // First time open the mouse using mousemove and then continue with mouseenter\n    // Only use once to determine that the user is using the mouse since it is an expensive event to handle\n    const onMouseMove = (event)=>{\n        if (isTargetDisabled(event)) {\n            return;\n        }\n        if (openOnHover && !hasMouseMoved.current) {\n            setOpen(event, {\n                open: true,\n                keyboard: false,\n                type: 'menuTriggerMouseMove',\n                event\n            });\n            hasMouseMoved.current = true;\n        }\n    };\n    const onMouseLeave = (event)=>{\n        if (isTargetDisabled(event)) {\n            return;\n        }\n        if (openOnHover) {\n            setOpen(event, {\n                open: false,\n                keyboard: false,\n                type: 'menuTriggerMouseLeave',\n                event\n            });\n        }\n    };\n    const contextMenuProps = {\n        id: triggerId,\n        ...restoreFocusTargetAttribute,\n        ...child === null || child === void 0 ? void 0 : child.props,\n        ref: useMergedRefs(triggerRef, child === null || child === void 0 ? void 0 : child.ref),\n        onMouseEnter: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseEnter, onMouseEnter)),\n        onMouseLeave: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseLeave, onMouseLeave)),\n        onContextMenu: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onContextMenu, onContextMenu)),\n        onMouseMove: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onMouseMove, onMouseMove))\n    };\n    const triggerChildProps = {\n        'aria-haspopup': 'menu',\n        'aria-expanded': !open && !isSubmenu ? undefined : open,\n        ...contextMenuProps,\n        onClick: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onClick, onClick)),\n        onKeyDown: useEventCallback(mergeCallbacks(child === null || child === void 0 ? void 0 : child.props.onKeyDown, onKeyDown))\n    };\n    const ariaButtonTriggerChildProps = useARIAButtonProps((child === null || child === void 0 ? void 0 : child.type) === 'button' || (child === null || child === void 0 ? void 0 : child.type) === 'a' ? child.type : 'div', triggerChildProps);\n    return {\n        isSubmenu,\n        children: applyTriggerPropsToChildren(children, openOnContext ? contextMenuProps : disableButtonEnhancement ? triggerChildProps : ariaButtonTriggerChildProps)\n    };\n};\nconst isTargetDisabled = (event)=>{\n    const isDisabled = (el)=>el.hasAttribute('disabled') || el.hasAttribute('aria-disabled') && el.getAttribute('aria-disabled') === 'true';\n    if (isHTMLElement(event.target) && isDisabled(event.target)) {\n        return true;\n    }\n    return isHTMLElement(event.currentTarget) && isDisabled(event.currentTarget);\n};\n","import * as React from 'react';\nimport { useMenu_unstable } from './useMenu';\nimport { useMenuContextValues_unstable } from './useMenuContextValues';\nimport { renderMenu_unstable } from './renderMenu';\n/**\n * Wrapper component that manages state for a popup MenuList and a MenuTrigger\n */ export const Menu = (props)=>{\n    const state = useMenu_unstable(props);\n    const contextValues = useMenuContextValues_unstable(state);\n    return renderMenu_unstable(state, contextValues);\n};\nMenu.displayName = 'Menu';\n","import * as React from 'react';\nimport { MenuProvider } from '../../contexts/menuContext';\n/**\n * Render the final JSX of Menu\n */ export const renderMenu_unstable = (state, contextValues)=>{\n    return /*#__PURE__*/ React.createElement(MenuProvider, {\n        value: contextValues.menu\n    }, state.menuTrigger, state.open && state.menuPopover);\n};\n","import * as React from 'react';\nimport { usePositioningMouseTarget, usePositioning, resolvePositioningShorthand } from '@fluentui/react-positioning';\nimport { useControllableState, useId, useOnClickOutside, useEventCallback, useOnScrollOutside, elementContains } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useFocusFinders } from '@fluentui/react-tabster';\nimport { useMenuContext_unstable } from '../../contexts/menuContext';\nimport { MENU_ENTER_EVENT, useOnMenuMouseEnter } from '../../utils/index';\nimport { useIsSubmenu } from '../../utils/useIsSubmenu';\n// If it's not possible to position the submenu in smaller viewports, try\n// and fallback to this order of positions\nconst submenuFallbackPositions = [\n    'after',\n    'after-bottom',\n    'before-top',\n    'before',\n    'before-bottom',\n    'above'\n];\n/**\n * Create the state required to render Menu.\n *\n * The returned state can be modified with hooks such as useMenuStyles,\n * before being passed to renderMenu_unstable.\n *\n * @param props - props from this instance of Menu\n */ export const useMenu_unstable = (props)=>{\n    const isSubmenu = useIsSubmenu();\n    const { hoverDelay = 500, inline = false, hasCheckmarks = false, hasIcons = false, closeOnScroll = false, openOnContext = false, persistOnItemClick = false, openOnHover = isSubmenu, defaultCheckedValues, mountNode = null } = props;\n    const triggerId = useId('menu');\n    const [contextTarget, setContextTarget] = usePositioningMouseTarget();\n    const positioningState = {\n        position: isSubmenu ? 'after' : 'below',\n        align: isSubmenu ? 'top' : 'start',\n        target: props.openOnContext ? contextTarget : undefined,\n        fallbackPositions: isSubmenu ? submenuFallbackPositions : undefined,\n        ...resolvePositioningShorthand(props.positioning)\n    };\n    const children = React.Children.toArray(props.children);\n    if (process.env.NODE_ENV !== 'production') {\n        if (children.length === 0) {\n            // eslint-disable-next-line no-console\n            console.warn('Menu must contain at least one child');\n        }\n        if (children.length > 2) {\n            // eslint-disable-next-line no-console\n            console.warn('Menu must contain at most two children');\n        }\n    }\n    let menuTrigger = undefined;\n    let menuPopover = undefined;\n    if (children.length === 2) {\n        menuTrigger = children[0];\n        menuPopover = children[1];\n    } else if (children.length === 1) {\n        menuPopover = children[0];\n    }\n    const { targetRef: triggerRef, containerRef: menuPopoverRef } = usePositioning(positioningState);\n    // TODO Better way to narrow types ?\n    const [open, setOpen] = useMenuOpenState({\n        hoverDelay,\n        isSubmenu,\n        setContextTarget,\n        closeOnScroll,\n        menuPopoverRef,\n        triggerRef,\n        open: props.open,\n        defaultOpen: props.defaultOpen,\n        onOpenChange: props.onOpenChange,\n        openOnContext\n    });\n    const [checkedValues, onCheckedValueChange] = useMenuSelectableState({\n        checkedValues: props.checkedValues,\n        defaultCheckedValues,\n        onCheckedValueChange: props.onCheckedValueChange\n    });\n    return {\n        inline,\n        hoverDelay,\n        triggerId,\n        isSubmenu,\n        openOnHover,\n        contextTarget,\n        setContextTarget,\n        hasCheckmarks,\n        hasIcons,\n        closeOnScroll,\n        menuTrigger,\n        menuPopover,\n        mountNode,\n        triggerRef,\n        menuPopoverRef,\n        components: {},\n        openOnContext,\n        open,\n        setOpen,\n        checkedValues,\n        onCheckedValueChange,\n        persistOnItemClick\n    };\n};\n/**\n * Adds appropriate state values and handlers for selectable items\n * i.e checkboxes and radios\n */ const useMenuSelectableState = (props)=>{\n    const [checkedValues, setCheckedValues] = useControllableState({\n        state: props.checkedValues,\n        defaultState: props.defaultCheckedValues,\n        initialState: {}\n    });\n    const onCheckedValueChange = useEventCallback((e, { name, checkedItems })=>{\n        var _props_onCheckedValueChange;\n        (_props_onCheckedValueChange = props.onCheckedValueChange) === null || _props_onCheckedValueChange === void 0 ? void 0 : _props_onCheckedValueChange.call(props, e, {\n            name,\n            checkedItems\n        });\n        setCheckedValues((currentValue)=>({\n                ...currentValue,\n                [name]: checkedItems\n            }));\n    });\n    return [\n        checkedValues,\n        onCheckedValueChange\n    ];\n};\nconst useMenuOpenState = (state)=>{\n    const { targetDocument } = useFluent();\n    const parentSetOpen = useMenuContext_unstable((context)=>context.setOpen);\n    const onOpenChange = useEventCallback((e, data)=>{\n        var _state_onOpenChange;\n        return (_state_onOpenChange = state.onOpenChange) === null || _state_onOpenChange === void 0 ? void 0 : _state_onOpenChange.call(state, e, data);\n    });\n    const setOpenTimeout = React.useRef(0);\n    const enteringTriggerRef = React.useRef(false);\n    const [open, setOpenState] = useControllableState({\n        state: state.open,\n        defaultState: state.defaultOpen,\n        initialState: false\n    });\n    const trySetOpen = useEventCallback((e, data)=>{\n        const event = e instanceof CustomEvent && e.type === MENU_ENTER_EVENT ? e.detail.nativeEvent : e;\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(event, {\n            ...data\n        });\n        if (data.open && e.type === 'contextmenu') {\n            state.setContextTarget(e);\n        }\n        if (!data.open) {\n            state.setContextTarget(undefined);\n        }\n        if (data.bubble) {\n            parentSetOpen(e, {\n                ...data\n            });\n        }\n        setOpenState(data.open);\n    });\n    const setOpen = useEventCallback((e, data)=>{\n        clearTimeout(setOpenTimeout.current);\n        if (!(e instanceof Event) && e.persist) {\n            // < React 17 still uses pooled synthetic events\n            e.persist();\n        }\n        if (e.type === 'mouseleave' || e.type === 'mouseenter' || e.type === 'mousemove' || e.type === MENU_ENTER_EVENT) {\n            var _state_triggerRef_current;\n            if ((_state_triggerRef_current = state.triggerRef.current) === null || _state_triggerRef_current === void 0 ? void 0 : _state_triggerRef_current.contains(e.target)) {\n                enteringTriggerRef.current = e.type === 'mouseenter' || e.type === 'mousemove';\n            }\n            // FIXME leaking Node timeout type\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            setOpenTimeout.current = setTimeout(()=>trySetOpen(e, data), state.hoverDelay);\n        } else {\n            trySetOpen(e, data);\n        }\n    });\n    useOnClickOutside({\n        contains: elementContains,\n        disabled: !open,\n        element: targetDocument,\n        refs: [\n            state.menuPopoverRef,\n            !state.openOnContext && state.triggerRef\n        ].filter(Boolean),\n        callback: (event)=>setOpen(event, {\n                open: false,\n                type: 'clickOutside',\n                event\n            })\n    });\n    // only close on scroll for context, or when closeOnScroll is specified\n    const closeOnScroll = state.openOnContext || state.closeOnScroll;\n    useOnScrollOutside({\n        contains: elementContains,\n        element: targetDocument,\n        callback: (event)=>setOpen(event, {\n                open: false,\n                type: 'scrollOutside',\n                event\n            }),\n        refs: [\n            state.menuPopoverRef,\n            !state.openOnContext && state.triggerRef\n        ].filter(Boolean),\n        disabled: !open || !closeOnScroll\n    });\n    useOnMenuMouseEnter({\n        element: targetDocument,\n        callback: (event)=>{\n            // When moving from a menu directly back to its trigger, this handler can close the menu\n            // Explicitly check a flag to see if this situation happens\n            if (!enteringTriggerRef.current) {\n                setOpen(event, {\n                    open: false,\n                    type: 'menuMouseEnter',\n                    event\n                });\n            }\n        },\n        disabled: !open,\n        refs: [\n            state.menuPopoverRef\n        ]\n    });\n    // Clear timeout on unmount\n    // Setting state after a component unmounts can cause memory leaks\n    React.useEffect(()=>{\n        return ()=>{\n            clearTimeout(setOpenTimeout.current);\n        };\n    }, []);\n    // Manage focus for open state\n    const { findFirstFocusable } = useFocusFinders();\n    const focusFirst = React.useCallback(()=>{\n        const firstFocusable = findFirstFocusable(state.menuPopoverRef.current);\n        firstFocusable === null || firstFocusable === void 0 ? void 0 : firstFocusable.focus();\n    }, [\n        findFirstFocusable,\n        state.menuPopoverRef\n    ]);\n    React.useEffect(()=>{\n        if (open) {\n            focusFirst();\n        }\n    }, [\n        open,\n        focusFirst\n    ]);\n    return [\n        open,\n        setOpen\n    ];\n};\n","export function useMenuContextValues_unstable(state) {\n    const { checkedValues, hasCheckmarks, hasIcons, inline, isSubmenu, menuPopoverRef, mountNode, onCheckedValueChange, open, openOnContext, openOnHover, persistOnItemClick, setOpen, triggerId, triggerRef } = state;\n    // This context is created with \"@fluentui/react-context-selector\", these is no sense to memoize it\n    const menu = {\n        checkedValues,\n        hasCheckmarks,\n        hasIcons,\n        inline,\n        isSubmenu,\n        menuPopoverRef,\n        mountNode,\n        onCheckedValueChange,\n        open,\n        openOnContext,\n        openOnHover,\n        persistOnItemClick,\n        setOpen,\n        triggerId,\n        triggerRef\n    };\n    return {\n        menu\n    };\n}\n","import { useHasParentContext } from '@fluentui/react-context-selector';\nimport { useMenuContext_unstable } from '../contexts/menuContext';\nimport { MenuListContext } from '../contexts/menuListContext';\n/**\n * A component can be a part of a submenu whether its menu context `isSubmenu` flag is true\n * or whether it is a part of a `MenuList`\n *\n * A simple hook to check box contexts easily\n *\n * @returns whether the component is part of a submenu\n */ export function useIsSubmenu() {\n    const menuContextValue = useMenuContext_unstable((context)=>context.isSubmenu);\n    const hasMenuListContext = useHasParentContext(MenuListContext);\n    return menuContextValue || hasMenuListContext;\n}\n","import * as React from 'react';\nimport { useEventCallback, elementContains } from '@fluentui/react-utilities';\n/**\n * Name of the custom event\n */ export const MENU_ENTER_EVENT = 'fuimenuenter';\n/**\n * This hook works similarly to @see useOnClickOutside\n *\n * Problem: Trying to behave the same as system menus:\n * When the mouse leaves a stack of nested menus the stack should not dismiss.\n * However if the mouse leaves a stack of menus and enters a parent menu all its children menu should dismiss.\n *\n * We don't use the native mouseenter event because it would trigger too many times in the document\n * Instead, dispatch custom DOM event from the menu so that it can bubble\n * Each nested menu can use the listener to check if the event is from a child or parent menu\n */ export const useOnMenuMouseEnter = (options)=>{\n    const { refs, callback, element, disabled } = options;\n    // Keep mouse event here because this is essentially a custom 'mouseenter' event\n    const listener = useEventCallback((ev)=>{\n        const popoverRef = refs[0];\n        const someMenuPopover = ev.target;\n        var _popoverRef_current;\n        // someMenu is a child -> will always be contained because of vParents\n        // someMenu is a parent -> will always not be contained because no vParent\n        // someMenu is the current popover -> it will contain itself\n        const isOutsidePopover = !elementContains((_popoverRef_current = popoverRef.current) !== null && _popoverRef_current !== void 0 ? _popoverRef_current : null, someMenuPopover);\n        if (isOutsidePopover && !disabled) {\n            callback(ev);\n        }\n    });\n    React.useEffect(()=>{\n        // eslint-disable-next-line eqeqeq\n        if (element == null) {\n            return;\n        }\n        if (!disabled) {\n            element.addEventListener(MENU_ENTER_EVENT, listener);\n        }\n        return ()=>{\n            element.removeEventListener(MENU_ENTER_EVENT, listener);\n        };\n    }, [\n        listener,\n        element,\n        disabled\n    ]);\n};\n/**\n * Dispatches the custom MouseEvent enter event. Similar to calling `el.click()`\n * @param el - element for the event target\n * @param nativeEvent - the native mouse event this is mapped to\n */ export const dispatchMenuEnterEvent = (el, nativeEvent)=>{\n    el.dispatchEvent(new CustomEvent(MENU_ENTER_EVENT, {\n        bubbles: true,\n        detail: {\n            nativeEvent\n        }\n    }));\n};\n","import { getRestorer, getTabsterAttribute, Types as TabsterTypes } from 'tabster';\nimport { useTabster } from './useTabster';\n/**\n * Focus will be restored to the most recent target element when it is lost from a source\n * @returns Attribute to apply to the target element where focus is restored\n */ export function useRestoreFocusTarget() {\n    const tabster = useTabster();\n    // Initializes the restorer API\n    if (tabster) {\n        getRestorer(tabster);\n    }\n    return getTabsterAttribute({\n        restorer: {\n            type: TabsterTypes.RestorerTypes.Target\n        }\n    });\n}\n/**\n * Focus will be restored to the most recent target element when it is lost from a source\n * @returns Attribute to apply to the element that might lose focus\n */ export function useRestoreFocusSource() {\n    const tabster = useTabster();\n    // Initializes the restorer API\n    if (tabster) {\n        getRestorer(tabster);\n    }\n    return getTabsterAttribute({\n        restorer: {\n            type: TabsterTypes.RestorerTypes.Source\n        }\n    });\n}\n"],"names":[],"sourceRoot":""}