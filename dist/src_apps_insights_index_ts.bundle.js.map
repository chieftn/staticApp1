{"version":3,"file":"src_apps_insights_index_ts.bundle.js","mappings":"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","sources":["webpack:///./src/apps/insights/components/ElementPickers/ElementPicker.utils.ts","webpack:///./src/apps/insights/components/ElementPickers/ElementPickerRootMenu/ElementPickerRootMenu.render.tsx","webpack:///./src/apps/insights/components/ElementPickers/ElementPickerRootMenu/ElementPickerRootMenu.root.tsx","webpack:///./src/apps/insights/components/ElementPickers/ElementPickerRootMenu/ElementPickerRootMenu.state.ts","webpack:///./src/apps/insights/components/ElementPickers/ElementPickerRootMenu/index.ts","webpack:///./src/apps/insights/components/ElementPickers/FunctionElementPicker/FunctionElementPicker.render.tsx","webpack:///./src/apps/insights/components/ElementPickers/FunctionElementPicker/FunctionElementPicker.root.tsx","webpack:///./src/apps/insights/components/ElementPickers/FunctionElementPicker/FunctionElementPicker.state.ts","webpack:///./src/apps/insights/components/ElementPickers/FunctionElementPicker/FunctionElementPicker.styles.ts","webpack:///./src/apps/insights/components/ElementPickers/FunctionElementPicker/index.ts","webpack:///./src/apps/insights/components/ElementPickers/InputElementPicker/InputElementPicker.render.tsx","webpack:///./src/apps/insights/components/ElementPickers/InputElementPicker/InputElementPicker.root.tsx","webpack:///./src/apps/insights/components/ElementPickers/InputElementPicker/InputElementPicker.state.ts","webpack:///./src/apps/insights/components/ElementPickers/InputElementPicker/InputElementPicker.styles.ts","webpack:///./src/apps/insights/components/ElementPickers/InputElementPicker/InputElementPicker.utils.ts","webpack:///./src/apps/insights/components/ElementPickers/InputElementPicker/index.ts","webpack:///./src/apps/insights/components/ElementPickers/OutputElementPicker/OutputElementPicker.mock.ts","webpack:///./src/apps/insights/components/ElementPickers/OutputElementPicker/OutputElementPicker.render.tsx","webpack:///./src/apps/insights/components/ElementPickers/OutputElementPicker/OutputElementPicker.root.tsx","webpack:///./src/apps/insights/components/ElementPickers/OutputElementPicker/OutputElementPicker.state.ts","webpack:///./src/apps/insights/components/ElementPickers/OutputElementPicker/OutputElementPicker.styles.ts","webpack:///./src/apps/insights/components/ElementPickers/OutputElementPicker/index.ts","webpack:///./src/apps/insights/components/ElementPickers/useElementPickerUtils.ts","webpack:///./src/apps/insights/components/FormulaBuilder/FormulaBuilder.render.tsx","webpack:///./src/apps/insights/components/FormulaBuilder/FormulaBuilder.root.tsx","webpack:///./src/apps/insights/components/FormulaBuilder/FormulaBuilder.state.ts","webpack:///./src/apps/insights/components/FormulaBuilder/FormulaBuilder.styles.ts","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/context/FlowEditorContext.reducer.tsx","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/context/FlowEditorContext.tsx","webpack:///./src/apps/insights/components/FormulaBuilder/components/FlowEditor/context/FlowEditorContext.types.ts","webpack:///./src/apps/insights/components/FormulaBuilder/index.ts","webpack:///./src/apps/insights/components/FormulaList/FormulaList.render.tsx","webpack:///./src/apps/insights/components/FormulaList/FormulaList.root.tsx","webpack:///./src/apps/insights/components/FormulaList/FormulaList.state.ts","webpack:///./src/apps/insights/components/FormulaList/FormulaList.styles.ts","webpack:///./src/apps/insights/components/FormulaList/FormulaList.utils.ts","webpack:///./src/apps/insights/components/FormulaList/index.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/InsightsDetailsPanel.render.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/InsightsDetailsPanel.root.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/InsightsDetailsPanel.state.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/InsightsDetailsPanel.styles.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ElementBaseEditor/ElementBaseEditor.render.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ElementBaseEditor/ElementBaseEditor.root.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ElementBaseEditor/ElementBaseEditor.state.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ElementBaseEditor/ElementBaseEditor.styles.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ElementBaseEditor/index.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/ExpressionEditor.render.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/ExpressionEditor.root.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/ExpressionEditor.state.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/ExpressionEditor.styles.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/OperationsTab.render.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/OperationsTab.root.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/OperationsTab.state.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/OperationsTab.styles.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/components/OperationsButtonGroup/OperationsButtonGroup.render.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/components/OperationsButtonGroup/OperationsButtonGroup.root.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/components/OperationsButtonGroup/OperationsButtonGroup.state.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/components/OperationsButtonGroup/OperationsButtonGroup.styles.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/components/OperationsButtonGroup/index.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/components/OperationsTab/index.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/ExpressionEditor/index.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/FunctionEditor/FunctionEditor.render.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/FunctionEditor/FunctionEditor.root.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/FunctionEditor/FunctionEditor.state.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/FunctionEditor/FunctionEditor.styles.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/FunctionEditor/index.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/InputEditor/InputEditor.render.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/InputEditor/InputEditor.root.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/InputEditor/InputEditor.state.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/InputEditor/InputEditor.styles.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/InputEditor/index.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/OutputEditor/OutputEditor.render.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/OutputEditor/OutputEditor.root.tsx","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/OutputEditor/OutputEditor.state.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/OutputEditor/OutputEditor.styles.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/components/OutputEditor/index.ts","webpack:///./src/apps/insights/components/InsightsDetailsPanel/index.ts","webpack:///./src/apps/insights/components/InsightsHierarchy/InsightsHierarchy.render.tsx","webpack:///./src/apps/insights/components/InsightsHierarchy/InsightsHierarchy.root.tsx","webpack:///./src/apps/insights/components/InsightsHierarchy/InsightsHierarchy.state.ts","webpack:///./src/apps/insights/components/InsightsHierarchy/InsightsHierarchy.styles.ts","webpack:///./src/apps/insights/components/InsightsHierarchy/InsightsHierarchy.utils.ts","webpack:///./src/apps/insights/components/InsightsHierarchy/index.ts","webpack:///./src/apps/insights/components/InsightsRibbon/InsightsRibbon.render.tsx","webpack:///./src/apps/insights/components/InsightsRibbon/InsightsRibbon.root.tsx","webpack:///./src/apps/insights/components/InsightsRibbon/InsightsRibbon.state.ts","webpack:///./src/apps/insights/components/InsightsRibbon/InsightsRibbon.styles.ts","webpack:///./src/apps/insights/components/InsightsRibbon/InsightsRibbon.types.ts","webpack:///./src/apps/insights/components/InsightsRibbon/InsightsRibbon.utils.ts","webpack:///./src/apps/insights/components/InsightsRibbon/components/SaveFormulaPanel/SaveFormulaPanel.render.tsx","webpack:///./src/apps/insights/components/InsightsRibbon/components/SaveFormulaPanel/SaveFormulaPanel.root.tsx","webpack:///./src/apps/insights/components/InsightsRibbon/components/SaveFormulaPanel/SaveFormulaPanel.state.ts","webpack:///./src/apps/insights/components/InsightsRibbon/components/SaveFormulaPanel/SaveFormulaPanel.styles.ts","webpack:///./src/apps/insights/components/InsightsRibbon/components/SaveFormulaPanel/index.ts","webpack:///./src/apps/insights/components/InsightsRibbon/components/ScheduleDrawer/ScheduleDrawer.render.tsx","webpack:///./src/apps/insights/components/InsightsRibbon/components/ScheduleDrawer/ScheduleDrawer.root.tsx","webpack:///./src/apps/insights/components/InsightsRibbon/components/ScheduleDrawer/ScheduleDrawer.state.ts","webpack:///./src/apps/insights/components/InsightsRibbon/components/ScheduleDrawer/ScheduleDrawer.styles.ts","webpack:///./src/apps/insights/components/InsightsRibbon/components/ScheduleDrawer/ScheduleDrawer.types.ts","webpack:///./src/apps/insights/components/InsightsRibbon/components/ScheduleDrawer/index.ts","webpack:///./src/apps/insights/components/InsightsRibbon/index.ts","webpack:///./src/apps/insights/constants/CalculationElements.constants.ts","webpack:///./src/apps/insights/index.ts","webpack:///./src/apps/insights/models/CalculationCertifiedEvents.ts","webpack:///./src/apps/insights/pages/InsightsPage/InsightsPage.render.tsx","webpack:///./src/apps/insights/pages/InsightsPage/InsightsPage.state.ts","webpack:///./src/apps/insights/pages/InsightsPage/InsightsPage.styles.ts","webpack:///./src/apps/insights/pages/InsightsPage/InsightsPage.tsx","webpack:///./src/apps/insights/pages/InsightsPage/components/InsightsPageContents/InsightsPageContents.render.tsx","webpack:///./src/apps/insights/pages/InsightsPage/components/InsightsPageContents/InsightsPageContents.root.tsx","webpack:///./src/apps/insights/pages/InsightsPage/components/InsightsPageContents/InsightsPageContents.state.ts","webpack:///./src/apps/insights/pages/InsightsPage/components/InsightsPageContents/InsightsPageContents.styles.ts","webpack:///./src/apps/insights/pages/InsightsPage/components/InsightsPageContents/index.ts","webpack:///./src/apps/insights/pages/InsightsPage/index.ts","webpack:///./src/apps/insights/pages/index.ts"],"sourcesContent":["import { ElementTypes, FormulaElement } from '@do/core';\r\n\r\nexport function getMenuItemKey(twinId: string, propertyName: string): string {\r\n  function encodeInput(inputString: string): string {\r\n    return `${inputString.replace(/{/g, '{{').replace(/}/g, '}}')}`;\r\n  }\r\n  return `{${encodeInput(twinId)}}-{${encodeInput(propertyName)}}`;\r\n}\r\n\r\nexport const getUniqueElementName = (\r\n  propertyName: string,\r\n  elementType: ElementTypes,\r\n  elements: FormulaElement[],\r\n) => {\r\n  const hasConflicts = elements.some(\r\n    (x) => x.type === elementType && x.displayName === propertyName,\r\n  );\r\n  // no conflicts\r\n  if (!hasConflicts) {\r\n    return propertyName;\r\n  }\r\n\r\n  // if conflict, increment until it's not a conflict\r\n  const matchingProperties = elements.filter((x) => x.type === elementType);\r\n  const propertyNames = new Set(matchingProperties.map((x) => x.displayName));\r\n  let counter = 1;\r\n  let isUnique = false;\r\n  let uniquePropertyName = propertyName;\r\n  while (!isUnique) {\r\n    const newPropertyName = `${propertyName}-${counter}`;\r\n    if (!propertyNames.has(newPropertyName)) {\r\n      isUnique = true;\r\n      uniquePropertyName = newPropertyName;\r\n    }\r\n    counter++;\r\n  }\r\n\r\n  return uniquePropertyName;\r\n};\r\n","import React from 'react';\r\nimport { ElementPickerRootMenuRenderProps } from './ElementPickerRootMenu.types';\r\nimport { strings, t } from '@do/localization';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuList,\r\n  MenuPopover,\r\n  MenuTrigger,\r\n} from '@fluentui/react-components';\r\nimport { InsightsRibbonTestIds } from '../../InsightsRibbon/InsightsRibbon.render';\r\nimport { InputElementPicker } from '../InputElementPicker';\r\nimport { FunctionElementPicker } from '../FunctionElementPicker';\r\nimport { OutputElementPicker } from '../OutputElementPicker';\r\n\r\nexport const useElementPickerRootMenuRender: React.FC<\r\n  ElementPickerRootMenuRenderProps\r\n> = ({ state }) => {\r\n  const { onAddExpression, isOutputNodeDefined, dataType } = state;\r\n\r\n  // data\r\n  const isFunctionNode = dataType === 'Function';\r\n  return (\r\n    <MenuList>\r\n      <SubMenu\r\n        title={t(strings.insights.ribbon.button_titles.add_element_input)}\r\n        testId={InsightsRibbonTestIds.AddElementInputButton}\r\n      >\r\n        <InputElementPicker />\r\n      </SubMenu>\r\n      <MenuItem\r\n        onClick={onAddExpression}\r\n        data-testid={InsightsRibbonTestIds.AddElementExpressionButton}\r\n      >\r\n        {t(strings.insights.ribbon.button_titles.add_element_expression)}\r\n      </MenuItem>\r\n      <SubMenu\r\n        title={t(strings.insights.ribbon.button_titles.add_element_function)}\r\n        testId={InsightsRibbonTestIds.AddElementFunctionButton}\r\n        disabled={isFunctionNode}\r\n      >\r\n        <FunctionElementPicker />\r\n      </SubMenu>\r\n      <SubMenu\r\n        title={t(strings.insights.ribbon.button_titles.add_element_output)}\r\n        testId={InsightsRibbonTestIds.AddElementOutputButton}\r\n        disabled={isOutputNodeDefined}\r\n      >\r\n        <OutputElementPicker />\r\n      </SubMenu>\r\n    </MenuList>\r\n  );\r\n};\r\n\r\ninterface SubMenuProps extends React.PropsWithChildren {\r\n  title: string;\r\n  testId: string;\r\n  disabled?: boolean;\r\n}\r\nconst SubMenu: React.FC<SubMenuProps> = ({\r\n  title,\r\n  testId,\r\n  disabled,\r\n  children,\r\n}) => {\r\n  return (\r\n    <Menu>\r\n      <MenuTrigger>\r\n        <MenuItem data-testid={testId} disabled={disabled}>\r\n          {title}\r\n        </MenuItem>\r\n      </MenuTrigger>\r\n      <MenuPopover>{children}</MenuPopover>\r\n    </Menu>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ElementPickerRootMenuProps } from './ElementPickerRootMenu.types';\r\nimport { useElementPickerRootMenuRender } from './ElementPickerRootMenu.render';\r\nimport { useElementPickerRootMenuState } from './ElementPickerRootMenu.state';\r\n\r\nconst MODULE_NAME = 'ElementPickerRootMenu';\r\n\r\nexport const ElementPickerRootMenu: React.FC<ElementPickerRootMenuProps> = (\r\n  props,\r\n) => {\r\n  // get state\r\n  const state = useElementPickerRootMenuState(props);\r\n\r\n  // render the item\r\n  return useElementPickerRootMenuRender({ state });\r\n};\r\n\r\nElementPickerRootMenu.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport {\r\n  ElementPickerRootMenuProps,\r\n  ElementPickerRootMenuState,\r\n} from './ElementPickerRootMenu.types';\r\nimport { useInsightsPageContext } from '../../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContextActionType } from '../../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { useElementPickerUtils } from '../useElementPickerUtils';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'ElementPickerRootMenu.state';\r\n\r\nexport const useElementPickerRootMenuState = (\r\n  props: ElementPickerRootMenuProps,\r\n): ElementPickerRootMenuState => {\r\n  // contexts\r\n  const { pageState, pageDispatch } = useInsightsPageContext();\r\n\r\n  // state\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n  const { getNewElementFromSelections } = useElementPickerUtils();\r\n\r\n  // callbacks\r\n  const onAddExpression = useCallback(() => {\r\n    getLogger().debug(MODULE_NAME, 'onAddExpression');\r\n\r\n    const element = getNewElementFromSelections({ elementType: 'Expression' });\r\n    if (element) {\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.FORMULA_ADD_ELEMENT,\r\n        payload: {\r\n          element: element,\r\n        },\r\n      });\r\n    } else {\r\n      getLogger().error(MODULE_NAME, 'Failed to create Expression');\r\n    }\r\n  }, [getNewElementFromSelections, pageDispatch]);\r\n\r\n  const isOutputNodeDefined = useCallback(() => {\r\n    return pageState.currentFormula.elements.some(\r\n      (element) => element.type === 'OutputProperty',\r\n    );\r\n  }, [pageState.currentFormula]);\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: ElementPickerRootMenuState = useMemo(() => {\r\n    return {\r\n      isOutputNodeDefined: isOutputNodeDefined(),\r\n      onAddExpression: onAddExpression,\r\n      dataType: props.dataType,\r\n    };\r\n  }, [onAddExpression, isOutputNodeDefined, props.dataType]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","export { ElementPickerRootMenu } from './ElementPickerRootMenu.root';\r\n","import React from 'react';\r\nimport {\r\n  FunctionElementPickerRenderProps,\r\n  ListItem,\r\n} from './FunctionElementPicker.types';\r\nimport { t, strings } from '@do/localization';\r\nimport {\r\n  useArrowNavigationGroup,\r\n  MenuList,\r\n  MenuGroup,\r\n  MenuGroupHeader,\r\n  MenuItem,\r\n} from '@fluentui/react-components';\r\n\r\nexport const useFunctionElementPickerRender: React.FC<\r\n  FunctionElementPickerRenderProps\r\n> = ({ state, styles }) => {\r\n  const navigationAttributes = useArrowNavigationGroup({ axis: 'vertical' });\r\n  return (\r\n    <div className={styles.root} {...navigationAttributes}>\r\n      <h4 className={styles.header}>\r\n        {t(strings.insights.element_pickers.function_picker.title)}\r\n      </h4>\r\n      <MenuList>\r\n        {state.listItems.map((group: ListItem) => {\r\n          return (\r\n            <MenuGroup key={group.category}>\r\n              <MenuGroupHeader className={styles.groupHeader}>\r\n                {group.category}\r\n              </MenuGroupHeader>\r\n              {group.items.map((property) => {\r\n                return (\r\n                  <MenuItem\r\n                    key={`${group.category}-${property.value}`}\r\n                    onClick={() => state.onItemSelect(property.value)}\r\n                  >\r\n                    {property.displayName}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </MenuGroup>\r\n          );\r\n        })}\r\n      </MenuList>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useFunctionElementPickerRender } from './FunctionElementPicker.render';\r\nimport { useClassNames } from './FunctionElementPicker.styles';\r\nimport { useFunctionElementPickerState } from './FunctionElementPicker.state';\r\n\r\nconst MODULE_NAME = 'FunctionElementPicker';\r\n\r\nexport const FunctionElementPicker: React.FC = () => {\r\n  // get state\r\n  const state = useFunctionElementPickerState();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useFunctionElementPickerRender({ state, styles });\r\n};\r\n\r\nFunctionElementPicker.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { getLogger, useDebugLogging, FunctionType } from '@do/core';\r\nimport { FunctionElementPickerState } from './FunctionElementPicker.types';\r\nimport { useInsightsPageContext } from '../../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContextActionType } from '../../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { useElementPickerUtils } from '../useElementPickerUtils';\r\nimport { GetCalculationFormulaOptions } from '../../../constants/CalculationElements.constants';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'FunctionElementPicker.state';\r\n\r\nexport const useFunctionElementPickerState = (): FunctionElementPickerState => {\r\n  // contexts\r\n  const { pageDispatch } = useInsightsPageContext();\r\n\r\n  // state\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n  const { getNewElementFromSelections } = useElementPickerUtils();\r\n\r\n  // callbacks\r\n  const onItemSelect = useCallback(\r\n    (functionType: FunctionType) => {\r\n      const element = getNewElementFromSelections({\r\n        elementType: 'Function',\r\n        dataType: functionType,\r\n      });\r\n      if (element) {\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.FORMULA_ADD_ELEMENT,\r\n          payload: {\r\n            element: element,\r\n          },\r\n        });\r\n      } else {\r\n        getLogger().error(\r\n          MODULE_NAME,\r\n          'Failed to create element from selections. {functionType}',\r\n          {\r\n            functionType,\r\n          },\r\n        );\r\n      }\r\n    },\r\n    [getNewElementFromSelections, pageDispatch],\r\n  );\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: FunctionElementPickerState = useMemo(() => {\r\n    return {\r\n      onItemSelect,\r\n      listItems: GetCalculationFormulaOptions(),\r\n    };\r\n  }, [onItemSelect]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  FunctionElementPickerStyles,\r\n  FunctionElementPickerClasses,\r\n} from './FunctionElementPicker.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => FunctionElementPickerStyles =\r\n  makeStyles<FunctionElementPickerClasses>({\r\n    root: {\r\n      display: 'flex',\r\n      ...shorthands.gap('8px'),\r\n      flexDirection: 'column',\r\n    },\r\n    header: {\r\n      fontWeight: 'bold',\r\n      color: tokens.colorNeutralForeground3,\r\n      ...shorthands.margin(0),\r\n    },\r\n    groupHeader: {\r\n      paddingLeft: '4px',\r\n    },\r\n  });\r\n","export { FunctionElementPicker } from './FunctionElementPicker.root';\r\n","import React from 'react';\r\nimport {\r\n  TwinItem,\r\n  InputElementPickerRenderProps,\r\n} from './InputElementPicker.types';\r\nimport {\r\n  Input,\r\n  MenuGroup,\r\n  MenuGroupHeader,\r\n  MenuItem,\r\n  MenuList,\r\n  useArrowNavigationGroup,\r\n} from '@fluentui/react-components';\r\nimport { t, strings } from '@do/localization';\r\nimport { Search16Regular } from '@fluentui/react-icons';\r\nimport { Loading } from '@do/components';\r\nimport { getMenuItemKey } from '../ElementPicker.utils';\r\n\r\nexport const enum InputElementPickerTestIds {\r\n  SearchBox = 'insights-element-picker-search-box',\r\n}\r\n\r\nexport const useInputElementPickerRender: React.FC<\r\n  InputElementPickerRenderProps\r\n> = ({ state, styles }) => {\r\n  const navigationAttributes = useArrowNavigationGroup({ axis: 'vertical' });\r\n  return (\r\n    <div className={styles.root} {...navigationAttributes}>\r\n      <h4 className={styles.header}>\r\n        {t(strings.insights.element_pickers.input_picker.title)}\r\n      </h4>\r\n      {state.listItems.state !== 'uncalled' ? (\r\n        <Input\r\n          placeholder={t(\r\n            strings.insights.element_pickers.common.search_placeholder,\r\n          )}\r\n          contentBefore={<Search16Regular />}\r\n          value={state.searchText}\r\n          onChange={(_ev, value) => state.setSearchText(value.value)}\r\n          data-testid={InputElementPickerTestIds.SearchBox}\r\n        />\r\n      ) : null}\r\n      {state.listItems.state === 'success' ? (\r\n        state.listItems.data.length === 0 ? (\r\n          // no data\r\n          state.searchText.trim().length > 0 ? (\r\n            t(strings.insights.element_pickers.common.no_data_with_search)\r\n          ) : (\r\n            t(strings.insights.element_pickers.common.no_data)\r\n          )\r\n        ) : (\r\n          // has data\r\n          <MenuList className={styles.list}>\r\n            {state.listItems.data.map((twinItem: TwinItem) => {\r\n              return (\r\n                <MenuGroup key={twinItem.twinId}>\r\n                  <MenuGroupHeader\r\n                    className={styles.groupHeader}\r\n                    title={twinItem.description}\r\n                  >\r\n                    {twinItem.displayName}\r\n                  </MenuGroupHeader>\r\n                  {twinItem.properties.map((property) => {\r\n                    return (\r\n                      <MenuItem\r\n                        key={getMenuItemKey(twinItem.twinId, property.name)}\r\n                        onClick={() =>\r\n                          state.onItemSelect(twinItem.twinId, property)\r\n                        }\r\n                        className={styles.listItem}\r\n                        title={property.name} // show full name on hover\r\n                      >\r\n                        {property.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </MenuGroup>\r\n              );\r\n            })}\r\n          </MenuList>\r\n        )\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { InputElementPickerProps } from './InputElementPicker.types';\r\nimport { useInputElementPickerRender } from './InputElementPicker.render';\r\nimport { useClassNames } from './InputElementPicker.styles';\r\nimport { useInputElementPickerState } from './InputElementPicker.state';\r\n\r\nconst MODULE_NAME = 'InputElementPicker';\r\n\r\nexport const InputElementPicker: React.FC<InputElementPickerProps> = (\r\n  props,\r\n) => {\r\n  // get state\r\n  const state = useInputElementPickerState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useInputElementPickerRender({ state, styles });\r\n};\r\n\r\nInputElementPicker.displayName = MODULE_NAME;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useDebounce } from 'use-debounce';\r\nimport {\r\n  DataRequest,\r\n  getLogger,\r\n  useDebugLogging,\r\n  useTwinClient,\r\n} from '@do/core';\r\nimport {\r\n  InputElementPickerProps,\r\n  InputElementPickerState,\r\n  TwinItem,\r\n  TwinProperty,\r\n} from './InputElementPicker.types';\r\nimport { useInsightsPageContext } from '../../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContextActionType } from '../../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { useElementPickerUtils } from '../useElementPickerUtils';\r\nimport {\r\n  getTwinItems,\r\n  queryTwinWithAttributesAndTimeSeriesDataPointsKeywordQuery,\r\n} from './InputElementPicker.utils';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'InputElementPicker.state';\r\n\r\nexport const useInputElementPickerState = (\r\n  _props: InputElementPickerProps,\r\n): InputElementPickerState => {\r\n  // contexts\r\n  const { pageDispatch } = useInsightsPageContext();\r\n\r\n  // state\r\n  const [searchText, setSearchText] = useState('');\r\n  const [debouncedSearchText] = useDebounce(searchText, 500);\r\n  const [listItems, setListItems] = useState<DataRequest<TwinItem[]>>({\r\n    state: 'pending',\r\n  });\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n  const twinClient = useTwinClient(true);\r\n  const { getNewElementFromSelections } = useElementPickerUtils();\r\n\r\n  // callbacks\r\n  const onItemSelect = useCallback(\r\n    (twinId: string, selectedProperty: TwinProperty) => {\r\n      if (listItems.state === 'success') {\r\n        const twin = listItems.data.find((twin) => twin.twinId === twinId);\r\n        const property = twin?.properties.find(\r\n          (property) => property.name === selectedProperty.name,\r\n        );\r\n\r\n        const element = getNewElementFromSelections({\r\n          twinId: twinId,\r\n          property,\r\n          elementType: 'InputProperty',\r\n        });\r\n        if (element) {\r\n          pageDispatch({\r\n            type: InsightsPageContextActionType.FORMULA_ADD_ELEMENT,\r\n            payload: {\r\n              element: element,\r\n            },\r\n          });\r\n        } else {\r\n          getLogger().error(\r\n            MODULE_NAME,\r\n            'Failed to create element from selections. {twinId}, {selectedProperty}',\r\n            {\r\n              twinId,\r\n              selectedProperty,\r\n            },\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [getNewElementFromSelections, pageDispatch, listItems],\r\n  );\r\n  const fetchTwins = useCallback(\r\n    async (searchText: string) => {\r\n      setListItems({\r\n        state: 'pending',\r\n      });\r\n      if (twinClient) {\r\n        const queryObj: any =\r\n          queryTwinWithAttributesAndTimeSeriesDataPointsKeywordQuery(\r\n            searchText,\r\n          );\r\n        const twins =\r\n          await twinClient.queryTwinsWithAttributesAndTimeSeriesDataPoints(\r\n            queryObj,\r\n          );\r\n\r\n        if (twins.state === 'success') {\r\n          const data = twins.data ? await getTwinItems(twins.data) : [];\r\n          setListItems({\r\n            data: data,\r\n            state: 'success',\r\n          });\r\n        }\r\n      }\r\n    },\r\n    [twinClient],\r\n  );\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    fetchTwins(debouncedSearchText);\r\n  }, [fetchTwins, debouncedSearchText]);\r\n\r\n  // result\r\n  const state: InputElementPickerState = useMemo(() => {\r\n    return {\r\n      onItemSelect,\r\n      searchText,\r\n      setSearchText,\r\n      listItems: listItems,\r\n    };\r\n  }, [onItemSelect, listItems, searchText]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  InputElementPickerStyles,\r\n  InputElementPickerClasses,\r\n} from './InputElementPicker.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => InputElementPickerStyles =\r\n  makeStyles<InputElementPickerClasses>({\r\n    root: {\r\n      display: 'flex',\r\n      ...shorthands.gap('8px'),\r\n      flexDirection: 'column',\r\n    },\r\n    header: {\r\n      fontWeight: 'bold',\r\n      color: tokens.colorNeutralForeground3,\r\n      ...shorthands.margin(0),\r\n    },\r\n    groupHeader: {\r\n      paddingLeft: '4px',\r\n    },\r\n    list: {\r\n      overflowY: 'auto', // allow vertical scrolling\r\n      height: '420px',\r\n    },\r\n    listItem: {\r\n      display: 'block', // ensure the list item is a block element\r\n      maxWidth: '100%', // limit the width of the list item\r\n      textOverflow: 'ellipsis', // add ellipsis for horizontal overflow\r\n      overflowX: 'hidden', // hide horizontal overflow\r\n      whiteSpace: 'nowrap', // keep text on a single line\r\n    },\r\n  });\r\n","import { PropertyType, TimeSeriesStateType, Twin } from '@do/core';\r\nimport { TwinItem, TwinProperty } from './InputElementPicker.types';\r\n\r\nexport const queryTwinWithAttributesAndTimeSeriesDataPointsKeywordQuery = (\r\n  searchString?: string,\r\n): any => {\r\n  const keyword = `%${searchString}%`;\r\n  const queryObj = {\r\n    query: {\r\n      root: {\r\n        type: 'logical',\r\n        left: {\r\n          type: 'comparison',\r\n          left: {\r\n            type: 'variable',\r\n            source: 'Twin',\r\n            value: 'TwinId',\r\n          },\r\n          operator: 'contains',\r\n          right: {\r\n            type: 'constant',\r\n            value: keyword,\r\n          },\r\n        },\r\n        operator: 'or',\r\n        right: {\r\n          type: 'comparison',\r\n          left: {\r\n            type: 'variable',\r\n            source: 'Twin',\r\n            value: 'DisplayName',\r\n          },\r\n          operator: 'contains',\r\n          right: {\r\n            type: 'constant',\r\n            value: keyword,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return queryObj;\r\n};\r\n\r\nexport const getTwinItems = async (twins: Twin[]): Promise<TwinItem[]> => {\r\n  return twins.map(({ attributes, timeseriesdatapoints, ...twin }) => {\r\n    // extract the attributes and timeseriesdatapoints from the twin object\r\n    const properties: TwinProperty[] = [];\r\n\r\n    if (attributes) {\r\n      for (const attr of attributes) {\r\n        properties.push({\r\n          name: attr.name,\r\n          propertyType: 'Attribute' as PropertyType,\r\n        });\r\n      }\r\n    }\r\n    if (timeseriesdatapoints) {\r\n      for (const ts of timeseriesdatapoints) {\r\n        if (ts.state === TimeSeriesStateType.Active) {\r\n          properties.push({\r\n            name: ts.timeSeriesName || ts.timeSeriesDataPointId,\r\n            propertyType: 'TimeSeries' as PropertyType,\r\n            referenceId: ts.timeSeriesDataPointId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return { ...twin, properties }; // return the twin object with the properties array\r\n  });\r\n};\r\n","export { InputElementPicker } from './InputElementPicker.root';\r\nexport { InputElementPickerProps } from './InputElementPicker.types';\r\n","import { Twin } from '@do/core';\r\nimport { TwinItem } from '../InputElementPicker/InputElementPicker.types';\r\n\r\nexport const addMockProperties = (twin: Twin): TwinItem => {\r\n  return {\r\n    ...twin,\r\n    properties: [\r\n      {\r\n        name: 'MTTF',\r\n        propertyType: 'TimeSeries',\r\n      },\r\n      {\r\n        name: 'Quality',\r\n        propertyType: 'TimeSeries',\r\n      },\r\n    ],\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { OutputElementPickerRenderProps } from './OutputElementPicker.types';\r\nimport { Button, MenuItem, MenuList } from '@fluentui/react-components';\r\nimport { strings, t } from '@do/localization';\r\nimport { Loading } from '@do/components';\r\n\r\nexport const enum OutputElementPickerTestIds {\r\n  CreateButton = 'output-picker-create-button',\r\n  PropertyItem = 'output-picker-property-item',\r\n}\r\n\r\nexport const useOutputElementPickerRender: React.FC<\r\n  OutputElementPickerRenderProps\r\n> = ({ state, styles }) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <Button\r\n        onClick={state.onCreate}\r\n        data-testid={OutputElementPickerTestIds.CreateButton}\r\n      >\r\n        {t(strings.insights.element_pickers.output_picker.create_button_text)}\r\n      </Button>\r\n      {state.listItems.state === 'success' ? (\r\n        <MenuList>\r\n          {state.listItems.data.map((x) => (\r\n            <MenuItem\r\n              key={`${x.name}`}\r\n              onClick={() => state.onItemSelect(x)}\r\n              data-testid={OutputElementPickerTestIds.PropertyItem}\r\n            >\r\n              {x.name}\r\n            </MenuItem>\r\n          ))}\r\n        </MenuList>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useOutputElementPickerRender } from './OutputElementPicker.render';\r\nimport { useClassNames } from './OutputElementPicker.styles';\r\nimport { useOutputElementPickerState } from './OutputElementPicker.state';\r\n\r\nconst MODULE_NAME = 'OutputElementPicker';\r\n\r\nexport const OutputElementPicker: React.FC = () => {\r\n  // get state\r\n  const state = useOutputElementPickerState();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useOutputElementPickerRender({ state, styles });\r\n};\r\n\r\nOutputElementPicker.displayName = MODULE_NAME;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport {\r\n  DataRequest,\r\n  getLogger,\r\n  useDebugLogging,\r\n  useTwinClient,\r\n} from '@do/core';\r\nimport { OutputElementPickerState } from './OutputElementPicker.types';\r\nimport { useElementPickerUtils } from '../useElementPickerUtils';\r\nimport { TwinProperty } from '../InputElementPicker/InputElementPicker.types';\r\nimport { InsightsPageContextActionType } from '../../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { useInsightsPageContext } from '../../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { addMockProperties } from './OutputElementPicker.mock';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'OutputElementPicker.state';\r\n\r\nexport const useOutputElementPickerState = (): OutputElementPickerState => {\r\n  // contexts\r\n  const {\r\n    pageDispatch,\r\n    pageState: { selectedTwinId },\r\n  } = useInsightsPageContext();\r\n\r\n  // state\r\n  const [propertyData, setPropertyItems] = useState<\r\n    DataRequest<TwinProperty[]>\r\n  >({\r\n    state: 'uncalled',\r\n  });\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n  const { getNewElementFromSelections } = useElementPickerUtils();\r\n  // Note: Remove boolean parameter when we are API ready\r\n  const twinClient = useTwinClient(false);\r\n\r\n  // callbacks\r\n  const createElement = useCallback(\r\n    (property: TwinProperty) => {\r\n      const twinId = selectedTwinId;\r\n      const element = getNewElementFromSelections({\r\n        elementType: 'OutputProperty',\r\n        property: property,\r\n        twinId: `${twinId}`,\r\n      });\r\n      if (element && twinId) {\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.FORMULA_ADD_ELEMENT,\r\n          payload: {\r\n            element: element,\r\n          },\r\n        });\r\n      } else {\r\n        getLogger().error(\r\n          MODULE_NAME,\r\n          'Failed to create element from selections.',\r\n          {\r\n            property,\r\n            twinId,\r\n          },\r\n        );\r\n      }\r\n    },\r\n    [getNewElementFromSelections, pageDispatch, selectedTwinId],\r\n  );\r\n  const onItemSelect = useCallback(\r\n    (property: TwinProperty) => {\r\n      getLogger().debug(MODULE_NAME, 'onItemSelect. {item}', {\r\n        property,\r\n      });\r\n      createElement(property);\r\n    },\r\n    [createElement],\r\n  );\r\n  const onCreate = useCallback(() => {\r\n    getLogger().debug(MODULE_NAME, 'onCreate. {}');\r\n    createElement({\r\n      name: '',\r\n      propertyType: 'TimeSeries', // set this here, but we will have to update this when the user selects a source, the output node will have whatever type it's source has\r\n    });\r\n  }, [createElement]);\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n    const fetchTwinDetails = async () => {\r\n      if (selectedTwinId && twinClient) {\r\n        const twinDetails = await twinClient.getTwinById(selectedTwinId);\r\n        debugLogging &&\r\n          getLogger().debug(MODULE_NAME, 'fetched twin details. ', {\r\n            twinDetails,\r\n          });\r\n        if (!isCancelled) {\r\n          if (twinDetails.state === 'success') {\r\n            // success\r\n            if (twinDetails.data) {\r\n              // TODO: remove this once the twin returns back the property data\r\n              const data = addMockProperties(twinDetails.data);\r\n              setPropertyItems({\r\n                state: 'success',\r\n                data: data.properties || [],\r\n              });\r\n            } else {\r\n              setPropertyItems({ state: 'success', data: [] });\r\n            }\r\n          } else {\r\n            getLogger().error(\r\n              MODULE_NAME,\r\n              'Failed to get twin details.',\r\n              twinDetails,\r\n            );\r\n            // error case\r\n            setPropertyItems(twinDetails);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    fetchTwinDetails();\r\n\r\n    return () => {\r\n      isCancelled = true;\r\n    };\r\n  }, [debugLogging, selectedTwinId, twinClient]);\r\n\r\n  // result\r\n  const state: OutputElementPickerState = useMemo(() => {\r\n    return {\r\n      listItems: propertyData,\r\n      onItemSelect,\r\n      onCreate,\r\n    };\r\n  }, [propertyData, onCreate, onItemSelect]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  OutputElementPickerStyles,\r\n  OutputElementPickerClasses,\r\n} from './OutputElementPicker.types';\r\nimport { makeStyles, shorthands } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => OutputElementPickerStyles =\r\n  makeStyles<OutputElementPickerClasses>({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      ...shorthands.gap('8px'),\r\n    },\r\n  });\r\n","export { OutputElementPicker } from './OutputElementPicker.root';\r\n","import { ElementTypes, FormulaElement, FunctionType } from '@do/core';\r\nimport { useCallback } from 'react';\r\nimport { v4 } from 'uuid';\r\nimport { TwinProperty } from './InputElementPicker/InputElementPicker.types';\r\nimport { useInsightsPageContext } from '../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { getUniqueElementName } from './ElementPicker.utils';\r\nimport { strings, t } from '@do/localization';\r\n\r\ntype GetElementFromSelectionsArgs =\r\n  | {\r\n      twinId: string | undefined;\r\n      property: TwinProperty | undefined;\r\n      elementType: 'InputProperty' | 'OutputProperty';\r\n    }\r\n  | {\r\n      elementType: 'Function';\r\n      dataType: FunctionType;\r\n    }\r\n  | {\r\n      elementType: 'Expression';\r\n    };\r\nexport const useElementPickerUtils = () => {\r\n  // contexts\r\n  const {\r\n    pageState: { currentFormula },\r\n  } = useInsightsPageContext();\r\n\r\n  // callbacks\r\n  const getName = useCallback(\r\n    (name: string, elementType: ElementTypes) => {\r\n      const elements = currentFormula.elements;\r\n      return getUniqueElementName(name, elementType, elements);\r\n    },\r\n    [currentFormula],\r\n  );\r\n  const getNewElementFromSelections = useCallback(\r\n    (args: GetElementFromSelectionsArgs): FormulaElement | undefined => {\r\n      const { elementType } = args;\r\n\r\n      switch (elementType) {\r\n        case 'InputProperty':\r\n          if (!args.twinId || !args.property) return undefined;\r\n          return {\r\n            id: v4(),\r\n            type: 'InputProperty',\r\n            displayName: getName(args.property.name, elementType),\r\n            propertySelector: {\r\n              propertyType: args.property.propertyType,\r\n              referenceId: args.property.referenceId ?? args.property.name,\r\n            },\r\n            twinSelector: {\r\n              referenceId: args.twinId,\r\n              twinSelectorType: 'Twin',\r\n            },\r\n          };\r\n        case 'Expression':\r\n          return {\r\n            id: v4(),\r\n            type: 'Expression',\r\n            displayName: getName(\r\n              t(strings.insights.element_pickers.default_names.expression),\r\n              elementType,\r\n            ),\r\n            expression: '',\r\n          };\r\n        case 'Function':\r\n          return {\r\n            id: v4(),\r\n            type: 'Function',\r\n            displayName: getName(\r\n              t(strings.insights.element_pickers.default_names.function),\r\n              elementType,\r\n            ),\r\n            dataType: args.dataType,\r\n          };\r\n        case 'OutputProperty':\r\n          if (!args.twinId || !args.property) return undefined;\r\n          return {\r\n            id: v4(),\r\n            type: 'OutputProperty',\r\n            displayName: getName(\r\n              args.property.name ||\r\n                t(strings.insights.element_pickers.default_names.output),\r\n              elementType,\r\n            ),\r\n            propertySelector: {\r\n              propertyType: args.property.propertyType,\r\n              referenceId:\r\n                args.property.name ||\r\n                t(strings.insights.element_pickers.default_names.output),\r\n            },\r\n            twinSelector: {\r\n              referenceId: args.twinId,\r\n              twinSelectorType: 'Twin',\r\n            },\r\n          };\r\n        default:\r\n          return undefined;\r\n      }\r\n    },\r\n    [getName],\r\n  );\r\n\r\n  return {\r\n    getNewElementFromSelections: getNewElementFromSelections,\r\n  };\r\n};\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { IFormulaBuilderRenderProps } from './FormulaBuilder.types';\r\nimport { FlowEditorContextProvider } from './components/FlowEditor/context/FlowEditorContext';\r\nimport { Spinner } from '@fluentui/react-components';\r\n\r\n/* istanbul ignore next */\r\nconst FlowEditor = lazy(() =>\r\n  import('./components/FlowEditor').then((module) => ({\r\n    default: module.FlowEditor,\r\n  })),\r\n);\r\n\r\nexport const useFormulaBuilderRender: React.FC<IFormulaBuilderRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  return (\r\n    <FlowEditorContextProvider>\r\n      <div className={styles.root}>\r\n        <div>{state.formulaName}</div>\r\n        <Suspense fallback={<Spinner className={styles.loading} />}>\r\n          <FlowEditor />\r\n        </Suspense>\r\n        {/* TODO: add back when we implement the job work */}\r\n        {/* <div className={styles.tray}>\r\n              <NodeDetailsTray />\r\n            </div> */}\r\n      </div>\r\n    </FlowEditorContextProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useFormulaBuilderRender } from './FormulaBuilder.render';\r\nimport { useClassNames } from './FormulaBuilder.styles';\r\nimport { useFormulaBuilderState } from './FormulaBuilder.state';\r\n\r\nconst MODULE_NAME = 'FormulaBuilder';\r\n\r\nexport const FormulaBuilder: React.FC = () => {\r\n  // get state\r\n  const state = useFormulaBuilderState();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useFormulaBuilderRender({ state, styles });\r\n};\r\n\r\nFormulaBuilder.displayName = MODULE_NAME;\r\n","import { useMemo } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { IFormulaBuilderState } from './FormulaBuilder.types';\r\nimport { useInsightsPageContext } from '../../contexts/InsightsPageContext/InsightsPageContext';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'FormulaBuilder.state';\r\n\r\nexport const useFormulaBuilderState = (): IFormulaBuilderState => {\r\n  // contexts\r\n  const { pageState } = useInsightsPageContext();\r\n\r\n  // state\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: IFormulaBuilderState = useMemo(() => {\r\n    return {\r\n      formulaName: pageState.currentFormula.displayName,\r\n    };\r\n  }, [pageState.currentFormula.displayName]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  IFormulaBuilderStyles,\r\n  FormulaBuilderClasses,\r\n} from './FormulaBuilder.types';\r\nimport { makeStyles, shorthands } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IFormulaBuilderStyles =\r\n  makeStyles<FormulaBuilderClasses>({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      ...shorthands.flex(1),\r\n      flexDirection: 'column',\r\n    },\r\n    loading: {\r\n      ...shorthands.margin('auto'),\r\n    },\r\n    tray: {\r\n      height: '400px',\r\n    },\r\n  });\r\n","import { produce } from 'immer';\r\nimport { getLogger } from '@do/core';\r\nimport {\r\n  FlowEditorContextState,\r\n  FlowEditorContextAction,\r\n  FlowEditorContextActionType,\r\n} from './FlowEditorContext.types';\r\n\r\nexport const debugLogging = true;\r\nexport const MODULE_NAME = 'FlowEditorContextReducer';\r\n\r\nexport const FlowEditorContextReducer: (\r\n  draft: FlowEditorContextState,\r\n  action: FlowEditorContextAction,\r\n) => FlowEditorContextState = produce(\r\n  (draft: FlowEditorContextState, action: FlowEditorContextAction) => {\r\n    debugLogging &&\r\n      getLogger().info(\r\n        MODULE_NAME,\r\n        `Updating FlowEditorContextReducer context ${action.type} with payload: `,\r\n        (action as any).payload,\r\n      );\r\n\r\n    switch (action.type) {\r\n      case FlowEditorContextActionType.SELECTED_NODE_SET: {\r\n        draft.selectedNodeId = action.payload.value;\r\n        break;\r\n      }\r\n    }\r\n  },\r\n);\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  memo,\r\n  useReducer,\r\n  useMemo,\r\n} from 'react';\r\nimport {\r\n  IFlowEditorContext,\r\n  FlowEditorContextProviderProps,\r\n  FlowEditorContextState,\r\n} from './FlowEditorContext.types';\r\nimport { FlowEditorContextReducer } from './FlowEditorContext.reducer';\r\n\r\nconst DEFAULT_TRANSFORM_WIZARD_CONTEXT: FlowEditorContextState = {\r\n  selectedNodeId: null,\r\n};\r\n\r\nexport const FlowEditorContext = createContext<IFlowEditorContext | null>(null);\r\nexport const useFlowEditorContext = () => {\r\n  const context = useContext(FlowEditorContext);\r\n  // istanbul ignore next\r\n  if (!context) {\r\n    throw new Error(\r\n      'useFlowEditorContext must be used within a FlowEditorContextProvider',\r\n    );\r\n  }\r\n  return context;\r\n};\r\n\r\n/**\r\n * This context is for holding which environment the app is running in (OneBox, INT, DAILY, PROD, etc). Dogfood/EDog is TEST\r\n */\r\nexport const FlowEditorContextProvider = memo(\r\n  ({\r\n    children,\r\n    initialState,\r\n  }: React.PropsWithChildren<FlowEditorContextProviderProps>) => {\r\n    const state: FlowEditorContextState = useMemo(\r\n      () => ({\r\n        ...DEFAULT_TRANSFORM_WIZARD_CONTEXT,\r\n        ...initialState,\r\n      }),\r\n      [initialState],\r\n    );\r\n\r\n    const [flowEditorState, flowEditorDispatch] = useReducer(\r\n      FlowEditorContextReducer,\r\n      state,\r\n    );\r\n\r\n    return (\r\n      <FlowEditorContext.Provider\r\n        value={{ flowEditorState, flowEditorDispatch }}\r\n      >\r\n        {children}\r\n      </FlowEditorContext.Provider>\r\n    );\r\n  },\r\n);\r\n","export type IFlowEditorContext = {\r\n  flowEditorState: FlowEditorContextState;\r\n  flowEditorDispatch: React.Dispatch<FlowEditorContextAction>;\r\n};\r\n\r\nexport interface FlowEditorContextProviderProps {\r\n  initialState?: Partial<FlowEditorContextState>;\r\n}\r\n\r\nexport type FlowEditorContextState = {\r\n  selectedNodeId: string | null | undefined;\r\n};\r\n\r\n/**\r\n * The action names the Wizard reducer can handle\r\n * NOTE: be sure to add the name to one of the collections of actions so they get routed to the right reducer\r\n */\r\nexport enum FlowEditorContextActionType {\r\n  SELECTED_NODE_SET = 'SELECTED_NODE_SET',\r\n}\r\n\r\n/** The actions to update the state */\r\nexport type FlowEditorContextAction = {\r\n  type: FlowEditorContextActionType.SELECTED_NODE_SET;\r\n  payload: { value: string | null | undefined };\r\n};\r\n","export { FormulaBuilder } from './FormulaBuilder.root';\r\n","import React from 'react';\r\nimport { FormulaListRenderProps } from './FormulaList.types';\r\nimport { FormulaData } from '@do/core';\r\nimport { getOutputPropertyReferenceId } from './FormulaList.utils';\r\nimport {\r\n  DataGridBody,\r\n  DataGridRow,\r\n  DataGrid,\r\n  DataGridHeader,\r\n  DataGridHeaderCell,\r\n  DataGridCell,\r\n  TableCellLayout,\r\n  TableColumnDefinition,\r\n  createTableColumn,\r\n  Link,\r\n} from '@fluentui/react-components';\r\nimport { strings, t } from '@do/localization';\r\n\r\nexport enum FormulaListTestIds {\r\n  Row = 'formulas-row',\r\n  Column = 'formulas-column',\r\n  Name = 'formulas-name',\r\n  ModelId = 'formulas-model-id',\r\n  OutputProperty = 'formulas-output-property',\r\n  Status = 'formulas-status',\r\n  LastRun = 'formulas-last-run',\r\n  CreatedOn = 'formulas-created-on',\r\n}\r\n\r\nexport const useFormulaListRender: React.FC<FormulaListRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  const columns: TableColumnDefinition<FormulaData>[] = [\r\n    createTableColumn<FormulaData>({\r\n      columnId: 'name',\r\n      renderCell: (formula) => {\r\n        return (\r\n          <Link\r\n            className={styles.formulaName}\r\n            onClick={() => {\r\n              state.navigateToBuilder(formula.id);\r\n            }}\r\n          >\r\n            {formula.displayName}\r\n          </Link>\r\n        );\r\n      },\r\n      renderHeaderCell: () => {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={FormulaListTestIds.Name}\r\n          >\r\n            {t(strings.insights.formulas.list.formula_name)}\r\n          </span>\r\n        );\r\n      },\r\n      compare: (a, b) => {\r\n        return a.displayName?.localeCompare(b.displayName as string) ?? -1;\r\n      },\r\n    }),\r\n    createTableColumn<FormulaData>({\r\n      columnId: 'modelId',\r\n      renderCell: () => {\r\n        return <TableCellLayout>{'-'}</TableCellLayout>;\r\n        {\r\n          /* TODO: Update with ModelID*/\r\n        }\r\n      },\r\n      renderHeaderCell: () => {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={FormulaListTestIds.ModelId}\r\n          >\r\n            {t(strings.insights.formulas.list.group_id)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn<FormulaData>({\r\n      columnId: 'outputProperty',\r\n      renderCell: (formula) => {\r\n        return (\r\n          <TableCellLayout>\r\n            {getOutputPropertyReferenceId(formula)}\r\n            {/* TODO: displayName or ref id? */}\r\n          </TableCellLayout>\r\n        );\r\n      },\r\n      renderHeaderCell: () => {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={FormulaListTestIds.OutputProperty}\r\n          >\r\n            {t(strings.insights.formulas.list.output_property)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn<FormulaData>({\r\n      columnId: 'status',\r\n      renderCell: (formula) => {\r\n        return (\r\n          <TableCellLayout>\r\n            {/* Using the `||` to handle empty values when no JobStatus is available */}\r\n            {formula.scheduleRuns?.calculationJobStatus || '-'}\r\n          </TableCellLayout>\r\n        );\r\n      },\r\n      renderHeaderCell: () => {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={FormulaListTestIds.Status}\r\n          >\r\n            {t(strings.insights.formulas.list.status)}\r\n          </span>\r\n        );\r\n      },\r\n    }),\r\n    createTableColumn<FormulaData>({\r\n      columnId: 'lastRun',\r\n      renderCell: (formula) => {\r\n        return (\r\n          <TableCellLayout>\r\n            {formula.scheduleRuns?.lastCalculationRunUtc?.toString() || '-'}\r\n          </TableCellLayout>\r\n        );\r\n      },\r\n      renderHeaderCell: () => {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={FormulaListTestIds.LastRun}\r\n          >\r\n            {t(strings.insights.formulas.list.last_run)}\r\n          </span>\r\n        );\r\n      },\r\n      // compare: (a, b) => {\r\n      //   return a.lastRun?.localeCompare(b.lastRun as string) ?? -1;\r\n      // },\r\n    }),\r\n    createTableColumn<FormulaData>({\r\n      columnId: 'createdOn',\r\n      renderCell: (formula) => {\r\n        return (\r\n          <TableCellLayout>\r\n            {formula.scheduleRuns?.startTimeUtc?.toString() || '-'}\r\n          </TableCellLayout>\r\n        );\r\n      },\r\n      renderHeaderCell: () => {\r\n        return (\r\n          <span\r\n            className={styles.columnHeader}\r\n            data-testid={FormulaListTestIds.CreatedOn}\r\n          >\r\n            {t(strings.insights.formulas.list.created_on)}\r\n          </span>\r\n        );\r\n      },\r\n      // compare: (a, b) => {\r\n      //   return a.createdOn?.localeCompare(b.createdOn as string) ?? -1;\r\n      // },\r\n    }),\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <h2 className={styles.listTitle}>\r\n        {t(strings.insights.formulas.list.header, { twinName: state.twinName })}\r\n      </h2>\r\n      <DataGrid\r\n        items={state.formulas} //TODO: Add loading state\r\n        columns={columns}\r\n        sortable\r\n        // resizableColumns TODO: Fix resizing functionality\r\n        // columnSizingOptions={columnSizingOptions}\r\n        selectionMode='single'\r\n        getRowId={(formula) => formula.id}\r\n        onSelectionChange={(_e, data) => {\r\n          const selectedItem = data.selectedItems.values().next().value; // Should be single select\r\n          if (selectedItem) state.onFormulaSelect(selectedItem);\r\n        }}\r\n      >\r\n        <DataGridHeader>\r\n          <DataGridRow\r\n            selectionCell={{\r\n              checkboxIndicator: {\r\n                'aria-label': `${t(\r\n                  strings.insights.formulas.list.select_all_rows,\r\n                )}`,\r\n              },\r\n            }}\r\n          >\r\n            {({ renderHeaderCell }) => (\r\n              <DataGridHeaderCell\r\n                sortIcon={{\r\n                  as: 'span',\r\n                  className: styles.sortIcon,\r\n                }}\r\n              >\r\n                {renderHeaderCell()}\r\n              </DataGridHeaderCell>\r\n            )}\r\n          </DataGridRow>\r\n        </DataGridHeader>\r\n        <DataGridBody<FormulaData>>\r\n          {({ item, rowId }) => (\r\n            <DataGridRow<FormulaData>\r\n              data-testid={FormulaListTestIds.Row}\r\n              key={rowId}\r\n              selectionCell={{\r\n                checkboxIndicator: { 'aria-label': 'Select formula' },\r\n                radioIndicator: { 'aria-label': 'Select formula' },\r\n              }}\r\n            >\r\n              {({ renderCell }) => (\r\n                <DataGridCell>{renderCell(item)}</DataGridCell>\r\n              )}\r\n            </DataGridRow>\r\n          )}\r\n        </DataGridBody>\r\n      </DataGrid>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { FormulaListProps } from './FormulaList.types';\r\nimport { useFormulaListRender } from './FormulaList.render';\r\nimport { useClassNames } from './FormulaList.styles';\r\nimport { useFormulaListState } from './FormulaList.state';\r\n\r\nconst MODULE_NAME = 'FormulaList';\r\n\r\nexport const FormulaList: React.FC<FormulaListProps> = (props) => {\r\n  // get state\r\n  const state = useFormulaListState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useFormulaListRender({ state, styles });\r\n};\r\n\r\nFormulaList.displayName = MODULE_NAME;\r\n","import { useCallback, useEffect, useMemo } from 'react';\r\nimport { getLogger, useCalculationClient, useDebugLogging } from '@do/core';\r\nimport { FormulaListProps, FormulaListState } from './FormulaList.types';\r\nimport { useInsightsPageContext } from '../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContextActionType } from '../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { getAllFormulas } from '../InsightsHierarchy/InsightsHierarchy.utils';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'FormulaList.state';\r\n\r\nexport const useFormulaListState = (\r\n  _props: FormulaListProps,\r\n): FormulaListState => {\r\n  // contexts\r\n  const { pageState, pageDispatch } = useInsightsPageContext();\r\n\r\n  // state\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n  const client = useCalculationClient();\r\n\r\n  // callbacks\r\n  const navigateToBuilder = useCallback(\r\n    (formulaId: string) => {\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.NAVIGATE_TO_BUILDER,\r\n        payload: {\r\n          formulaId: formulaId,\r\n          twinId: pageState.selectedTwinId || '',\r\n          twinDisplayName:\r\n            pageState.selectedTwinDisplayName || pageState.selectedTwinId,\r\n        },\r\n      });\r\n    },\r\n    [pageDispatch, pageState.selectedTwinDisplayName, pageState.selectedTwinId],\r\n  );\r\n\r\n  const onFormulaSelect = useCallback(\r\n    (formulaId: string) => {\r\n      // search for the formula in the list\r\n      if (pageState.formulaList.state === 'success') {\r\n        const formula = pageState.formulaList.data.find(\r\n          (formula) => formula.id === formulaId,\r\n        );\r\n\r\n        // Set current formula data\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.CURRENT_FORMULA_SET,\r\n          payload: {\r\n            formula, // Will be undefined if no formula is found\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [pageDispatch, pageState],\r\n  );\r\n\r\n  // side effects\r\n  const shownFormulas = useMemo(() => {\r\n    if (pageState.formulaList.state === 'success') {\r\n      return pageState.formulaList.data;\r\n    }\r\n    return [];\r\n  }, [pageState.formulaList]);\r\n\r\n  useEffect(() => {\r\n    const loadFormulas = async () => {\r\n      if (\r\n        pageState.selectedTwinId &&\r\n        pageState.formulaList.state === 'uncalled'\r\n      ) {\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.FORMULA_LIST_LOADING,\r\n          payload: {\r\n            twinId: pageState.selectedTwinId,\r\n          },\r\n        });\r\n\r\n        const response = await getAllFormulas(client, pageState.selectedTwinId);\r\n\r\n        if ('errorCode' in response) {\r\n          getLogger().error(MODULE_NAME, response.errorMessage);\r\n        } else {\r\n          pageDispatch({\r\n            type: InsightsPageContextActionType.FORMULA_LIST_LOADED,\r\n            payload: { data: response },\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    loadFormulas();\r\n  }, [\r\n    client,\r\n    pageDispatch,\r\n    pageState.formulaList.state,\r\n    pageState.selectedTwinId,\r\n  ]);\r\n\r\n  // result\r\n  const state: FormulaListState = useMemo(() => {\r\n    return {\r\n      formulas: shownFormulas,\r\n      twinId: pageState.selectedTwinId || '',\r\n      navigateToBuilder,\r\n      onFormulaSelect,\r\n      twinName: pageState.selectedTwinDisplayName || '',\r\n      isLoading: pageState.formulaList.state === 'pending',\r\n    };\r\n  }, [\r\n    shownFormulas,\r\n    pageState.selectedTwinId,\r\n    pageState.selectedTwinDisplayName,\r\n    pageState.formulaList.state,\r\n    navigateToBuilder,\r\n    onFormulaSelect,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import { FormulaListStyles, FormulaListClasses } from './FormulaList.types';\r\nimport {\r\n  makeStyles,\r\n  tokens,\r\n  typographyStyles,\r\n} from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => FormulaListStyles =\r\n  makeStyles<FormulaListClasses>({\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n      paddingLeft: '24px',\r\n      paddingRight: '24px',\r\n    },\r\n    columnHeader: {\r\n      fontWeight: tokens.fontWeightSemibold,\r\n    },\r\n    formulaName: {\r\n      color: tokens.colorBrandBackground,\r\n      ...typographyStyles.body1Strong,\r\n    },\r\n    sortIcon: {\r\n      color: tokens.colorBrandBackground,\r\n    },\r\n    listTitle: {\r\n      ...typographyStyles.title3,\r\n    },\r\n  });\r\n","import { FormulaData, FormulaElement, FormulaOutputProperty } from '@do/core';\r\n\r\nexport const getOutputPropertyReferenceId = (\r\n  formula: FormulaData,\r\n): string | undefined => {\r\n  const outputPropertyElement = formula.elements.find(\r\n    (element: FormulaElement) => element.type === 'OutputProperty',\r\n  ) as FormulaOutputProperty;\r\n\r\n  if (outputPropertyElement) {\r\n    return outputPropertyElement.propertySelector.referenceId;\r\n  }\r\n\r\n  return undefined;\r\n};\r\n","export { FormulaList } from './FormulaList.root';\r\nexport { FormulaListProps } from './FormulaList.types';\r\n","import React from 'react';\r\nimport { InsightsDetailsPanelRenderProps } from './InsightsDetailsPanel.types';\r\nimport { ExpressionEditor } from './components/ExpressionEditor';\r\nimport { strings } from '@do/localization';\r\n\r\nimport {\r\n  Drawer,\r\n  DrawerHeader,\r\n  DrawerHeaderTitle,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  Button,\r\n} from '@fluentui/react-components';\r\nimport { t } from '@do/localization';\r\nimport { ElementBaseEditor } from './components/ElementBaseEditor';\r\nimport { FunctionEditor } from './components/FunctionEditor';\r\nimport { OutputEditor } from './components/OutputEditor';\r\nimport { InputEditor } from './components/InputEditor';\r\n\r\nexport const useInsightsDetailsPanelRender: React.FC<\r\n  InsightsDetailsPanelRenderProps\r\n> = ({ state, styles }) => {\r\n  const { isPanelOpen, elementType, onSave, onCancel } = state;\r\n\r\n  const getTitle = () => {\r\n    switch (elementType) {\r\n      case 'Expression':\r\n        return t(strings.insights.editor.title_expression);\r\n      case 'Function':\r\n        return t(strings.insights.editor.title_function);\r\n      case 'InputProperty':\r\n        return t(strings.insights.editor.title_input);\r\n      case 'OutputProperty':\r\n        return t(strings.insights.editor.title_output);\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      className={styles.root}\r\n      position='end'\r\n      open={isPanelOpen}\r\n      modalType='non-modal'\r\n      size='medium'\r\n      type='inline'\r\n      aria-label={getTitle()}\r\n    >\r\n      <DrawerHeader>\r\n        <DrawerHeaderTitle>{getTitle()}</DrawerHeaderTitle>\r\n      </DrawerHeader>\r\n      <DrawerBody className={styles.drawerBody}>\r\n        {elementType ? (\r\n          <ElementBaseEditor\r\n            element={state.element}\r\n            onUpdateElement={state.onUpdateElement}\r\n          />\r\n        ) : null}\r\n        {elementType === 'Expression' ? (\r\n          <ExpressionEditor element={state.element} ref={state.expressionRef} />\r\n        ) : null}\r\n        {elementType === 'Function' ? (\r\n          <FunctionEditor\r\n            element={state.element}\r\n            onUpdateElement={state.onUpdateElement}\r\n            source={state.source}\r\n            onUpdateSource={state.onUpdateSources}\r\n          />\r\n        ) : null}\r\n        {elementType === 'InputProperty' ? (\r\n          <InputEditor\r\n            element={state.element}\r\n            onUpdateElement={state.onUpdateElement}\r\n          />\r\n        ) : null}\r\n        {elementType === 'OutputProperty' ? (\r\n          <OutputEditor\r\n            element={state.element}\r\n            onUpdateElement={state.onUpdateElement}\r\n            source={state.source}\r\n            onUpdateSource={state.onUpdateSources}\r\n          />\r\n        ) : null}\r\n      </DrawerBody>\r\n      <DrawerFooter>\r\n        <Button appearance='primary' onClick={onSave}>\r\n          {t(strings.common.apply)}\r\n        </Button>\r\n        <Button onClick={onCancel}>{t(strings.common.cancel)}</Button>\r\n      </DrawerFooter>\r\n    </Drawer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useInsightsDetailsPanelRender } from './InsightsDetailsPanel.render';\r\nimport { useClassNames } from './InsightsDetailsPanel.styles';\r\nimport { useInsightsDetailsPanelState } from './InsightsDetailsPanel.state';\r\n\r\nconst MODULE_NAME = 'InsightsDetailsPanel';\r\n\r\nexport const InsightsDetailsPanel: React.FC = () => {\r\n  // get state\r\n  const state = useInsightsDetailsPanelState();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useInsightsDetailsPanelRender({ state, styles });\r\n};\r\n\r\nInsightsDetailsPanel.displayName = MODULE_NAME;\r\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { getIdentifierValues } from '@microsoft/digital-operations.calculation-validator';\r\nimport { FormulaElement, getLogger, useDebugLogging } from '@do/core';\r\nimport { InsightsDetailsPanelState } from './InsightsDetailsPanel.types';\r\nimport { useInsightsPageContext } from '../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport {\r\n  FormulaContextData,\r\n  InsightsPageContextActionType,\r\n} from '../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { ExpressionRef } from './components/ExpressionEditor/ExpressionEditor.types';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'InsightsDetailsPanel.state';\r\n\r\nexport const useInsightsDetailsPanelState = (): InsightsDetailsPanelState => {\r\n  // contexts\r\n  const {\r\n    pageState: { currentFormula },\r\n    pageDispatch,\r\n  } = useInsightsPageContext();\r\n\r\n  // state\r\n  const [selectedElement, setSelectedElement] = useState<\r\n    FormulaElement | undefined\r\n  >(getSelectedElement(currentFormula));\r\n  const [elementSources, setElementSources] = useState<string[]>([]);\r\n  const expressionRef = useRef<ExpressionRef>();\r\n  const isPanelOpen = !!selectedElement;\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n  const onCancel = useCallback(() => {\r\n    setSelectedElement(undefined);\r\n    pageDispatch({\r\n      type: InsightsPageContextActionType.SELECTED_NODE_SET,\r\n      payload: {\r\n        value: '',\r\n      },\r\n    });\r\n  }, [pageDispatch]);\r\n\r\n  const onSave = useCallback(() => {\r\n    // push changes to the context\r\n    if (selectedElement) {\r\n      let element = selectedElement;\r\n      if (element.type === 'Expression') {\r\n        // fetch value\r\n        element = {\r\n          ...element, // copy to unlink from state object\r\n          expression: expressionRef.current?.getExpressionValue() ?? '',\r\n        };\r\n      }\r\n\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.FORMULA_UPDATE_ELEMENT,\r\n        payload: {\r\n          element: element,\r\n        },\r\n      });\r\n      if (\r\n        element.type === 'Function' ||\r\n        element.type === 'Expression' ||\r\n        element.type === 'OutputProperty'\r\n      ) {\r\n        let sourceIds = elementSources;\r\n\r\n        // This logic will move to the expression editor once we remove the apply button pattern\r\n        if (element.type === 'Expression') {\r\n          const sourceNames = getIdentifierValues(\r\n            expressionRef.current?.getExpressionValue() ?? '',\r\n          );\r\n\r\n          // get node ids from node names\r\n          const expressionSourceIds: string[] = [];\r\n          sourceNames.forEach((sourceName) => {\r\n            const sourceNode = currentFormula.elements.find(\r\n              (node) => node.displayName === sourceName,\r\n            );\r\n            if (sourceNode !== undefined) {\r\n              expressionSourceIds.push(sourceNode.id);\r\n            }\r\n          });\r\n          sourceIds = expressionSourceIds;\r\n        }\r\n\r\n        // Filter out current element and output element from sources\r\n        const outputElement = currentFormula.elements.find(\r\n          (element) => element.type === 'OutputProperty',\r\n        );\r\n        sourceIds = sourceIds.filter(\r\n          (sourceId) =>\r\n            sourceId !== element.id && sourceId !== outputElement?.id,\r\n        );\r\n\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.SELECTED_NODE_UPDATE_SOURCES,\r\n          payload: {\r\n            newSourceNodeIds: sourceIds,\r\n          },\r\n        });\r\n      }\r\n\r\n      onCancel();\r\n    }\r\n  }, [currentFormula, elementSources, onCancel, pageDispatch, selectedElement]);\r\n\r\n  // side effects\r\n  // Update the selected element when the selection changes\r\n  useEffect(() => {\r\n    const element = getSelectedElement(currentFormula);\r\n    setSelectedElement(element);\r\n\r\n    if (element?.type === 'Expression') {\r\n      expressionRef.current?.setExpressionValue(element?.expression ?? '');\r\n    }\r\n  }, [currentFormula, pageDispatch]);\r\n\r\n  // Update the element sources when the selection changes\r\n  useEffect(() => {\r\n    let sources: string[] = [];\r\n    if (\r\n      selectedElement?.type === 'OutputProperty' ||\r\n      selectedElement?.type === 'Function' ||\r\n      selectedElement?.type === 'Expression'\r\n    ) {\r\n      const relationships = currentFormula.edges.filter(\r\n        (edge) => edge.target === selectedElement.id,\r\n      );\r\n      if (relationships) {\r\n        sources = relationships.map((edge) => edge.source);\r\n        setElementSources(sources);\r\n      }\r\n    } else {\r\n      setElementSources(sources);\r\n    }\r\n  }, [currentFormula, selectedElement?.id, selectedElement?.type]);\r\n\r\n  // result\r\n  const state: InsightsDetailsPanelState = useMemo(() => {\r\n    const base = {\r\n      isPanelOpen,\r\n      onSave,\r\n      onCancel,\r\n    };\r\n    let result: InsightsDetailsPanelState;\r\n    switch (selectedElement?.type) {\r\n      case 'Function':\r\n        result = {\r\n          ...base,\r\n          elementType: 'Function',\r\n          element: selectedElement,\r\n          onUpdateElement: setSelectedElement,\r\n          source: elementSources.length > 0 ? elementSources[0] : '',\r\n          onUpdateSources: setElementSources,\r\n        };\r\n        break;\r\n      case 'Expression':\r\n        result = {\r\n          ...base,\r\n          elementType: 'Expression',\r\n          element: selectedElement,\r\n          expressionRef: expressionRef,\r\n          onUpdateElement: setSelectedElement,\r\n          onUpdateSources: setElementSources,\r\n        };\r\n        break;\r\n      case 'InputProperty':\r\n        result = {\r\n          ...base,\r\n          elementType: 'InputProperty',\r\n          element: selectedElement,\r\n          onUpdateElement: setSelectedElement,\r\n        };\r\n        break;\r\n      case 'OutputProperty':\r\n        result = {\r\n          ...base,\r\n          elementType: 'OutputProperty',\r\n          element: selectedElement,\r\n          onUpdateElement: setSelectedElement,\r\n          source: elementSources.length > 0 ? elementSources[0] : '',\r\n          onUpdateSources: setElementSources,\r\n        };\r\n        break;\r\n      // happens when panel is closing when item is unselected\r\n      default:\r\n        result = {\r\n          ...base,\r\n          elementType: '',\r\n        };\r\n    }\r\n    return result;\r\n  }, [elementSources, isPanelOpen, onCancel, onSave, selectedElement]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n\r\nfunction getSelectedElement(currentFormula: FormulaContextData) {\r\n  return currentFormula.selectedElement ?? undefined;\r\n}\r\n","import {\r\n  InsightsDetailsPanelStyles,\r\n  InsightsDetailsPanelClasses,\r\n} from './InsightsDetailsPanel.types';\r\nimport { makeStyles, shorthands } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => InsightsDetailsPanelStyles =\r\n  makeStyles<InsightsDetailsPanelClasses>({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: '400px', // fixed width so that the canvas in the middle expands to fill the remaining space\r\n      ...shorthands.gap('8px'),\r\n    },\r\n    drawerBody: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      ...shorthands.gap('12px'),\r\n      paddingRight: '12px',\r\n    },\r\n  });\r\n","import React from 'react';\r\nimport { ElementBaseEditorRenderProps } from './ElementBaseEditor.types';\r\nimport { Input, useId, Field } from '@fluentui/react-components';\r\nimport { t, strings } from '@do/localization';\r\n\r\nexport const enum ElementBaseEditorTabTestIds {\r\n  NameInput = 'details-tray-name-input',\r\n  DescriptionInput = 'details-tray-description-input',\r\n}\r\n\r\nexport const useElementBaseEditorRender: React.FC<\r\n  ElementBaseEditorRenderProps\r\n> = (props) => {\r\n  const { state, styles } = props;\r\n  const inputId = useId('input');\r\n\r\n  return (\r\n    <>\r\n      <Field\r\n        className={styles.row}\r\n        label={t(strings.insights.element_base_editor.element_label.name)}\r\n        required\r\n        validationMessage={state.nameValidationMessage}\r\n      >\r\n        <Input\r\n          appearance='outline'\r\n          value={`${state.element.displayName}`}\r\n          onChange={(_ex, data) => state.onElementNameSet(data.value)}\r\n          id={inputId}\r\n          data-testid={ElementBaseEditorTabTestIds.NameInput}\r\n          placeholder={\r\n            t(\r\n              strings.insights.element_base_editor.placeholder.name_placeholder,\r\n            ) as string\r\n          }\r\n        />\r\n      </Field>\r\n      <Field\r\n        className={styles.row}\r\n        label={t(\r\n          strings.insights.element_base_editor.element_label.description,\r\n        )}\r\n      >\r\n        <Input\r\n          appearance='outline'\r\n          value={state.element.description ?? ''}\r\n          onChange={(_ex, data) => state.onElementDescriptionSet(data.value)}\r\n          id={inputId}\r\n          data-testid={ElementBaseEditorTabTestIds.DescriptionInput}\r\n          placeholder={\r\n            t(\r\n              strings.insights.element_base_editor.placeholder\r\n                .description_placeholder,\r\n            ) as string\r\n          }\r\n        />\r\n      </Field>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ElementBaseEditorProps } from './ElementBaseEditor.types';\r\nimport { useElementBaseEditorRender } from './ElementBaseEditor.render';\r\nimport { useClassNames } from './ElementBaseEditor.styles';\r\nimport { useElementBaseEditorState } from './ElementBaseEditor.state';\r\n\r\nconst MODULE_NAME = 'ElementBaseEditor';\r\n\r\nexport const ElementBaseEditor: React.FC<ElementBaseEditorProps> = (props) => {\r\n  // get state\r\n  const state = useElementBaseEditorState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useElementBaseEditorRender({ state, styles });\r\n};\r\n\r\nElementBaseEditor.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo } from 'react';\r\nimport {\r\n  ElementBaseEditorProps,\r\n  ElementBaseEditorState,\r\n} from './ElementBaseEditor.types';\r\nimport { produce } from 'immer';\r\nimport { t, strings } from '@do/localization';\r\nimport { useInsightsPageContext } from '../../../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { evaluateIdentifier } from '@microsoft/digital-operations.calculation-validator';\r\n\r\nexport const useElementBaseEditorState = (\r\n  props: ElementBaseEditorProps,\r\n): ElementBaseEditorState => {\r\n  // contexts\r\n  const { pageState } = useInsightsPageContext();\r\n\r\n  const nameValidationMessage = t(\r\n    strings.insights.element_base_editor.name_validation_message,\r\n  );\r\n  const noEmptyNameMessage = t(\r\n    strings.insights.element_base_editor.no_empty_name_message,\r\n  );\r\n\r\n  const getNameValidationMessage = useCallback(\r\n    (name: string): string | undefined => {\r\n      // Note: Need this separate case for now because evaluateIdentifier throws an error if name is empty\r\n      if (name == '') {\r\n        return noEmptyNameMessage;\r\n      }\r\n      try {\r\n        // Wrap this in a try catch in case evaluateIdentifier throws an unexpected error\r\n        const isValidName = evaluateIdentifier(name);\r\n        if (!isValidName) {\r\n          return nameValidationMessage;\r\n        }\r\n      } catch (e) {\r\n        return nameValidationMessage;\r\n      }\r\n      return undefined;\r\n    },\r\n    [nameValidationMessage, noEmptyNameMessage],\r\n  );\r\n\r\n  // dispatch action\r\n  const onElementNameSet = useCallback(\r\n    (name: string) => {\r\n      props.onUpdateElement(\r\n        produce((current) => {\r\n          if (current) {\r\n            current.displayName = name;\r\n\r\n            // Handle validation message\r\n            const message = getNameValidationMessage(name);\r\n            if (message) {\r\n              if (current.errorMessages === undefined) {\r\n                current.errorMessages = { name: message };\r\n              } else {\r\n                current.errorMessages['name'] = message;\r\n              }\r\n            } else {\r\n              // Clear name validation\r\n              if (current.errorMessages !== undefined) {\r\n                delete current.errorMessages['name'];\r\n              }\r\n            }\r\n\r\n            if (\r\n              current.type === 'OutputProperty' &&\r\n              !pageState.selectedFormulaId\r\n            )\r\n              current.propertySelector.referenceId = name; // TODO: Need better way of knowing whether customer is in the process of creating or updating a formula (create some type of action state)\r\n          }\r\n          return current;\r\n        }),\r\n      );\r\n    },\r\n    [getNameValidationMessage, pageState.selectedFormulaId, props],\r\n  );\r\n\r\n  const onElementDescriptionSet = useCallback(\r\n    (description: string) => {\r\n      props.onUpdateElement(\r\n        produce((current) => {\r\n          if (current) {\r\n            current.description = description;\r\n          }\r\n          return current;\r\n        }),\r\n      );\r\n    },\r\n    [props],\r\n  );\r\n\r\n  // hooks\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n\r\n  // state\r\n  const state: ElementBaseEditorState = useMemo(() => {\r\n    return {\r\n      element: props.element,\r\n      onElementNameSet,\r\n      onElementDescriptionSet,\r\n      nameValidationMessage: props.element.errorMessages?.name,\r\n    };\r\n  }, [props.element, onElementNameSet, onElementDescriptionSet]);\r\n\r\n  // result\r\n  return state;\r\n};\r\n","import {\r\n  ElementBaseEditorStyles,\r\n  ElementBaseEditorClasses,\r\n} from './ElementBaseEditor.types';\r\nimport { makeStyles, shorthands } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => ElementBaseEditorStyles =\r\n  makeStyles<ElementBaseEditorClasses>({\r\n    row: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      ...shorthands.gap('20px'),\r\n    },\r\n  });\r\n","export { ElementBaseEditor } from './ElementBaseEditor.root';\r\nexport { ElementBaseEditorProps } from './ElementBaseEditor.types';\r\n","import React from 'react';\r\nimport { ExpressionEditorRenderProps } from './ExpressionEditor.types';\r\nimport { Editor } from '@do/components';\r\nimport type { editor } from 'monaco-editor';\r\nimport { strings, t } from '@do/localization';\r\nimport { OperationsTab } from './components/OperationsTab';\r\nimport { Field } from '@fluentui/react-components';\r\n\r\nconst editorOptions: editor.IStandaloneEditorConstructionOptions = {\r\n  language: 'CalcEngineExpression',\r\n  value: 'Enter your expression here',\r\n  lineNumbers: 'off', // turn off line numbers\r\n  glyphMargin: false, // turn off glyph margin (line border)\r\n  renderLineHighlight: 'none', // turn off line highlight\r\n  scrollbar: {\r\n    vertical: 'auto', // hide vertical scrollbar\r\n    horizontal: 'hidden', // hide horizontal scrollbar\r\n  },\r\n  minimap: {\r\n    enabled: false, // hide minimap\r\n  },\r\n  overviewRulerLanes: 0, // hide overview ruler\r\n  wordWrap: 'on', // wrap lines\r\n  quickSuggestions: false, // Disable autocomplete\r\n  contextmenu: false, // Disable context menu\r\n};\r\n\r\nexport const useExpressionEditorRender: React.FC<\r\n  ExpressionEditorRenderProps\r\n> = ({ state, styles }) => {\r\n  const { element, editorRef } = state;\r\n\r\n  editorOptions.value =\r\n    element.expression || t(strings.insights.expression_editor.placeholder);\r\n  return (\r\n    <>\r\n      <div className={styles.editorContainer}>\r\n        <Field label={t(strings.insights.expression_editor.label)} required>\r\n          <div className={styles.editor}>\r\n            <Editor\r\n              options={editorOptions}\r\n              isExpressionEditor={true}\r\n              language='CalcEngineExpression'\r\n              ref={editorRef}\r\n            />\r\n          </div>\r\n        </Field>\r\n      </div>\r\n      <OperationsTab\r\n        onAddOperationClick={state.editorRef.current?.insertValueAtCursor}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { forwardRef } from 'react';\r\nimport { ExpressionRef, ExpressionEditorProps } from './ExpressionEditor.types';\r\nimport { useExpressionEditorRender } from './ExpressionEditor.render';\r\nimport { useClassNames } from './ExpressionEditor.styles';\r\nimport { useExpressionEditorState } from './ExpressionEditor.state';\r\n\r\nconst MODULE_NAME = 'ExpressionEditor';\r\n\r\nexport const ExpressionEditor = forwardRef<\r\n  ExpressionRef | undefined,\r\n  ExpressionEditorProps\r\n>((props, ref) => {\r\n  // get state\r\n  const state = useExpressionEditorState(props, ref);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useExpressionEditorRender({ state, styles });\r\n});\r\n\r\nExpressionEditor.displayName = MODULE_NAME;\r\n","import { useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { EditorRef } from '@do/components';\r\nimport {\r\n  ExpressionRef,\r\n  ExpressionEditorProps,\r\n  ExpressionEditorState,\r\n} from './ExpressionEditor.types';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'ExpressionEditor.state';\r\n\r\nexport const useExpressionEditorState = (\r\n  props: ExpressionEditorProps,\r\n  ref: React.Ref<ExpressionRef | undefined>,\r\n): ExpressionEditorState => {\r\n  // contexts\r\n\r\n  // state\r\n  const editorRef = useRef<EditorRef>();\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      setExpressionValue: (value: string) => {\r\n        editorRef.current?.setValue(value);\r\n      },\r\n      getExpressionValue: () => {\r\n        return editorRef.current?.getValue() || '';\r\n      },\r\n      insertValueAtCursor: (value: string) => {\r\n        editorRef.current?.insertValueAtCursor(value);\r\n      },\r\n    };\r\n  });\r\n\r\n  // Callback to insert value at cursor\r\n  const onAddOperationClick = (value: string) => {\r\n    editorRef.current?.insertValueAtCursor(value);\r\n  };\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: ExpressionEditorState = useMemo(() => {\r\n    return {\r\n      editorRef: editorRef,\r\n      element: props.element,\r\n      onAddOperationClick,\r\n    };\r\n  }, [props.element]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  ExpressionEditorStyles,\r\n  ExpressionEditorClasses,\r\n} from './ExpressionEditor.types';\r\nimport {\r\n  makeStyles,\r\n  shorthands,\r\n  typographyStyles,\r\n  tokens,\r\n} from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => ExpressionEditorStyles =\r\n  makeStyles<ExpressionEditorClasses>({\r\n    root: {},\r\n    title: {\r\n      ...typographyStyles.subtitle1,\r\n    },\r\n    instructions: {\r\n      ...typographyStyles.body1,\r\n    },\r\n    inputTypes: {\r\n      color: tokens.colorBrandBackground,\r\n    },\r\n    editor: {\r\n      height: '200px',\r\n      width: '100%',\r\n      ...shorthands.border(\r\n        tokens.strokeWidthThick,\r\n        'solid',\r\n        tokens.colorBrandStroke1,\r\n      ),\r\n      ...shorthands.borderRadius(tokens.borderRadiusXLarge),\r\n    },\r\n    editorContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      ...shorthands.gap('8px'),\r\n    },\r\n  });\r\n","import React from 'react';\r\nimport { OperationsTabRenderProps } from './OperationsTab.types';\r\nimport { strings, t } from '@do/localization';\r\nimport { OperationsButtonGroup } from './components/OperationsButtonGroup';\r\n\r\nexport const useOperationsTabRender: React.FC<OperationsTabRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <OperationsButtonGroup\r\n        title={t(\r\n          strings.insights.expression_editor.expression_editor_tabs\r\n            .operations_button_groups.mathematical.title,\r\n        )}\r\n        subtitle={t(\r\n          strings.insights.expression_editor.expression_editor_tabs\r\n            .operations_button_groups.mathematical.subtitle,\r\n        )}\r\n        operations={['+', '-', '*', '/', '=', '(', ')', '%']}\r\n        onAddOperationClick={state.onAddOperationClick}\r\n      />\r\n      <OperationsButtonGroup\r\n        title={t(\r\n          strings.insights.expression_editor.expression_editor_tabs\r\n            .operations_button_groups.computing.title,\r\n        )}\r\n        subtitle={t(\r\n          strings.insights.expression_editor.expression_editor_tabs\r\n            .operations_button_groups.computing.subtitle,\r\n        )}\r\n        operations={['pi', 'e', 'exp', 'sqrt', 'abs']}\r\n        onAddOperationClick={state.onAddOperationClick}\r\n      />\r\n      <OperationsButtonGroup\r\n        title={t(\r\n          strings.insights.expression_editor.expression_editor_tabs\r\n            .operations_button_groups.trigonometric.title,\r\n        )}\r\n        subtitle={t(\r\n          strings.insights.expression_editor.expression_editor_tabs\r\n            .operations_button_groups.trigonometric.subtitle,\r\n        )}\r\n        operations={['cos', 'sin', 'tan', 'acos', 'asin', 'atan', 'atan2']}\r\n        onAddOperationClick={state.onAddOperationClick}\r\n      />\r\n      <OperationsButtonGroup\r\n        title={t(\r\n          strings.insights.expression_editor.expression_editor_tabs\r\n            .operations_button_groups.logarithmic.title,\r\n        )}\r\n        subtitle={t(\r\n          strings.insights.expression_editor.expression_editor_tabs\r\n            .operations_button_groups.logarithmic.subtitle,\r\n        )}\r\n        operations={['log', 'log2', 'log10']}\r\n        onAddOperationClick={state.onAddOperationClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { OperationsTabProps } from './OperationsTab.types';\r\nimport { useOperationsTabRender } from './OperationsTab.render';\r\nimport { useClassNames } from './OperationsTab.styles';\r\nimport { useOperationsTabState } from './OperationsTab.state';\r\n\r\nconst MODULE_NAME = 'OperationsTab';\r\n\r\nexport const OperationsTab: React.FC<OperationsTabProps> = (props) => {\r\n  // get state\r\n  const state = useOperationsTabState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useOperationsTabRender({ state, styles });\r\n};\r\n\r\nOperationsTab.displayName = MODULE_NAME;\r\n","import { useMemo } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { OperationsTabProps, OperationsTabState } from './OperationsTab.types';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'OperationsTab.state';\r\n\r\nexport const useOperationsTabState = (\r\n  props: OperationsTabProps,\r\n): OperationsTabState => {\r\n  // contexts\r\n\r\n  // state\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: OperationsTabState = useMemo(() => {\r\n    return {\r\n      onAddOperationClick: props.onAddOperationClick,\r\n    };\r\n  }, [props.onAddOperationClick]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  OperationsTabStyles,\r\n  OperationsTabClasses,\r\n} from './OperationsTab.types';\r\nimport { makeStyles } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => OperationsTabStyles =\r\n  makeStyles<OperationsTabClasses>({\r\n    root: {},\r\n    searchString: {\r\n      marginTop: '4px',\r\n      paddingBottom: '4px',\r\n      width: '100%',\r\n    },\r\n  });\r\n","import React from 'react';\r\nimport { OperationsButtonGroupRenderProps } from './OperationsButtonGroup.types';\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionHeader,\r\n  AccordionPanel,\r\n  Toolbar,\r\n  ToolbarGroup,\r\n  ToolbarButton,\r\n} from '@fluentui/react-components';\r\nimport { DatabaseMultiple20Filled } from '@fluentui/react-icons';\r\n\r\nexport const getOperationsButtonGroupTestIds = (operator: string) => ({\r\n  OperatorButton: `insert-${operator}-button`,\r\n});\r\n\r\nexport const useOperationsButtonGroupRender: React.FC<\r\n  OperationsButtonGroupRenderProps\r\n> = ({ state, styles }) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <Accordion collapsible>\r\n        <AccordionItem value={state.title}>\r\n          <AccordionHeader\r\n            icon={<DatabaseMultiple20Filled />}\r\n            expandIconPosition='end'\r\n          >\r\n            <div className={styles.dropdownPanel}>\r\n              <span className={styles.title}>{state.title}</span>\r\n              <span className={styles.subtitle}>{state.subtitle}</span>\r\n            </div>\r\n          </AccordionHeader>\r\n          <AccordionPanel>\r\n            <Toolbar>\r\n              <ToolbarGroup>\r\n                {state.operations.map((operation) => (\r\n                  <ToolbarButton\r\n                    key={operation}\r\n                    name={state.title}\r\n                    value={operation}\r\n                    className={styles.operationButton}\r\n                    onClick={() => state.onAddOperationClick?.(operation)}\r\n                    disabled={!state.onAddOperationClick}\r\n                    data-testid={\r\n                      getOperationsButtonGroupTestIds(operation).OperatorButton\r\n                    }\r\n                  >\r\n                    {operation}\r\n                    {/* TODO: Decide how to handle translations for operations */}\r\n                  </ToolbarButton>\r\n                ))}\r\n              </ToolbarGroup>\r\n            </Toolbar>\r\n          </AccordionPanel>\r\n        </AccordionItem>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { OperationsButtonGroupProps } from './OperationsButtonGroup.types';\r\nimport { useOperationsButtonGroupRender } from './OperationsButtonGroup.render';\r\nimport { useClassNames } from './OperationsButtonGroup.styles';\r\nimport { useOperationsButtonGroupState } from './OperationsButtonGroup.state';\r\n\r\nconst MODULE_NAME = 'OperationsButtonGroup';\r\n\r\nexport const OperationsButtonGroup: React.FC<OperationsButtonGroupProps> = (\r\n  props,\r\n) => {\r\n  // get state\r\n  const state = useOperationsButtonGroupState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useOperationsButtonGroupRender({ state, styles });\r\n};\r\n\r\nOperationsButtonGroup.displayName = MODULE_NAME;\r\n","import { useMemo } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport {\r\n  OperationsButtonGroupProps,\r\n  OperationsButtonGroupState,\r\n} from './OperationsButtonGroup.types';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'OperationsButtonGroup.state';\r\n\r\nexport const useOperationsButtonGroupState = (\r\n  props: OperationsButtonGroupProps,\r\n): OperationsButtonGroupState => {\r\n  // contexts\r\n\r\n  // state\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: OperationsButtonGroupState = useMemo(() => {\r\n    return {\r\n      title: props.title,\r\n      subtitle: props.subtitle,\r\n      operations: props.operations,\r\n      onAddOperationClick: props.onAddOperationClick,\r\n    };\r\n  }, [\r\n    props.title,\r\n    props.subtitle,\r\n    props.operations,\r\n    props.onAddOperationClick,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  OperationsButtonGroupStyles,\r\n  OperationsButtonGroupClasses,\r\n} from './OperationsButtonGroup.types';\r\nimport {\r\n  makeStyles,\r\n  typographyStyles,\r\n  shorthands,\r\n  tokens,\r\n} from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => OperationsButtonGroupStyles =\r\n  makeStyles<OperationsButtonGroupClasses>({\r\n    root: {},\r\n    title: { ...typographyStyles.body1 },\r\n    subtitle: { ...typographyStyles.caption1 },\r\n    dropdownPanel: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    operationButton: {\r\n      ...shorthands.margin('8px'),\r\n      ...shorthands.border(\r\n        tokens.strokeWidthThin,\r\n        'solid',\r\n        tokens.colorNeutralStroke1,\r\n      ),\r\n      minWidth: '32px',\r\n    },\r\n  });\r\n","export { OperationsButtonGroup } from './OperationsButtonGroup.root';\r\nexport { OperationsButtonGroupProps } from './OperationsButtonGroup.types';\r\n","export { OperationsTab } from './OperationsTab.root';\r\nexport { OperationsTabProps } from './OperationsTab.types';\r\n","export { ExpressionEditor } from './ExpressionEditor.root';\r\nexport { ExpressionEditorProps } from './ExpressionEditor.types';\r\n","import React from 'react';\r\nimport { FunctionEditorRenderProps } from './FunctionEditor.types';\r\nimport { Field, Input, useId } from '@fluentui/react-components';\r\nimport { strings, t } from '@do/localization';\r\nimport { FunctionType } from '@do/core';\r\nimport { IconizedDropDown, SimpleDropdown } from '@do/components';\r\n\r\nexport const enum FunctionEditorTestIds {\r\n  ArgumentInputForTypeDuration = 'arguments-duration-input',\r\n  FunctionEditorTypeDropdown = 'function-editor-type-dropdown',\r\n}\r\n\r\nexport const useFunctionEditorRender: React.FC<FunctionEditorRenderProps> = (\r\n  props,\r\n) => {\r\n  const { state } = props;\r\n  const inputId = useId('input');\r\n\r\n  return (\r\n    <>\r\n      <Field label={t(strings.insights.function_editor.type_dropdown_label)}>\r\n        <IconizedDropDown\r\n          ariaLabel={t(strings.insights.function_editor.type_dropdown_label)}\r\n          placeholder={`${t(\r\n            strings.insights.function_editor.type_dropdown_placeholder,\r\n          )}`}\r\n          setValue={(value) =>\r\n            state.setSelectedTypeOption(value as FunctionType)\r\n          }\r\n          value={state.selectedTypeOption}\r\n          items={state.typeOptions.map((option) => ({\r\n            key: `${option.category}`,\r\n            items: option.items.map((item) => ({\r\n              key: item.value,\r\n              text: item.displayName,\r\n            })),\r\n            text: option.category,\r\n          }))}\r\n          dataTestid={FunctionEditorTestIds.FunctionEditorTypeDropdown}\r\n        />\r\n      </Field>\r\n      {state.selectedTypeOption === 'Duration' && (\r\n        <Field\r\n          label={t(strings.insights.function_editor.arguments_field_label)}\r\n        >\r\n          <Input\r\n            appearance='outline'\r\n            id={inputId}\r\n            data-testid={FunctionEditorTestIds.ArgumentInputForTypeDuration}\r\n            placeholder={t(\r\n              strings.insights.function_editor.arguments_field_placeholder,\r\n            )}\r\n          />\r\n        </Field>\r\n      )}\r\n      <Field label={t(strings.insights.function_editor.source_dropdown_label)}>\r\n        <SimpleDropdown\r\n          placeholder={`${t(\r\n            strings.insights.function_editor.source_dropdown_placeholder,\r\n          )}`}\r\n          value={state.selectedSourceOption}\r\n          setValue={state.setSelectedSourceOption}\r\n          items={state.sourceOptions.map((x) => ({\r\n            key: x.key,\r\n            text: x.value,\r\n          }))}\r\n          ariaLabel={t(strings.insights.function_editor.source_dropdown_label)}\r\n        />\r\n      </Field>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { FunctionEditorProps } from './FunctionEditor.types';\r\nimport { useFunctionEditorRender } from './FunctionEditor.render';\r\nimport { useClassNames } from './FunctionEditor.styles';\r\nimport { useFunctionEditorState } from './FunctionEditor.state';\r\n\r\nconst MODULE_NAME = 'FunctionEditor';\r\n\r\nexport const FunctionEditor: React.FC<FunctionEditorProps> = (props) => {\r\n  // get state\r\n  const state = useFunctionEditorState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useFunctionEditorRender({ state, styles });\r\n};\r\n\r\nFunctionEditor.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { FunctionType, getLogger, useDebugLogging } from '@do/core';\r\nimport {\r\n  FunctionEditorProps,\r\n  FunctionEditorState,\r\n} from './FunctionEditor.types';\r\nimport { GetCalculationFormulaOptions } from '../../../../constants/CalculationElements.constants';\r\nimport { useInsightsPageContext } from '../../../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { produce } from 'immer';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'FunctionEditor.state';\r\n\r\nexport const useFunctionEditorState = (\r\n  props: FunctionEditorProps,\r\n): FunctionEditorState => {\r\n  // contexts\r\n  const {\r\n    pageState: { currentFormula },\r\n  } = useInsightsPageContext();\r\n\r\n  // state\r\n  const sourceOptions = useMemo(() => {\r\n    return (\r\n      currentFormula.elements\r\n        // any element in the graph that isn't an output property or the current element.\r\n        // TODO eventually we need to deal with cycles in the graph\r\n        .filter(\r\n          (element) =>\r\n            element.type !== 'OutputProperty' &&\r\n            element.id !== props.element.id,\r\n        )\r\n        .map((element) => {\r\n          return {\r\n            key: element.id,\r\n            value: element.displayName,\r\n          };\r\n        })\r\n    );\r\n  }, [currentFormula, props.element.id]);\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n  const onChangeType = useCallback(\r\n    (option: FunctionType) => {\r\n      props.onUpdateElement(\r\n        produce((current) => {\r\n          // should always be a function but the callback has a broader signature\r\n          if (current && current.type === 'Function') {\r\n            current.dataType = option;\r\n          }\r\n          return current;\r\n        }),\r\n      );\r\n    },\r\n    [props],\r\n  );\r\n\r\n  const setSelectedSourceOption = useCallback(\r\n    (nodeId: string) => {\r\n      props.onUpdateSource([nodeId]);\r\n    },\r\n    [props],\r\n  );\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: FunctionEditorState = useMemo(() => {\r\n    return {\r\n      selectedSourceOption: props.source,\r\n      setSelectedSourceOption,\r\n      selectedTypeOption: props.element.dataType,\r\n      setSelectedTypeOption: onChangeType,\r\n      typeOptions: GetCalculationFormulaOptions(),\r\n      sourceOptions: sourceOptions,\r\n    };\r\n  }, [\r\n    props.source,\r\n    props.element.dataType,\r\n    setSelectedSourceOption,\r\n    onChangeType,\r\n    sourceOptions,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  FunctionEditorStyles,\r\n  FunctionEditorClasses,\r\n} from './FunctionEditor.types';\r\nimport { makeStyles } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => FunctionEditorStyles =\r\n  makeStyles<FunctionEditorClasses>({\r\n    root: {},\r\n  });\r\n","export { FunctionEditor } from './FunctionEditor.root';\r\nexport { FunctionEditorProps } from './FunctionEditor.types';\r\n","import React from 'react';\r\nimport { InputEditorRenderProps } from './InputEditor.types';\r\nimport { Field, Input, useId } from '@fluentui/react-components';\r\nimport { strings } from '@do/localization';\r\nimport { t } from 'i18next';\r\n\r\nexport const enum InputEditorTabTestIds {\r\n  TwinIdInput = 'input-editor-twinName-input',\r\n  PropertyIdInput = 'input-editor-propertyName-input',\r\n}\r\n\r\nexport const useInputEditorRender: React.FC<InputEditorRenderProps> = (\r\n  props,\r\n) => {\r\n  const { state, styles } = props;\r\n  const inputId = useId('input');\r\n\r\n  return (\r\n    <>\r\n      <Field\r\n        className={styles.root}\r\n        label={t(strings.insights.input_editor.twin_picker_label)}\r\n      >\r\n        <Input\r\n          disabled\r\n          id={inputId}\r\n          value={`${state.element.twinSelector.referenceId}`}\r\n          onChange={(_ex, data) => state.twinElement(data.value)}\r\n          data-testid={InputEditorTabTestIds.TwinIdInput}\r\n          appearance='outline'\r\n        />\r\n      </Field>\r\n\r\n      <Field\r\n        className={styles.root}\r\n        label={t(strings.insights.input_editor.property_picker_label)}\r\n      >\r\n        <Input\r\n          disabled\r\n          id={inputId}\r\n          value={`${state.element.propertySelector.referenceId}`}\r\n          onChange={(_ex, data) => state.propertyElement(data.value)}\r\n          data-testid={InputEditorTabTestIds.PropertyIdInput}\r\n          appearance='outline'\r\n        />\r\n      </Field>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { InputEditorProps } from './InputEditor.types';\r\nimport { useInputEditorRender } from './InputEditor.render';\r\nimport { useClassNames } from './InputEditor.styles';\r\nimport { useInputEditorState } from './InputEditor.state';\r\n\r\nconst MODULE_NAME = 'InputEditor';\r\n\r\nexport const InputEditor: React.FC<InputEditorProps> = (props) => {\r\n  // get state\r\n  const state = useInputEditorState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useInputEditorRender({ state, styles });\r\n};\r\n\r\nInputEditor.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { InputEditorProps, InputEditorState } from './InputEditor.types';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'InputEditor.state';\r\n\r\nexport const useInputEditorState = (\r\n  props: InputEditorProps,\r\n): InputEditorState => {\r\n  // contexts\r\n\r\n  // state\r\n  const twinElement = useCallback(() => {\r\n    const twinReferenceId = props.element?.twinSelector?.referenceId;\r\n    return twinReferenceId;\r\n  }, [props]);\r\n\r\n  const propertyElement = useCallback(() => {\r\n    const propertyReferenceId = props.element?.propertySelector?.referenceId;\r\n    return propertyReferenceId;\r\n  }, [props]);\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: InputEditorState = useMemo(() => {\r\n    return {\r\n      element: props.element,\r\n      twinElement,\r\n      propertyElement,\r\n    };\r\n  }, [props.element, twinElement, propertyElement]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import { InputEditorStyles, InputEditorClasses } from './InputEditor.types';\r\nimport { makeStyles } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => InputEditorStyles =\r\n  makeStyles<InputEditorClasses>({\r\n    root: {},\r\n  });\r\n","export { InputEditor } from './InputEditor.root';\r\nexport { InputEditorProps } from './InputEditor.types';\r\n","import React from 'react';\r\nimport { OutputEditorRenderProps } from './OutputEditor.types';\r\nimport { SimpleDropdown } from '@do/components';\r\nimport { strings, t } from '@do/localization';\r\nimport { Field } from '@fluentui/react-components';\r\n\r\nexport const useOutputEditorRender: React.FC<OutputEditorRenderProps> = (\r\n  props,\r\n) => {\r\n  const { state } = props;\r\n\r\n  return (\r\n    <>\r\n      <Field label={t(strings.insights.function_editor.source_dropdown_label)}>\r\n        <SimpleDropdown\r\n          placeholder={`${t(\r\n            strings.insights.function_editor.source_dropdown_placeholder,\r\n          )}`}\r\n          value={state.selectedSourceOption}\r\n          setValue={state.setSelectedSourceOption}\r\n          items={state.sourceOptions}\r\n          ariaLabel={t(strings.insights.function_editor.source_dropdown_label)}\r\n        />\r\n      </Field>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { OutputEditorProps } from './OutputEditor.types';\r\nimport { useOutputEditorRender } from './OutputEditor.render';\r\nimport { useClassNames } from './OutputEditor.styles';\r\nimport { useOutputEditorState } from './OutputEditor.state';\r\n\r\nconst MODULE_NAME = 'OutputEditor';\r\n\r\nexport const OutputEditor: React.FC<OutputEditorProps> = (props) => {\r\n  // get state\r\n  const state = useOutputEditorState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useOutputEditorRender({ state, styles });\r\n};\r\n\r\nOutputEditor.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { OutputEditorProps, OutputEditorState } from './OutputEditor.types';\r\nimport { useInsightsPageContext } from '../../../../contexts/InsightsPageContext/InsightsPageContext';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'OutputEditor.state';\r\n\r\nexport const useOutputEditorState = (\r\n  props: OutputEditorProps,\r\n): OutputEditorState => {\r\n  // contexts\r\n  const {\r\n    pageState: { currentFormula },\r\n  } = useInsightsPageContext();\r\n\r\n  // state\r\n  const sourceOptions = useMemo(() => {\r\n    const outputIds = currentFormula.elements\r\n      .filter((element) => element.type === 'OutputProperty')\r\n      .map((element) => element.id);\r\n    return (\r\n      currentFormula.elements\r\n        // Filter out any element in the graph that isn't an output property or doesn't have an edge pointing at another node.\r\n        // TODO eventually we need to deal with cycles in the graph\r\n        .filter((element) => {\r\n          const hasOutgoingEdgeNotTargetingAnOutput = currentFormula.edges.some(\r\n            (edge) =>\r\n              // Includes the current element if it has an outgoing edge and its not pointing at an output node\r\n              edge.source === props.element.id &&\r\n              !outputIds.includes(edge.target),\r\n          );\r\n          return (\r\n            // Filter out any input property that is not a time series or any element that is not an input or output property\r\n            ((element.type === 'InputProperty' &&\r\n              element.propertySelector.propertyType === 'TimeSeries') ||\r\n              // Filter out any element that is not an input or output property (i.e functions and expressions)\r\n              (element.type !== 'InputProperty' &&\r\n                element.type !== 'OutputProperty')) &&\r\n            // Filtering out the output properties and any element that doesn't have an outgoing edge\r\n            !hasOutgoingEdgeNotTargetingAnOutput\r\n          );\r\n        })\r\n        .map((element) => {\r\n          return {\r\n            key: element.id,\r\n            text: element.displayName,\r\n          };\r\n        })\r\n    );\r\n  }, [currentFormula, props.element.id]);\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n  const setSelectedSourceOption = useCallback(\r\n    (nodeId: string) => {\r\n      props.onUpdateSource([nodeId]);\r\n    },\r\n    [props],\r\n  );\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: OutputEditorState = useMemo(() => {\r\n    return {\r\n      selectedSourceOption: props.source,\r\n      setSelectedSourceOption,\r\n      sourceOptions: sourceOptions,\r\n    };\r\n  }, [props.source, setSelectedSourceOption, sourceOptions]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import { OutputEditorStyles, OutputEditorClasses } from './OutputEditor.types';\r\nimport { makeStyles } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => OutputEditorStyles =\r\n  makeStyles<OutputEditorClasses>({\r\n    root: {},\r\n  });\r\n","export { OutputEditor } from './OutputEditor.root';\r\nexport { OutputEditorProps } from './OutputEditor.types';\r\n","export { InsightsDetailsPanel } from './InsightsDetailsPanel.root';\r\n","import React, { useCallback } from 'react';\r\nimport { InsightsHierarchyRenderProps } from './InsightsHierarchy.types';\r\nimport {\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  MenuList,\r\n  MenuPopover,\r\n  MenuTrigger,\r\n} from '@fluentui/react-components';\r\nimport { HierarchyTree, TreeItemType } from '@do/components';\r\nimport { strings, t } from '@do/localization';\r\nimport { MoreHorizontal24Filled } from '@fluentui/react-icons';\r\nimport { HierarchyNode } from '@do/core';\r\n\r\nexport enum TestIds {\r\n  BuildNewFormulaForThisTwin = 'insights-ribbon-build-new-formula-for-this-twin',\r\n  BuildNewFormulaForTwinModel = 'insights-ribbon-build-new-formula-for-twin-model',\r\n}\r\n\r\nexport const useInsightsHierarchyRender: React.FC<\r\n  InsightsHierarchyRenderProps\r\n> = ({ state, styles }) => {\r\n  const customItemLayout = useCallback(\r\n    (item: HierarchyNode, itemType: TreeItemType) => {\r\n      return (\r\n        <div className={styles.buttonRow}>\r\n          <div\r\n            className={styles.leafLabel}\r\n            onClick={() => state.onNodeSelect(item, itemType)}\r\n          >\r\n            {item.displayName || item.path}\r\n          </div>\r\n          {itemType !== 'leaf' ? null : (\r\n            <Menu>\r\n              <MenuTrigger>\r\n                <Button\r\n                  appearance='transparent'\r\n                  iconPosition='after'\r\n                  icon={<MoreHorizontal24Filled />}\r\n                />\r\n              </MenuTrigger>\r\n              <MenuPopover>\r\n                <MenuList>\r\n                  <MenuItem\r\n                    onClick={() => state.onNewFormula(item)}\r\n                    data-testid={TestIds.BuildNewFormulaForThisTwin}\r\n                  >\r\n                    {t(\r\n                      strings.insights.ribbon.button_titles\r\n                        .build_new_formula_for_this_twin,\r\n                    )}\r\n                  </MenuItem>\r\n                  {/* Scoped out of Private Preview features */}\r\n                  {/* <MenuItem\r\n                    onClick={state.onNewFormula}\r\n                    data-testid={TestIds.BuildNewFormulaForTwinModel}\r\n                  >\r\n                    {t(\r\n                      strings.insights.ribbon.button_titles\r\n                        .build_new_formula_for_twin_model,\r\n                    )}\r\n                  </MenuItem> */}\r\n                </MenuList>\r\n              </MenuPopover>\r\n            </Menu>\r\n          )}\r\n        </div>\r\n      );\r\n    },\r\n    [state, styles],\r\n  );\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.hierarchyLabel}>\r\n        {t(strings.insights.left_panel_tray.twins_tab_title)}\r\n      </div>\r\n      <HierarchyTree\r\n        onHierarchyItemClick={state.onNodeSelect}\r\n        customItemLayout={customItemLayout}\r\n        selectedTwinId={state.selectedTwinId}\r\n        treeItemClassName={styles.treeItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useInsightsHierarchyRender } from './InsightsHierarchy.render';\r\nimport { useClassNames } from './InsightsHierarchy.styles';\r\nimport { useInsightsHierarchyState } from './InsightsHierarchy.state';\r\n\r\nconst MODULE_NAME = 'InsightsHierarchy';\r\n\r\nexport const InsightsHierarchy: React.FC = () => {\r\n  // get state\r\n  const state = useInsightsHierarchyState();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useInsightsHierarchyRender({ state, styles });\r\n};\r\n\r\nInsightsHierarchy.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { HierarchyNode, getLogger, useDebugLogging } from '@do/core';\r\nimport { InsightsHierarchyState } from './InsightsHierarchy.types';\r\nimport { useInsightsPageContext } from '../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContextActionType } from '../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { useCalculationClient } from '@do/core/hooks/useCalculationClient';\r\nimport { getAllFormulas } from './InsightsHierarchy.utils';\r\nimport { TreeItemType } from '@do/components';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'InsightsHierarchy.state';\r\n\r\nexport const useInsightsHierarchyState = (): InsightsHierarchyState => {\r\n  // contexts\r\n  const { pageState, pageDispatch } = useInsightsPageContext();\r\n\r\n  // state\r\n  const client = useCalculationClient();\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n\r\n  const onNodeSelect = useCallback(\r\n    async (node: HierarchyNode, hierarchyItemType: TreeItemType) => {\r\n      debugLogging && getLogger().debug(MODULE_NAME, 'onTwinSelect. {twinId}');\r\n      // only leaf nodes will have formula lists\r\n      if (hierarchyItemType !== 'leaf' || !node.twin) {\r\n        return;\r\n      }\r\n\r\n      const twin = node.twin;\r\n\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.FORMULA_LIST_LOADING,\r\n        payload: {\r\n          twinId: twin.twinId,\r\n        },\r\n      });\r\n\r\n      const response = await getAllFormulas(client, twin.twinId);\r\n\r\n      if ('errorCode' in response) {\r\n        getLogger().error(MODULE_NAME, response.errorMessage);\r\n      } else {\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.FORMULA_LIST_LOADED,\r\n          payload: { data: response },\r\n        });\r\n\r\n        if (response.length === 0) {\r\n          pageDispatch({\r\n            type: InsightsPageContextActionType.NAVIGATE_TO_EMPTY_STATE,\r\n            payload: {\r\n              twinId: twin.twinId,\r\n            },\r\n          });\r\n        } else {\r\n          pageDispatch({\r\n            type: InsightsPageContextActionType.NAVIGATE_TO_LIST,\r\n            payload: {\r\n              twinId: twin.twinId,\r\n              twinDisplayName: twin.displayName ?? twin.twinId,\r\n            },\r\n          });\r\n        }\r\n      }\r\n    },\r\n    [debugLogging, pageDispatch, client],\r\n  );\r\n\r\n  const onNewFormula = useCallback(\r\n    async (node: HierarchyNode) => {\r\n      const twinId = node.twin?.twinId;\r\n      if (!twinId) return;\r\n\r\n      // if the twinId is the same as the selectedTwinId, then the formula list is already loaded\r\n      if (twinId === pageState.selectedTwinId) {\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.NAVIGATE_TO_BUILDER,\r\n          payload: {\r\n            formulaId: undefined,\r\n            twinId: twinId,\r\n            twinDisplayName: node.displayName,\r\n          },\r\n        });\r\n        return;\r\n      }\r\n\r\n      const selectedTwinId = twinId;\r\n\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.FORMULA_LIST_LOADING,\r\n        payload: {\r\n          twinId: selectedTwinId,\r\n        },\r\n      });\r\n\r\n      const response = await getAllFormulas(client, selectedTwinId);\r\n\r\n      if ('errorCode' in response) {\r\n        getLogger().error(MODULE_NAME, response.errorMessage);\r\n      } else {\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.FORMULA_LIST_LOADED,\r\n          payload: { data: response },\r\n        });\r\n\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.NAVIGATE_TO_BUILDER,\r\n          payload: {\r\n            formulaId: undefined,\r\n            twinId: selectedTwinId,\r\n            twinDisplayName: node.displayName,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    [client, pageDispatch, pageState.selectedTwinId],\r\n  );\r\n\r\n  // result\r\n  const state: InsightsHierarchyState = useMemo(() => {\r\n    return {\r\n      selectedTwinId: pageState.selectedTwinId,\r\n      onNodeSelect,\r\n      onNewFormula,\r\n    };\r\n  }, [pageState.selectedTwinId, onNodeSelect, onNewFormula]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  InsightsHierarchyStyles,\r\n  InsightsHierarchyClasses,\r\n} from './InsightsHierarchy.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => InsightsHierarchyStyles =\r\n  makeStyles<InsightsHierarchyClasses>({\r\n    root: {\r\n      marginRight: '8px',\r\n    },\r\n    hierarchyLabel: {\r\n      ...shorthands.margin('8'),\r\n      fontWeight: tokens.fontWeightSemibold,\r\n      fontSize: tokens.fontSizeBase400,\r\n    },\r\n    treeItem: {\r\n      ...shorthands.borderRadius(tokens.borderRadiusMedium),\r\n    },\r\n    buttonRow: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      width: '175px',\r\n    },\r\n    leafLabel: {\r\n      flexGrow: 1,\r\n    },\r\n  });\r\n","import {\r\n  CalculationClientType,\r\n  ErrorDataResponse,\r\n  FormulaListResult,\r\n  GetFormulasByTwinIdResponse,\r\n} from '@do/core';\r\nimport {\r\n  CalculationFeature,\r\n  FormulaManagementActivity,\r\n} from '../../models/CalculationCertifiedEvents';\r\n\r\nexport async function getAllFormulas(\r\n  client: CalculationClientType | undefined,\r\n  twinId: string,\r\n): Promise<FormulaListResult | ErrorDataResponse> {\r\n  let continuationToken: string | undefined = undefined;\r\n  let allFormulas: FormulaListResult = [];\r\n\r\n  // eslint-disable-next-line no-constant-condition\r\n  while (true) {\r\n    if (client) {\r\n      const calculationJobListTelemetry = {\r\n        featureName: CalculationFeature.JobCreate,\r\n        activityName: FormulaManagementActivity.CalculatedPropertiesListed,\r\n      };\r\n      const response: GetFormulasByTwinIdResponse =\r\n        await client.getFormulasByTwinId(\r\n          calculationJobListTelemetry,\r\n          twinId,\r\n          continuationToken,\r\n        );\r\n      if (response.state === 'error') {\r\n        return {\r\n          state: 'error',\r\n          errorCode: response.errorCode,\r\n          errorMessage: `Failed to get formulas: ${response.errorMessage}`,\r\n        };\r\n      }\r\n\r\n      allFormulas = allFormulas.concat(response.data.data);\r\n\r\n      if (!response.data.continuationToken) {\r\n        break;\r\n      }\r\n\r\n      continuationToken = response.data.continuationToken;\r\n    }\r\n  }\r\n\r\n  return allFormulas;\r\n}\r\n","export { InsightsHierarchy } from './InsightsHierarchy.root';\r\n","import React from 'react';\r\nimport { t, strings } from '@do/localization';\r\nimport {\r\n  ToolbarButton,\r\n  //ToolbarDivider,\r\n  Menu,\r\n  MenuTrigger,\r\n  MenuPopover,\r\n  ToolbarGroup,\r\n  Tooltip,\r\n} from '@fluentui/react-components';\r\nimport {\r\n  //ArrowLeft24Regular,\r\n  Calculator24Regular,\r\n  Cube24Filled,\r\n  Cube24Regular,\r\n  //PlayCircle24Regular,\r\n  Save24Regular,\r\n  ChevronDown16Regular,\r\n  bundleIcon,\r\n  //PauseCircle24Regular,\r\n  ShiftsActivity24Filled,\r\n  Delete24Regular,\r\n} from '@fluentui/react-icons';\r\nimport { IInsightsRibbonRenderProps } from './InsightsRibbon.types';\r\nimport { ElementPickerRootMenu } from '../ElementPickers/ElementPickerRootMenu';\r\nimport { ScheduleDrawer } from './components/ScheduleDrawer';\r\nimport { SaveFormulaPanel } from './components/SaveFormulaPanel';\r\n\r\nexport const enum InsightsRibbonTestIds {\r\n  Root = 'insights-ribbon-root',\r\n  BackButton = 'insights-ribbon-back-button',\r\n  CreateFormulaButton = 'insights-ribbon-create-formula-button',\r\n  BuildNewFormulaForThisTwin = 'insights-ribbon-build-new-formula-for-this-twin',\r\n  BuildNewFormulaForTwinModel = 'insights-ribbon-build-new-formula-for-twin-model',\r\n  AddElementMenuRoot = 'insights-ribbon-add-element-menu-root',\r\n  AddElementInputButton = 'insights-ribbon-add-element-input-button',\r\n  AddElementExpressionButton = 'insights-ribbon-add-element-expression-button',\r\n  AddElementFunctionButton = 'insights-ribbon-add-element-function-button',\r\n  AddElementOutputButton = 'insights-ribbon-add-element-output-button',\r\n  RunPreviewButton = 'insights-ribbon-run-preview-button',\r\n  SaveFormulaButton = 'insights-ribbon-save-formula-button',\r\n  RunFormulaButton = 'insights-ribbon-run-formula-button',\r\n  PauseFormulaButton = 'insights-ribbon-pause-formula-button',\r\n  EditScheduleButton = 'insights-ribbon-edit-schedule-button',\r\n  DeleteFormulaButton = 'insights-ribbon-delete-formula-button',\r\n}\r\n\r\nexport const useInsightsRibbonRender: React.FC<IInsightsRibbonRenderProps> = (\r\n  props,\r\n) => {\r\n  const { state, styles } = props;\r\n\r\n  const AddElementIcons = bundleIcon(Cube24Filled, Cube24Regular);\r\n  // Define the booleans based on the current page\r\n  const isListPage = state.page === 'list';\r\n  const isBuilderPage = state.page === 'builder';\r\n\r\n  const saveButton = (\r\n    <ToolbarButton\r\n      icon={<Save24Regular />}\r\n      disabled={state.saveDisabled}\r\n      data-testid={InsightsRibbonTestIds.SaveFormulaButton}\r\n      onClick={() => state.setSaveFormulaPanelOpen(true)}\r\n    >\r\n      {t(strings.insights.ribbon.button_titles.save_formula)}\r\n    </ToolbarButton>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ToolbarGroup\r\n        data-testid={InsightsRibbonTestIds.Root}\r\n        className={styles.buttonGroup}\r\n      >\r\n        {/* <ToolbarButton\r\n          icon={<ArrowLeft24Regular />}\r\n          data-testid={InsightsRibbonTestIds.BackButton}\r\n        >\r\n          {t(strings.insights.ribbon.button_titles.back_to_insights)}\r\n        </ToolbarButton>\r\n        <ToolbarDivider /> */}\r\n        <ToolbarButton\r\n          data-testid={InsightsRibbonTestIds.CreateFormulaButton}\r\n          disabled={state.isNewFormulaDisabled}\r\n          icon={<Calculator24Regular />}\r\n          onClick={state.onNewFormula}\r\n        >\r\n          {t(\r\n            strings.insights.ribbon.button_titles\r\n              .build_new_formula_for_this_twin,\r\n          )}\r\n        </ToolbarButton>\r\n        {isBuilderPage && (\r\n          <Menu>\r\n            <MenuTrigger>\r\n              <ToolbarButton\r\n                className={styles.button}\r\n                icon={<AddElementIcons />}\r\n                data-testid={InsightsRibbonTestIds.AddElementMenuRoot}\r\n              >\r\n                {t(strings.insights.ribbon.button_titles.add_element)}\r\n                <ChevronDown16Regular />\r\n              </ToolbarButton>\r\n            </MenuTrigger>\r\n            <MenuPopover>\r\n              <ElementPickerRootMenu />\r\n            </MenuPopover>\r\n          </Menu>\r\n        )}\r\n\r\n        {/* {isBuilderPage && (\r\n          <ToolbarButton\r\n            icon={<PlayCircle24Regular />}\r\n            disabled={state.playPreviewDisabled}\r\n            data-testid={InsightsRibbonTestIds.RunPreviewButton}\r\n          >\r\n            {t(strings.insights.ribbon.button_titles.run_data_preview)}\r\n          </ToolbarButton>\r\n        )} */}\r\n\r\n        {isBuilderPage &&\r\n          (state.saveButtonTooltipMessage ? (\r\n            <Tooltip\r\n              content={state.saveButtonTooltipMessage}\r\n              relationship={'description'}\r\n              withArrow={true}\r\n              positioning={'below'}\r\n            >\r\n              {saveButton}\r\n            </Tooltip>\r\n          ) : (\r\n            saveButton\r\n          ))}\r\n\r\n        {isListPage && (\r\n          <ToolbarButton\r\n            icon={<Delete24Regular />}\r\n            disabled={state.deleteDisabled}\r\n            data-testid={InsightsRibbonTestIds.DeleteFormulaButton}\r\n            onClick={state.onDelete}\r\n          >\r\n            {t(strings.common.delete)}\r\n          </ToolbarButton>\r\n        )}\r\n\r\n        {/* {isListPage && (\r\n          <ToolbarButton\r\n            icon={<PauseCircle24Regular />}\r\n            disabled={state.saveDisabled}\r\n            data-testid={InsightsRibbonTestIds.PauseFormulaButton}\r\n          >\r\n            {t(strings.insights.ribbon.button_titles.pause_formula)}\r\n          </ToolbarButton>\r\n        )}\r\n\r\n        {isListPage && (\r\n          <ToolbarButton\r\n            icon={<PlayCircle24Regular />}\r\n            disabled={state.saveDisabled}\r\n            data-testid={InsightsRibbonTestIds.RunFormulaButton}\r\n          >\r\n            {t(strings.insights.ribbon.button_titles.run_formula)}\r\n          </ToolbarButton>\r\n        )} */}\r\n\r\n        {isListPage && (\r\n          <ToolbarButton\r\n            icon={<ShiftsActivity24Filled />}\r\n            disabled={state.editScheduleDisabled}\r\n            data-testid={InsightsRibbonTestIds.EditScheduleButton}\r\n            onClick={() => state.setSchedulePanelOpen(true)}\r\n          >\r\n            {t(strings.insights.ribbon.button_titles.edit_schedule)}\r\n          </ToolbarButton>\r\n        )}\r\n      </ToolbarGroup>\r\n      <ScheduleDrawer\r\n        open={state.schedulePanelOpen}\r\n        setOpen={state.setSchedulePanelOpen}\r\n      />\r\n      <SaveFormulaPanel\r\n        open={state.saveFormulaPanelOpen}\r\n        setOpen={state.setSaveFormulaPanelOpen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { IInsightsRibbonProps } from './InsightsRibbon.types';\r\nimport { useInsightsRibbonRender } from './InsightsRibbon.render';\r\nimport { useClassNames } from './InsightsRibbon.styles';\r\nimport { useInsightsRibbonState } from './InsightsRibbon.state';\r\n\r\nconst MODULE_NAME = 'InsightsRibbon';\r\n\r\nexport const InsightsRibbon: React.FC<IInsightsRibbonProps> = (props) => {\r\n  // get state\r\n  const state = useInsightsRibbonState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useInsightsRibbonRender({ state, styles });\r\n};\r\n\r\nInsightsRibbon.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo, useState } from 'react';\r\nimport { getLogger, useCalculationClient, useDebugLogging } from '@do/core';\r\nimport { t, strings } from '@do/localization';\r\nimport {\r\n  FormulaBuilderError,\r\n  IInsightsRibbonProps,\r\n  IInsightsRibbonState,\r\n} from './InsightsRibbon.types';\r\nimport { useInsightsPageContext } from '../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContextActionType } from '../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { getAllFormulas } from '../InsightsHierarchy/InsightsHierarchy.utils';\r\nimport { validateFormula } from './InsightsRibbon.utils';\r\nimport {\r\n  CalculationFeature,\r\n  FormulaManagementActivity,\r\n} from '../../models/CalculationCertifiedEvents';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'InsightsRibbon.state';\r\n\r\nexport const useInsightsRibbonState = (\r\n  _props: IInsightsRibbonProps,\r\n): IInsightsRibbonState => {\r\n  // contexts\r\n  const { pageState, pageDispatch } = useInsightsPageContext();\r\n\r\n  // state\r\n  const [schedulePanelOpen, setSchedulePanelOpen] = useState(false);\r\n  const [saveFormulaPanelOpen, setSaveFormulaPanelOpen] = useState(false);\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n  const calculationClient = useCalculationClient();\r\n\r\n  // callbacks\r\n  const onNewFormula = useCallback(() => {\r\n    getLogger().info(MODULE_NAME, 'New formula');\r\n    if (pageState.selectedTwinId) {\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.NAVIGATE_TO_BUILDER,\r\n        payload: {\r\n          formulaId: undefined,\r\n          twinId: pageState.selectedTwinId,\r\n          twinDisplayName:\r\n            pageState.selectedTwinDisplayName || pageState.selectedTwinId || '',\r\n        },\r\n      });\r\n    }\r\n  }, [\r\n    pageDispatch,\r\n    pageState.selectedTwinDisplayName,\r\n    pageState.selectedTwinId,\r\n  ]);\r\n\r\n  const onDelete = useCallback(async () => {\r\n    getLogger().info(MODULE_NAME, 'Deleting formula');\r\n    if (!calculationClient) {\r\n      getLogger().error(MODULE_NAME, 'Calculation client not initialized');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      pageState.selectedTwinId &&\r\n      pageState.selectedFormulaId &&\r\n      pageState.currentFormula\r\n    ) {\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.FORMULA_LIST_LOADING,\r\n        payload: {\r\n          twinId: pageState.selectedTwinId,\r\n        },\r\n      });\r\n\r\n      const jobDeleteTelemetry = {\r\n        featureName: CalculationFeature.JobCreate,\r\n        activityName: FormulaManagementActivity.FormulaDeleteCalled,\r\n      };\r\n\r\n      const result = await calculationClient.deleteFormula(\r\n        //TODO: Await will trigger a delay, need to disable interactions until the delete is complete; MAY NOT BE NEEDED IF LOADING SCREEN IS IMPLEMENTED\r\n        jobDeleteTelemetry,\r\n        pageState.selectedTwinId,\r\n        pageState.currentFormula.id,\r\n      );\r\n\r\n      if (result && result.state === 'error') {\r\n        getLogger().error(MODULE_NAME, result.errorMessage);\r\n      } else if (result && result.state === 'success') {\r\n        //TODO: Remove formula from formula list in context instead of fetching all formulas again\r\n        const response = await getAllFormulas(\r\n          calculationClient,\r\n          pageState.selectedTwinId,\r\n        );\r\n\r\n        if ('errorCode' in response) {\r\n          getLogger().error(MODULE_NAME, response.errorMessage);\r\n        } else {\r\n          pageDispatch({\r\n            type: InsightsPageContextActionType.FORMULA_LIST_LOADED,\r\n            payload: { data: response },\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    pageState.currentFormula,\r\n    pageState.selectedFormulaId,\r\n    pageState.selectedTwinId,\r\n    calculationClient,\r\n    pageDispatch,\r\n  ]);\r\n\r\n  const localizedFormulaValidationMessage = useMemo(() => {\r\n    if (!pageState.currentFormula) {\r\n      return undefined;\r\n    }\r\n    const formulaValidationType = validateFormula(\r\n      pageState.currentFormula.elements,\r\n      pageState.currentFormula.edges,\r\n    );\r\n    switch (formulaValidationType) {\r\n      case FormulaBuilderError.EmptyFormula:\r\n        return t(strings.insights.ribbon.validation_messages.empty_formula);\r\n      case FormulaBuilderError.DanglingElements:\r\n        return t(strings.insights.ribbon.validation_messages.dangling_elements);\r\n      case FormulaBuilderError.OutputElementMissing:\r\n        return t(\r\n          strings.insights.ribbon.validation_messages.output_element_missing,\r\n        );\r\n      case FormulaBuilderError.InvalidElements:\r\n        return t(strings.insights.ribbon.validation_messages.invalid_elements);\r\n      default:\r\n        return undefined;\r\n    }\r\n  }, [pageState.currentFormula]);\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: IInsightsRibbonState = useMemo(() => {\r\n    return {\r\n      page: pageState.page,\r\n      saveDisabled: localizedFormulaValidationMessage !== undefined,\r\n      saveButtonTooltipMessage: localizedFormulaValidationMessage,\r\n      deleteDisabled: !(\r\n        pageState.selectedTwinId &&\r\n        pageState.selectedFormulaId &&\r\n        pageState.currentFormula\r\n      ),\r\n      editScheduleDisabled: !pageState.selectedFormulaId,\r\n      schedulePanelOpen,\r\n      setSchedulePanelOpen,\r\n      isNewFormulaDisabled: !pageState.selectedTwinId,\r\n      onNewFormula: onNewFormula,\r\n      saveFormulaPanelOpen,\r\n      setSaveFormulaPanelOpen,\r\n      onDelete,\r\n    };\r\n  }, [\r\n    pageState.page,\r\n    pageState.selectedTwinId,\r\n    pageState.selectedFormulaId,\r\n    pageState.currentFormula,\r\n    localizedFormulaValidationMessage,\r\n    schedulePanelOpen,\r\n    onNewFormula,\r\n    saveFormulaPanelOpen,\r\n    onDelete,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  IInsightsRibbonStyles,\r\n  InsightsRibbonClasses,\r\n} from './InsightsRibbon.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IInsightsRibbonStyles =\r\n  makeStyles<InsightsRibbonClasses>({\r\n    root: {\r\n      backgroundColor: tokens.colorNeutralBackground1,\r\n      ...shorthands.borderRadius(tokens.borderRadiusXLarge),\r\n      boxShadow: tokens.shadow4,\r\n      ...shorthands.margin('8px'),\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      display: 'flex',\r\n      ...shorthands.gap('4px'),\r\n    },\r\n    buttonGroup: {\r\n      display: 'flex',\r\n    },\r\n    listIcons: {\r\n      display: 'flex',\r\n    },\r\n  });\r\n","/** input parameters to InsightsRibbon */\r\n\r\nimport { InsightsPages } from '../../pages';\r\n\r\nexport enum FormulaBuilderError {\r\n  EmptyFormula = 'Empty formula',\r\n  DanglingElements = 'Dangling elements',\r\n  OutputElementMissing = 'Output element missing',\r\n  InvalidElements = 'Invalid elements',\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface IInsightsRibbonProps {}\r\n\r\n/** state values used for rendering the item */\r\nexport type IInsightsRibbonState = {\r\n  page: InsightsPages;\r\n  //playPreviewDisabled: boolean;\r\n  saveDisabled: boolean;\r\n  deleteDisabled: boolean;\r\n  saveButtonTooltipMessage?: string;\r\n  onNewFormula: () => void;\r\n  isNewFormulaDisabled: boolean;\r\n  onDelete: () => void;\r\n  editScheduleDisabled: boolean;\r\n  schedulePanelOpen: boolean;\r\n  setSchedulePanelOpen: (value: boolean) => void;\r\n  saveFormulaPanelOpen: boolean;\r\n  setSaveFormulaPanelOpen: (value: boolean) => void;\r\n};\r\n\r\n/** the props send to the render function */\r\nexport type IInsightsRibbonRenderProps = {\r\n  state: IInsightsRibbonState;\r\n  styles: IInsightsRibbonStyles;\r\n};\r\n\r\n/** the names of styling classes for InsightsRibbon */\r\nexport type InsightsRibbonClasses =\r\n  | 'root'\r\n  | 'button'\r\n  | 'buttonGroup'\r\n  | 'listIcons';\r\n/** the computed styles object output from the styles hook */\r\nexport type IInsightsRibbonStyles = Record<InsightsRibbonClasses, string>;\r\n","import { FormulaElement, FormulaRelationship } from '@do/core';\r\nimport { FormulaBuilderError } from './InsightsRibbon.types';\r\n\r\n/**\r\n * Runs all validation checks on the formula\r\n * @param elements\r\n * @param edges\r\n * @returns FormulaBuilderError if a validation error is found, otherwise undefined\r\n */\r\nexport function validateFormula(\r\n  elements: FormulaElement[],\r\n  edges: FormulaRelationship[],\r\n): FormulaBuilderError | undefined {\r\n  if (isEmptyFormula(elements)) {\r\n    return FormulaBuilderError.EmptyFormula;\r\n  }\r\n  if (findDanglingElements(elements, edges).length > 0) {\r\n    return FormulaBuilderError.DanglingElements;\r\n  }\r\n  if (!doesOutputElementExist(elements)) {\r\n    return FormulaBuilderError.OutputElementMissing;\r\n  }\r\n  if (!allElementsAreValid(elements)) {\r\n    return FormulaBuilderError.InvalidElements;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Find elements that are not connected to any edge\r\n * @param elements\r\n * @param edges\r\n * @returns Array of elements that are not connected to any edge\r\n */\r\nexport function findDanglingElements(\r\n  elements: FormulaElement[],\r\n  edges: FormulaRelationship[],\r\n): FormulaElement[] {\r\n  const allIds: Set<string> = new Set();\r\n\r\n  // Collect all unique IDs from source and target in edges\r\n  edges.forEach((edge) => {\r\n    allIds.add(edge.source);\r\n    allIds.add(edge.target);\r\n  });\r\n\r\n  // Filter elements that are not in the collected IDs\r\n  const danglingElements = elements.filter(\r\n    (element) => !allIds.has(element.id),\r\n  );\r\n\r\n  return danglingElements;\r\n}\r\n\r\n/**\r\n * Check if output element exists in the formula\r\n * @param elements\r\n * @returns True if output element exists, otherwise false\r\n */\r\nexport function doesOutputElementExist(elements: FormulaElement[]): boolean {\r\n  return elements.some((element) => element.type === 'OutputProperty');\r\n}\r\n\r\n/**\r\n * Check if formula is empty\r\n * @param elements\r\n * @returns True if formula is empty, otherwise false\r\n */\r\nexport function isEmptyFormula(elements: FormulaElement[]): boolean {\r\n  return elements.length === 0;\r\n}\r\n\r\n/**\r\n * Check if all elements are free of errorMessages\r\n * @param elements\r\n * @returns True if all elements have no errorMessages, otherwise false\r\n */\r\nexport function allElementsAreValid(elements: FormulaElement[]): boolean {\r\n  return elements.every(\r\n    (element) =>\r\n      !element.errorMessages || Object.keys(element.errorMessages).length === 0,\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { SaveFormulaPanelRenderProps } from './SaveFormulaPanel.types';\r\nimport {\r\n  Drawer,\r\n  DrawerHeaderTitle,\r\n  DrawerHeader,\r\n  DrawerBody,\r\n  Input,\r\n  DrawerFooter,\r\n  Button,\r\n  Field,\r\n  MessageBar,\r\n  MessageBarBody,\r\n} from '@fluentui/react-components';\r\nimport { t, strings } from '@do/localization';\r\nimport { Dismiss24Regular } from '@fluentui/react-icons';\r\n\r\nexport const enum SaveFormulaPanelTestIds {\r\n  NameBox = 'save-formula-panel-name-box',\r\n  ErrorBanner = 'save-formula-panel-error-banner',\r\n}\r\n\r\nexport const useSaveFormulaPanelRender: React.FC<\r\n  SaveFormulaPanelRenderProps\r\n> = (props) => {\r\n  const { state, styles } = props;\r\n  return (\r\n    <Drawer\r\n      position={'end'}\r\n      open={state.open}\r\n      size={'small'}\r\n      modalType={'alert'}\r\n      className={styles.drawerBody}\r\n    >\r\n      <DrawerHeader>\r\n        <DrawerHeaderTitle\r\n          action={\r\n            <Button\r\n              appearance='subtle'\r\n              aria-label='Close'\r\n              icon={<Dismiss24Regular />}\r\n              onClick={() => state.onCancel()}\r\n            />\r\n          }\r\n        >\r\n          {t(strings.insights.save_formula_panel.title)}\r\n        </DrawerHeaderTitle>\r\n      </DrawerHeader>\r\n      <DrawerBody>\r\n        <div className={styles.messageBarGroup}>\r\n          {state.saveFormulaPanelErrorBanner && (\r\n            <MessageBar\r\n              intent='error'\r\n              data-testid={SaveFormulaPanelTestIds.ErrorBanner}\r\n            >\r\n              <MessageBarBody>\r\n                {state.saveFormulaPanelErrorBanner.errorMessage}{' '}\r\n              </MessageBarBody>\r\n            </MessageBar>\r\n          )}\r\n        </div>\r\n        <Field\r\n          className={styles.text}\r\n          required\r\n          label={t(strings.common.name)}\r\n          validationMessage={state.nameValidationMessage}\r\n        >\r\n          <Input\r\n            placeholder={t(\r\n              strings.insights.save_formula_panel.formula_name_placeholder,\r\n            )}\r\n            value={state.formulaName}\r\n            onChange={(_ev, value) => state.setFormulaName(value.value)}\r\n            onBlur={(_e) => {\r\n              state.validateNameInput();\r\n            }}\r\n            data-testid={SaveFormulaPanelTestIds.NameBox}\r\n          />\r\n        </Field>\r\n      </DrawerBody>\r\n      <DrawerFooter>\r\n        <Button\r\n          appearance='primary'\r\n          onClick={state.onSave}\r\n          aria-label='Save'\r\n          disabled={state.isSaveDisabled}\r\n        >\r\n          {t(strings.common.save)}\r\n        </Button>\r\n        <Button onClick={state.onCancel} aria-label='Cancel'>\r\n          {t(strings.common.cancel)}\r\n        </Button>\r\n      </DrawerFooter>\r\n    </Drawer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { SaveFormulaPanelProps } from './SaveFormulaPanel.types';\r\nimport { useSaveFormulaPanelRender } from './SaveFormulaPanel.render';\r\nimport { useClassNames } from './SaveFormulaPanel.styles';\r\nimport { useSaveFormulaPanelState } from './SaveFormulaPanel.state';\r\n\r\nconst MODULE_NAME = 'SaveFormulaPanel';\r\n\r\nexport const SaveFormulaPanel: React.FC<SaveFormulaPanelProps> = (props) => {\r\n  // get state\r\n  const state = useSaveFormulaPanelState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useSaveFormulaPanelRender({ state, styles });\r\n};\r\n\r\nSaveFormulaPanel.displayName = MODULE_NAME;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport {\r\n  NotificationType,\r\n  getLogger,\r\n  useCalculationClient,\r\n  useDebugLogging,\r\n  useExtensionClient,\r\n} from '@do/core';\r\nimport {\r\n  SaveFormulaPanelErrorBanner,\r\n  SaveFormulaPanelProps,\r\n  SaveFormulaPanelState,\r\n} from './SaveFormulaPanel.types';\r\nimport { getAllFormulas } from '../../../InsightsHierarchy/InsightsHierarchy.utils';\r\nimport { useInsightsPageContext } from '../../../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContextActionType } from '../../../../contexts/InsightsPageContext/InsightsPageContext.types';\r\nimport { produce } from 'immer';\r\nimport { t, strings } from '@do/localization';\r\nimport {\r\n  CalculationFeature,\r\n  JobCreateActivity,\r\n} from '../../../../models/CalculationCertifiedEvents';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'SaveFormulaPanel.state';\r\n\r\nexport const useSaveFormulaPanelState = (\r\n  props: SaveFormulaPanelProps,\r\n): SaveFormulaPanelState => {\r\n  const existingFormulaNameMessage = t(\r\n    strings.insights.save_formula_panel.existing_formula_name_error,\r\n  );\r\n  const noEmptyNameMessage = t(\r\n    strings.insights.save_formula_panel.formula_name_empty_error,\r\n  );\r\n\r\n  // contexts\r\n  const { pageState, pageDispatch } = useInsightsPageContext();\r\n\r\n  // state\r\n  const [formulaName, setFormulaName] = useState('');\r\n  const [nameValidationMessage, setNameValidationMessage] = useState<\r\n    string | undefined\r\n  >(undefined);\r\n  const [saveFormulaPanelErrorBanner, setSaveFormulaPanelErrorBanner] =\r\n    useState<SaveFormulaPanelErrorBanner | undefined>(undefined);\r\n  const [isSaveDisabled, setIsSaveDisabled] = useState(false);\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n  const calculationClient = useCalculationClient();\r\n  const extensionClient = useExtensionClient();\r\n\r\n  // callbacks\r\n  const validateNameInput = useCallback(() => {\r\n    // Check if the name input is the same as the current formula name\r\n    if (pageState.currentFormula.displayName === formulaName) {\r\n      setNameValidationMessage(undefined);\r\n    }\r\n\r\n    // Check if the name input is empty\r\n    else if (formulaName === '') {\r\n      setNameValidationMessage(noEmptyNameMessage);\r\n    }\r\n\r\n    // Check if the name input is the same as an existing formula name\r\n    else if (\r\n      pageState.formulaList.state === 'success' &&\r\n      pageState.formulaList.data.some((f) => f.displayName === formulaName)\r\n    ) {\r\n      setNameValidationMessage(existingFormulaNameMessage);\r\n    } else {\r\n      setNameValidationMessage(undefined);\r\n    }\r\n  }, [\r\n    existingFormulaNameMessage,\r\n    formulaName,\r\n    noEmptyNameMessage,\r\n    pageState.currentFormula,\r\n    pageState.formulaList,\r\n  ]);\r\n\r\n  const handleSuccess = useCallback(\r\n    async (twinId: string | undefined) => {\r\n      if (!twinId) return;\r\n\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.FORMULA_LIST_LOADING,\r\n        payload: {\r\n          twinId: twinId,\r\n        },\r\n      });\r\n\r\n      pageDispatch({\r\n        type: InsightsPageContextActionType.NAVIGATE_TO_LIST,\r\n        payload: {\r\n          twinId: twinId,\r\n          twinDisplayName: pageState.selectedTwinDisplayName || twinId,\r\n        },\r\n      });\r\n\r\n      const response = await getAllFormulas(calculationClient, twinId);\r\n\r\n      if ('errorCode' in response) {\r\n        getLogger().error(MODULE_NAME, response.errorMessage);\r\n      } else {\r\n        pageDispatch({\r\n          type: InsightsPageContextActionType.FORMULA_LIST_LOADED,\r\n          payload: { data: response },\r\n        });\r\n      }\r\n    },\r\n    [pageDispatch, pageState.selectedTwinDisplayName, calculationClient],\r\n  );\r\n\r\n  const onSave = useCallback(async () => {\r\n    getLogger().info(MODULE_NAME, 'Saving formula');\r\n\r\n    // Don't save if the name is invalid\r\n    if (nameValidationMessage) {\r\n      return;\r\n    }\r\n\r\n    // disable save button while saving\r\n    setIsSaveDisabled(true);\r\n\r\n    // Update formula name in current\r\n    const newFormula = produce(pageState.currentFormula, (draft) => {\r\n      draft.displayName = formulaName;\r\n    });\r\n\r\n    pageDispatch({\r\n      type: InsightsPageContextActionType.FORMULA_SET_DISPLAY_NAME,\r\n      payload: {\r\n        displayName: formulaName,\r\n      },\r\n    });\r\n\r\n    if (!calculationClient) {\r\n      getLogger().error(MODULE_NAME, 'Calculation client not initialized');\r\n      setIsSaveDisabled(false); // re-enable save button\r\n      return;\r\n    }\r\n\r\n    let result;\r\n    if (pageState.selectedFormulaId && pageState.selectedTwinId) {\r\n      result = await calculationClient.updateFormula(\r\n        pageState.selectedTwinId,\r\n        newFormula,\r\n      );\r\n    } else if (pageState.selectedTwinId) {\r\n      const jobCreateTelemetry = {\r\n        featureName: CalculationFeature.JobCreate,\r\n        activityName: JobCreateActivity.FormulaSavedCalled,\r\n      };\r\n      result = await calculationClient.createFormula(\r\n        jobCreateTelemetry,\r\n        pageState.selectedTwinId,\r\n        newFormula,\r\n      );\r\n    }\r\n    if (result && result.state === 'success') {\r\n      await handleSuccess(pageState.selectedTwinId);\r\n      props.setOpen(false); // close the panel on Success\r\n      if (extensionClient) {\r\n        extensionClient.notification.open({\r\n          title: t(\r\n            strings.insights.save_formula_panel.formula_success_message,\r\n            {\r\n              formulaName: formulaName,\r\n            },\r\n          ),\r\n          notificationType: NotificationType.Success,\r\n          itemType: 'DigitalOperationsOperationalInsight',\r\n        });\r\n      }\r\n    } else {\r\n      setSaveFormulaPanelErrorBanner({\r\n        errorMessage:\r\n          result?.errorMessage ||\r\n          t(strings.insights.save_formula_panel.formula_error_message),\r\n      });\r\n      getLogger().error(\r\n        MODULE_NAME,\r\n        'Failed to save or update formula',\r\n        result,\r\n      );\r\n    }\r\n    // re-enable save button\r\n    setIsSaveDisabled(false);\r\n  }, [\r\n    nameValidationMessage,\r\n    pageState.currentFormula,\r\n    pageState.selectedFormulaId,\r\n    pageState.selectedTwinId,\r\n    pageDispatch,\r\n    formulaName,\r\n    calculationClient,\r\n    props,\r\n    handleSuccess,\r\n    extensionClient,\r\n  ]);\r\n\r\n  const onCancel = useCallback(() => {\r\n    setNameValidationMessage(undefined); // clear validation message\r\n    props.setOpen(false); // close the panel\r\n    setSaveFormulaPanelErrorBanner(undefined); // clear error banner\r\n  }, [props]);\r\n\r\n  // side effects\r\n  useEffect(() => {\r\n    // shows the formula name in the input field\r\n    setFormulaName(pageState.currentFormula.displayName);\r\n  }, [pageState.currentFormula]);\r\n\r\n  // result\r\n  const state: SaveFormulaPanelState = useMemo(() => {\r\n    return {\r\n      open: props.open,\r\n      setOpen: props.setOpen,\r\n      onSave,\r\n      formulaName,\r\n      setFormulaName,\r\n      handleSuccess,\r\n      nameValidationMessage,\r\n      setNameValidationMessage,\r\n      validateNameInput,\r\n      onCancel,\r\n      saveFormulaPanelErrorBanner,\r\n      isSaveDisabled,\r\n    };\r\n  }, [\r\n    props.open,\r\n    props.setOpen,\r\n    onSave,\r\n    formulaName,\r\n    handleSuccess,\r\n    nameValidationMessage,\r\n    validateNameInput,\r\n    onCancel,\r\n    saveFormulaPanelErrorBanner,\r\n    isSaveDisabled,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  SaveFormulaPanelStyles,\r\n  SaveFormulaPanelClasses,\r\n} from './SaveFormulaPanel.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => SaveFormulaPanelStyles =\r\n  makeStyles<SaveFormulaPanelClasses>({\r\n    root: {},\r\n    drawerBody: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      ...shorthands.gap('12px'),\r\n      paddingRight: '12px',\r\n    },\r\n    text: {\r\n      marginTop: '8px',\r\n      marginRight: '4px',\r\n      fontWeight: tokens.fontWeightMedium,\r\n    },\r\n    messageBarGroup: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      ...shorthands.gap('12px'),\r\n      marginTop: '8px',\r\n      paddingRight: '12px',\r\n    },\r\n  });\r\n","export { SaveFormulaPanel } from './SaveFormulaPanel.root';\r\nexport { SaveFormulaPanelProps } from './SaveFormulaPanel.types';\r\n","import React from 'react';\r\nimport {\r\n  RepeatByDropdownEncoding,\r\n  ScheduleDrawerRenderProps,\r\n  ScheduledRunType,\r\n} from './ScheduleDrawer.types';\r\nimport {\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerHeaderTitle,\r\n  Dropdown,\r\n  Field,\r\n  Input,\r\n  Option,\r\n  Label,\r\n  Radio,\r\n  RadioGroup,\r\n  Spinner,\r\n} from '@fluentui/react-components';\r\nimport { strings, t } from '@do/localization';\r\nimport { Dismiss24Regular } from '@fluentui/react-icons';\r\nimport { addDays } from '@fluentui/react-calendar-compat';\r\nimport { LocalizedOption } from '@do/components';\r\n\r\nexport enum TestIds {\r\n  CloseButton = 'schedule-drawer-close-button',\r\n  ScheduleOnButton = 'schedule-drawer-schedule-on-button',\r\n  ScheduleOffButton = 'schedule-drawer-schedule-off-button',\r\n  RepeatUnitOfTimeDropdown = 'schedule-drawer-repeat-unit-of-time-dropdown',\r\n  FrequencyInput = 'schedule-drawer-frequency-input',\r\n  StartDateTimeInput = 'schedule-drawer-start-date-time-input',\r\n  SaveButton = 'schedule-drawer-save-button',\r\n  CancelButton = 'schedule-drawer-cancel-button',\r\n}\r\n\r\nexport const useScheduleDrawerRender: React.FC<ScheduleDrawerRenderProps> = (\r\n  props,\r\n) => {\r\n  const { state, styles } = props;\r\n  const {\r\n    scheduledRun,\r\n    setScheduledRun,\r\n    unitOfTimeEncoding,\r\n    setUnitOfTimeEncoding,\r\n    frequencyValue,\r\n    setFrequencyValue,\r\n    startDateTime,\r\n    setStartDateTime,\r\n    isLoading,\r\n    onSave,\r\n    open,\r\n    setOpen,\r\n  } = state;\r\n  // Restrictions for the date picker to not allow past dates\r\n  const minDate = addDays(new Date(), -1);\r\n\r\n  const getHintByRepeatType = () => {\r\n    switch (unitOfTimeEncoding) {\r\n      case RepeatByDropdownEncoding.BY_THE_MINUTE:\r\n        return t(\r\n          strings.insights.scheduling_editing_tray.scheduling_by_minute_hint,\r\n        );\r\n      case RepeatByDropdownEncoding.BY_THE_HOUR:\r\n        return t(\r\n          strings.insights.scheduling_editing_tray.scheduling_by_hour_hint,\r\n        );\r\n      default:\r\n        return t(\r\n          strings.insights.scheduling_editing_tray.scheduling_by_day_hint,\r\n        );\r\n    }\r\n  };\r\n\r\n  const getPlaceholderByRepeatType = () => {\r\n    switch (unitOfTimeEncoding) {\r\n      case RepeatByDropdownEncoding.BY_THE_MINUTE:\r\n        return t(\r\n          strings.insights.scheduling_editing_tray\r\n            .frequency_by_minutes_placeholder,\r\n        );\r\n      case RepeatByDropdownEncoding.BY_THE_HOUR:\r\n        return t(\r\n          strings.insights.scheduling_editing_tray\r\n            .frequency_by_hours_placeholder,\r\n        );\r\n      default:\r\n        return t(\r\n          strings.insights.scheduling_editing_tray\r\n            .frequency_by_days_placeholder,\r\n        );\r\n    }\r\n  };\r\n\r\n  const unitOfTimeOptions: LocalizedOption[] = [\r\n    {\r\n      name: RepeatByDropdownEncoding.BY_THE_MINUTE,\r\n      localizedString: t(\r\n        strings.insights.scheduling_editing_tray.repeat_frequency_options\r\n          .by_minute,\r\n      ),\r\n    },\r\n    {\r\n      name: RepeatByDropdownEncoding.BY_THE_HOUR,\r\n      localizedString: t(\r\n        strings.insights.scheduling_editing_tray.repeat_frequency_options\r\n          .by_hour,\r\n      ),\r\n    },\r\n    {\r\n      name: RepeatByDropdownEncoding.BY_THE_DAY,\r\n      localizedString: t(\r\n        strings.insights.scheduling_editing_tray.repeat_frequency_options\r\n          .by_day,\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Drawer\r\n      position={'end'}\r\n      modalType={'alert'}\r\n      open={open}\r\n      className={styles.drawerBody}\r\n      size={'medium'}\r\n    >\r\n      <DrawerHeader>\r\n        <DrawerHeaderTitle\r\n          action={\r\n            <Button\r\n              appearance='subtle'\r\n              aria-label='Close'\r\n              icon={<Dismiss24Regular />}\r\n              onClick={() => setOpen(false)}\r\n              data-testid={TestIds.CloseButton}\r\n            />\r\n          }\r\n        >\r\n          {t(strings.insights.scheduling_editing_tray.edit_schedule_title)}\r\n        </DrawerHeaderTitle>\r\n      </DrawerHeader>\r\n      <DrawerBody className={styles.drawerBody}>\r\n        <Field\r\n          label={t(\r\n            strings.insights.scheduling_editing_tray.scheduled_run_radio_labels,\r\n          )}\r\n        >\r\n          <RadioGroup\r\n            layout='horizontal'\r\n            value={scheduledRun}\r\n            onChange={(_, data) =>\r\n              setScheduledRun(data.value as ScheduledRunType)\r\n            }\r\n            disabled={isLoading}\r\n          >\r\n            <Radio\r\n              value={ScheduledRunType.ON}\r\n              label={t(\r\n                strings.insights.scheduling_editing_tray.radio_button_labels\r\n                  .schedule_on,\r\n              )}\r\n              data-testid={TestIds.ScheduleOnButton}\r\n            />\r\n            <Radio\r\n              value={ScheduledRunType.OFF}\r\n              label={t(\r\n                strings.insights.scheduling_editing_tray.radio_button_labels\r\n                  .schedule_off,\r\n              )}\r\n              data-testid={TestIds.ScheduleOffButton}\r\n            />\r\n          </RadioGroup>\r\n        </Field>\r\n\r\n        {/* SCHEDULING INTERVAL */}\r\n\r\n        <Label className={styles.text}>\r\n          {t(\r\n            strings.insights.scheduling_editing_tray.scheduling_interval_label,\r\n          )}\r\n        </Label>\r\n        <Field\r\n          className={styles.text}\r\n          required\r\n          label={t(\r\n            strings.insights.scheduling_editing_tray\r\n              .scheduling_repeat_interval_dropdown_label,\r\n          )}\r\n        >\r\n          <Dropdown\r\n            value={\r\n              unitOfTimeOptions.find((x) => x.name === unitOfTimeEncoding)\r\n                ?.localizedString\r\n            }\r\n            onOptionSelect={(_ev, selection) =>\r\n              setUnitOfTimeEncoding(\r\n                `${selection.optionValue}` as RepeatByDropdownEncoding,\r\n              )\r\n            }\r\n            disabled={scheduledRun === ScheduledRunType.OFF || isLoading}\r\n            data-testid={TestIds.RepeatUnitOfTimeDropdown}\r\n          >\r\n            {unitOfTimeOptions.map((option) => (\r\n              <Option key={option.name} value={option.name}>\r\n                {option.localizedString}\r\n              </Option>\r\n            ))}\r\n          </Dropdown>\r\n        </Field>\r\n        <Field\r\n          label={t(\r\n            strings.insights.scheduling_editing_tray\r\n              .scheduling_repeat_interval_label,\r\n          )}\r\n          required\r\n          className={styles.text}\r\n          hint={getHintByRepeatType()}\r\n        >\r\n          <Input\r\n            type='number'\r\n            id='frequency-input-id'\r\n            placeholder={getPlaceholderByRepeatType()}\r\n            disabled={scheduledRun === ScheduledRunType.OFF || isLoading}\r\n            value={frequencyValue}\r\n            onChange={(_ev, { value }) => setFrequencyValue(+value)}\r\n            min={0}\r\n            data-testid={TestIds.FrequencyInput}\r\n          />\r\n        </Field>\r\n        <Field\r\n          required\r\n          className={styles.text}\r\n          label={t(\r\n            strings.insights.scheduling_editing_tray.start_date_and_time_label,\r\n          )}\r\n          hint={t(\r\n            strings.insights.scheduling_editing_tray.start_date_and_time_hint,\r\n          )}\r\n        >\r\n          <Input\r\n            value={startDateTime}\r\n            disabled={scheduledRun === ScheduledRunType.OFF || isLoading}\r\n            type='datetime-local'\r\n            id='datetime-local-input-id'\r\n            name='datetime-local-input-name'\r\n            min={minDate.toISOString().slice(0, 16)}\r\n            onChange={(_ev, { value }) => setStartDateTime(value)}\r\n            data-testid={TestIds.StartDateTimeInput}\r\n          />\r\n        </Field>\r\n      </DrawerBody>\r\n      <DrawerFooter>\r\n        <Button\r\n          appearance='primary'\r\n          onClick={onSave}\r\n          disabled={isLoading}\r\n          icon={isLoading ? <Spinner size='tiny' /> : undefined}\r\n          data-testid={TestIds.SaveButton}\r\n        >\r\n          {t(strings.common.apply)}\r\n        </Button>\r\n        <Button\r\n          onClick={() => setOpen(false)}\r\n          data-testid={TestIds.CancelButton}\r\n        >\r\n          {t(strings.common.cancel)}\r\n        </Button>\r\n      </DrawerFooter>\r\n    </Drawer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { ScheduleDrawerProps } from './ScheduleDrawer.types';\r\nimport { useScheduleDrawerRender } from './ScheduleDrawer.render';\r\nimport { useClassNames } from './ScheduleDrawer.styles';\r\nimport { useScheduleDrawerState } from './ScheduleDrawer.state';\r\n\r\nconst MODULE_NAME = 'ScheduleDrawer';\r\n\r\nexport const ScheduleDrawer: React.FC<ScheduleDrawerProps> = (props) => {\r\n  // get state\r\n  const state = useScheduleDrawerState(props);\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useScheduleDrawerRender({ state, styles });\r\n};\r\n\r\nScheduleDrawer.displayName = MODULE_NAME;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport {\r\n  FormulaData,\r\n  getLogger,\r\n  useCalculationClient,\r\n  useDebugLogging,\r\n} from '@do/core';\r\nimport {\r\n  RepeatByDropdownEncoding,\r\n  ScheduleDrawerProps,\r\n  ScheduleDrawerState,\r\n  ScheduledRunType,\r\n} from './ScheduleDrawer.types';\r\nimport { useInsightsPageContext } from '../../../../contexts/InsightsPageContext/InsightsPageContext';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'ScheduleDrawer.state';\r\n\r\nexport const useScheduleDrawerState = (\r\n  props: ScheduleDrawerProps,\r\n): ScheduleDrawerState => {\r\n  const { open, setOpen } = props;\r\n  // contexts\r\n  const { pageState } = useInsightsPageContext();\r\n\r\n  // state\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [scheduledRun, setScheduledRun] = useState<ScheduledRunType>(\r\n    ScheduledRunType.OFF,\r\n  );\r\n  const [unitOfTimeEncoding, setUnitOfTimeEncoding] =\r\n    useState<RepeatByDropdownEncoding>(RepeatByDropdownEncoding.BY_THE_MINUTE);\r\n  const [frequencyValue, setFrequencyValue] = useState<number>(0);\r\n  // State will always hold a STRING representing ISO format date time in local time\r\n  const [startDateTime, setStartDateTime] = useState<string>('');\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n  const calculationClient = useCalculationClient();\r\n\r\n  // callbacks\r\n  const onSave = useCallback(async () => {\r\n    getLogger().info(MODULE_NAME, 'Saving schedule');\r\n    if (!calculationClient) {\r\n      getLogger().error(\r\n        MODULE_NAME,\r\n        'Calculation client [in ScheduleDrawer.state] not initialized',\r\n      );\r\n      return;\r\n    }\r\n\r\n    const computeLookback = unitOfTimeEncoding.replace(\r\n      '_',\r\n      `${2 * frequencyValue}`,\r\n    );\r\n    const formulaWithUpdatedSchedule: FormulaData = {\r\n      id: pageState.currentFormula.id,\r\n      displayName: pageState.currentFormula.displayName,\r\n      elements: pageState.currentFormula.elements,\r\n      edges: pageState.currentFormula.edges,\r\n      scheduleRuns: {\r\n        scheduleCalculation: scheduledRun,\r\n        lookbackWindow: computeLookback,\r\n        startTimeUtc: new Date(startDateTime), // Creates a DATE in local time\r\n        executionFrequency: unitOfTimeEncoding.replace(\r\n          '_',\r\n          `${frequencyValue}`,\r\n        ),\r\n        executionDelay: 'PT5M', // Intentionally hardcoded for now\r\n      },\r\n    };\r\n\r\n    let response;\r\n    if (pageState.selectedTwinId) {\r\n      setIsLoading(true);\r\n      response = await calculationClient.updateFormula(\r\n        pageState.selectedTwinId,\r\n        formulaWithUpdatedSchedule,\r\n      );\r\n    } else {\r\n      getLogger().error(\r\n        MODULE_NAME,\r\n        'Selected twin ID not found [in ScheduleDrawer.state]',\r\n      );\r\n    }\r\n    if (response && response.state === 'success') {\r\n      setOpen(false);\r\n    } else {\r\n      // TODO: Add banner message in panel to surface error\r\n      getLogger().error(\r\n        MODULE_NAME,\r\n        'Failed to update formula schedule',\r\n        response,\r\n      );\r\n    }\r\n    setIsLoading(false);\r\n  }, [\r\n    calculationClient,\r\n    unitOfTimeEncoding,\r\n    frequencyValue,\r\n    pageState.currentFormula.id,\r\n    pageState.currentFormula.displayName,\r\n    pageState.currentFormula.elements,\r\n    pageState.currentFormula.edges,\r\n    pageState.selectedTwinId,\r\n    scheduledRun,\r\n    startDateTime,\r\n    setOpen,\r\n  ]);\r\n\r\n  // Update the state values when selected formula changes\r\n  useEffect(() => {\r\n    const scheduledRun = pageState.currentFormula.scheduleRuns;\r\n    if (scheduledRun) {\r\n      // Extract unit of time and frequency from the execution frequency string\r\n      const unitOfTime = scheduledRun.executionFrequency.replace(\r\n        /[0-9]+/g,\r\n        '_',\r\n      );\r\n      const frequency = scheduledRun.executionFrequency.replace(/[^0-9]/g, '');\r\n      const timeZoneOffset = scheduledRun.startTimeUtc.getTimezoneOffset();\r\n      const localDateTime = new Date(\r\n        scheduledRun.startTimeUtc.getTime() - timeZoneOffset * 60000,\r\n      ); // localDateTime is now a DATE object in local time\r\n\r\n      // Set state values from existing formula schedule\r\n      setScheduledRun(scheduledRun.scheduleCalculation);\r\n      setUnitOfTimeEncoding(unitOfTime as RepeatByDropdownEncoding);\r\n      setFrequencyValue(parseInt(frequency));\r\n      setStartDateTime(localDateTime.toISOString().slice(0, 16)); // Now a STRING in ISO format in local time\r\n    }\r\n  }, [pageState.currentFormula]);\r\n\r\n  // result\r\n  const state: ScheduleDrawerState = useMemo(() => {\r\n    return {\r\n      open,\r\n      setOpen,\r\n      onSave,\r\n      frequencyValue: frequencyValue.toString(),\r\n      setFrequencyValue,\r\n      startDateTime,\r\n      setStartDateTime,\r\n      scheduledRun,\r\n      setScheduledRun,\r\n      unitOfTimeEncoding,\r\n      setUnitOfTimeEncoding,\r\n      isLoading,\r\n    };\r\n  }, [\r\n    open,\r\n    setOpen,\r\n    onSave,\r\n    frequencyValue,\r\n    startDateTime,\r\n    scheduledRun,\r\n    unitOfTimeEncoding,\r\n    isLoading,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug(MODULE_NAME, 'Render. {state}', {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  ScheduleDrawerStyles,\r\n  ScheduleDrawerClasses,\r\n} from './ScheduleDrawer.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => ScheduleDrawerStyles =\r\n  makeStyles<ScheduleDrawerClasses>({\r\n    root: {},\r\n    drawerBody: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      ...shorthands.gap('12px'),\r\n      paddingRight: '12px',\r\n    },\r\n    text: {\r\n      marginTop: '8px',\r\n      marginRight: '4px',\r\n      fontWeight: tokens.fontWeightMedium,\r\n    },\r\n    control: {\r\n      maxWidth: '300px',\r\n    },\r\n  });\r\n","export interface ScheduleDrawerProps {\r\n  open: boolean;\r\n  setOpen: (value: boolean) => void;\r\n  disabled?: boolean;\r\n  defaultValue?: string | undefined;\r\n}\r\n\r\n/** state values used for rendering the item */\r\nexport type ScheduleDrawerState = {\r\n  scheduledRun: ScheduledRunType;\r\n  setScheduledRun: (value: ScheduledRunType) => void;\r\n  unitOfTimeEncoding: RepeatByDropdownEncoding;\r\n  setUnitOfTimeEncoding: (value: RepeatByDropdownEncoding) => void;\r\n  frequencyValue: string;\r\n  setFrequencyValue: (value: number) => void;\r\n  startDateTime: string;\r\n  setStartDateTime: (value: string) => void;\r\n  isLoading: boolean;\r\n  onSave: () => void;\r\n} & Pick<ScheduleDrawerProps, 'open' | 'setOpen'>;\r\n\r\n/** the props send to the render function */\r\nexport type ScheduleDrawerRenderProps = {\r\n  state: ScheduleDrawerState;\r\n  styles: ScheduleDrawerStyles;\r\n};\r\n\r\n/** the names of styling classes for ScheduleDrawer */\r\nexport type ScheduleDrawerClasses = 'root' | 'drawerBody' | 'text' | 'control';\r\n/** the computed styles object output from the styles hook */\r\nexport type ScheduleDrawerStyles = Record<ScheduleDrawerClasses, string>;\r\n\r\nexport enum ScheduledRunType {\r\n  ON = 'On',\r\n  OFF = 'Off',\r\n}\r\n\r\nexport enum RepeatByDropdownEncoding {\r\n  BY_THE_MINUTE = 'PT_M',\r\n  BY_THE_HOUR = 'PT_H',\r\n  BY_THE_DAY = 'P_D',\r\n}\r\n","export { ScheduleDrawer } from './ScheduleDrawer.root';\r\nexport { ScheduleDrawerProps } from './ScheduleDrawer.types';\r\n","export { InsightsRibbon } from './InsightsRibbon.root';\r\nexport { IInsightsRibbonProps } from './InsightsRibbon.types';\r\n","import { FunctionType } from '@do/core';\r\nimport { strings, t } from '@do/localization';\r\n\r\nexport const GetCalculationFormulaOptions = (): {\r\n  category: string;\r\n  items: { displayName: string; value: FunctionType }[];\r\n}[] => [\r\n  {\r\n    category: t(\r\n      strings.insights.element_pickers.function_picker.aggregation_category,\r\n    ),\r\n    items: [\r\n      {\r\n        displayName: t(\r\n          strings.insights.element_pickers.function_picker.function_name_avg,\r\n        ),\r\n        value: 'Average',\r\n      },\r\n      {\r\n        displayName: t(\r\n          strings.insights.element_pickers.function_picker.function_name_sum,\r\n        ),\r\n        value: 'Sum',\r\n      },\r\n      {\r\n        displayName: t(\r\n          strings.insights.element_pickers.function_picker.function_name_count,\r\n        ),\r\n        value: 'Count',\r\n      },\r\n      {\r\n        displayName: t(\r\n          strings.insights.element_pickers.function_picker.function_name_min,\r\n        ),\r\n        value: 'Min',\r\n      },\r\n      {\r\n        displayName: t(\r\n          strings.insights.element_pickers.function_picker.function_name_max,\r\n        ),\r\n        value: 'Max',\r\n      },\r\n      {\r\n        displayName: t(\r\n          strings.insights.element_pickers.function_picker\r\n            .function_name_standard_deviation,\r\n        ),\r\n        value: 'StandardDeviation',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    category: t(\r\n      strings.insights.element_pickers.function_picker.built_in_category,\r\n    ),\r\n    items: [\r\n      {\r\n        displayName: t(\r\n          strings.insights.element_pickers.function_picker\r\n            .function_name_duration,\r\n        ),\r\n        value: 'Duration',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","export * from './pages';\r\n// export * from './components';\r\n","/**\r\n * See README in the telemetry directory for more on how to instrument certified events\r\n */\r\n\r\nexport enum CalculationFeature {\r\n  GetTwinHierarchy = 'DOFormulaTwinsList', // Major scenario\r\n  JobCreate = 'DOFormulaEditor', // Major scenario\r\n}\r\n\r\nexport enum FormulaHierarchyActivity {\r\n  VisualizeHierarchyList = 'VisualizeHierarchyList',\r\n  SearchTwins = 'SearchTwins',\r\n  TwinSelected = 'TwinSelected',\r\n}\r\n\r\nexport enum JobCreateActivity {\r\n  EditorOpened = 'EditorOpened',\r\n  FormulaSavedCalled = 'FormulaSavedCalled',\r\n}\r\n\r\nexport enum CanvasNodeActivity {\r\n  NodeAdded = 'NodeAdded',\r\n  NodeEdited = 'NodeEdited',\r\n  NodeRemoved = 'NodeRemoved',\r\n}\r\n\r\nexport enum EditorIntellisenseActivity {\r\n  KeywordAdded = 'KeywordAdded',\r\n}\r\n\r\nexport enum FormulaManagementActivity {\r\n  EditorOpenedExisting = 'EditorOpenedExisting',\r\n  CalculatedPropertiesListed = 'CalculatedPropertiesListed',\r\n  FormulaDeleteCalled = 'FormulaDeleteCalled',\r\n}\r\n\r\nexport enum JobScheduleActivity {\r\n  FormulaScheduleAdded = 'FormulaScheduleAdded',\r\n  FormulaScheduleEdited = 'FormulaScheduleEdited',\r\n  FormulaPauseStartToggled = 'FormulaPauseStartToggled',\r\n}\r\n","import React from 'react';\r\nimport { IInsightsPageRenderProps } from './InsightsPage.types';\r\nimport { Page } from '@do/components';\r\nimport { InsightsHierarchy } from '../../components/InsightsHierarchy';\r\nimport { InsightsRibbon } from '../../components/InsightsRibbon';\r\nimport { InsightsPageContextProvider } from '../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContents } from './components/InsightsPageContents';\r\n\r\nexport const useInsightsPageRender: React.FC<IInsightsPageRenderProps> = ({\r\n  state,\r\n  styles,\r\n}) => {\r\n  return (\r\n    <InsightsPageContextProvider initialState={state}>\r\n      <Page ribbon={<InsightsRibbon />}>\r\n        <div className={styles.root}>\r\n          <InsightsHierarchy />\r\n          <InsightsPageContents />\r\n        </div>\r\n      </Page>\r\n    </InsightsPageContextProvider>\r\n  );\r\n};\r\n","import { useMemo } from 'react';\r\nimport { IInsightsPageState, InsightsPages } from './InsightsPage.types';\r\nimport { useAppRouteProps } from '@do/core';\r\n\r\nexport const useInsightsPageState = (): IInsightsPageState => {\r\n  const routeProps = useAppRouteProps();\r\n  const selectedTwinId = useMemo(() => {\r\n    return routeProps.segments?.length >= 3\r\n      ? routeProps.segments[3]\r\n      : undefined;\r\n  }, [routeProps.segments]);\r\n  const page = useMemo(() => {\r\n    return routeProps.segments?.length >= 4\r\n      ? (routeProps.segments[4] as InsightsPages)\r\n      : ('empty' as InsightsPages);\r\n  }, [routeProps.segments]);\r\n\r\n  const state: IInsightsPageState = useMemo(() => {\r\n    return {\r\n      selectedTwinId,\r\n      selectedTwinDisplayName: selectedTwinId,\r\n      page,\r\n    };\r\n  }, [selectedTwinId, page]);\r\n  return state;\r\n};\r\n","import { IInsightsPageStyles, InsightsPageClasses } from './InsightsPage.types';\r\nimport { makeStyles, shorthands } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => IInsightsPageStyles =\r\n  makeStyles<InsightsPageClasses>({\r\n    root: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '300px auto',\r\n      ...shorthands.padding(0),\r\n      height: '100%',\r\n    },\r\n  });\r\n","import React from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { useInsightsPageRender } from './InsightsPage.render';\r\nimport { useClassNames } from './InsightsPage.styles';\r\nimport { useInsightsPageState } from './InsightsPage.state';\r\n\r\nconst MODULE_NAME = 'InsightsPage';\r\n\r\nexport const InsightsPage: React.FC = () => {\r\n  // get state\r\n  const state = useInsightsPageState();\r\n  const debugLogging = useDebugLogging();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  debugLogging && getLogger().debug('Render. {state, styles}', MODULE_NAME, {});\r\n\r\n  // render the item\r\n  return useInsightsPageRender({ state, styles });\r\n};\r\n\r\nInsightsPage.displayName = MODULE_NAME;\r\n","import React from 'react';\r\nimport { InsightsPageContentsRenderProps } from './InsightsPageContents.types';\r\nimport { Loading } from '@do/components/Loading';\r\nimport { FormulaBuilder } from '../../../../components/FormulaBuilder';\r\nimport { FormulaList } from '../../../../components/FormulaList';\r\nimport { InsightsDetailsPanel } from '../../../../components/InsightsDetailsPanel';\r\nimport { EmptyContents } from '@do/components';\r\nimport { strings, t } from '@do/localization';\r\n\r\nexport const useInsightsPageContentsRender: React.FC<\r\n  InsightsPageContentsRenderProps\r\n> = ({ state, styles }) => {\r\n  const { isFormulaListLoading } = state;\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      {isFormulaListLoading ? (\r\n        <div className={styles.loading}>\r\n          <Loading />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {state.page === 'builder' && (\r\n            <>\r\n              <FormulaBuilder />\r\n              <InsightsDetailsPanel />\r\n            </>\r\n          )}\r\n          {state.page === 'list' && <FormulaList />}\r\n          {state.page === 'empty' && (\r\n            <EmptyContents\r\n              header={t(strings.insights.formula_builder.empty_contents.header)}\r\n              subtitle={t(\r\n                strings.insights.formula_builder.empty_contents.subtitle,\r\n              )}\r\n              button={{\r\n                children: t(\r\n                  strings.insights.formula_builder.empty_contents.button_title,\r\n                ),\r\n                disabled: state.selectedTwinId === undefined, // disable button if no twin is selected\r\n                onClick: state.openNewBuilder,\r\n              }}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useInsightsPageContentsRender } from './InsightsPageContents.render';\r\nimport { useClassNames } from './InsightsPageContents.styles';\r\nimport { useInsightsPageContentsState } from './InsightsPageContents.state';\r\n\r\nconst MODULE_NAME = 'InsightsPageContents';\r\n\r\nexport const InsightsPageContents: React.FC = () => {\r\n  // get state\r\n  const state = useInsightsPageContentsState();\r\n\r\n  // get styles\r\n  const styles = useClassNames();\r\n\r\n  // render the item\r\n  return useInsightsPageContentsRender({ state, styles });\r\n};\r\n\r\nInsightsPageContents.displayName = MODULE_NAME;\r\n","import { useCallback, useMemo } from 'react';\r\nimport { getLogger, useDebugLogging } from '@do/core';\r\nimport { InsightsPageContentsState } from './InsightsPageContents.types';\r\nimport { useInsightsPageContext } from '../../../../contexts/InsightsPageContext/InsightsPageContext';\r\nimport { InsightsPageContextActionType } from '../../../../contexts/InsightsPageContext/InsightsPageContext.types';\r\n\r\nconst DEBUG_LOGGING = false;\r\nconst MODULE_NAME = 'InsightsPageContents.state';\r\n\r\nexport const useInsightsPageContentsState = (): InsightsPageContentsState => {\r\n  // contexts\r\n  const { pageState, pageDispatch } = useInsightsPageContext();\r\n\r\n  // state\r\n\r\n  // hooks\r\n  const debugLogging = useDebugLogging(DEBUG_LOGGING);\r\n\r\n  // callbacks\r\n  const openNewBuilder = useCallback(() => {\r\n    pageDispatch({\r\n      type: InsightsPageContextActionType.FORMULA_LIST_LOADED,\r\n      payload: { data: [] },\r\n    });\r\n    pageDispatch({\r\n      type: InsightsPageContextActionType.NAVIGATE_TO_BUILDER,\r\n      payload: {\r\n        formulaId: undefined,\r\n        twinId: pageState.selectedTwinId,\r\n        twinDisplayName:\r\n          pageState.selectedTwinDisplayName || pageState.selectedTwinId,\r\n      },\r\n    });\r\n  }, [\r\n    pageDispatch,\r\n    pageState.selectedTwinDisplayName,\r\n    pageState.selectedTwinId,\r\n  ]);\r\n\r\n  // side effects\r\n\r\n  // result\r\n  const state: InsightsPageContentsState = useMemo(() => {\r\n    return {\r\n      page: pageState.page,\r\n      isFormulaListLoading: pageState.formulaList.state === 'pending',\r\n      openNewBuilder,\r\n      selectedTwinId: pageState.selectedTwinId,\r\n    };\r\n  }, [\r\n    pageState.page,\r\n    pageState.formulaList.state,\r\n    pageState.selectedTwinId,\r\n    openNewBuilder,\r\n  ]);\r\n\r\n  debugLogging &&\r\n    getLogger().debug('Render. {state}', MODULE_NAME, {\r\n      state,\r\n    });\r\n\r\n  return state;\r\n};\r\n","import {\r\n  InsightsPageContentsStyles,\r\n  InsightsPageContentsClasses,\r\n} from './InsightsPageContents.types';\r\nimport { makeStyles, shorthands, tokens } from '@fluentui/react-components';\r\n\r\nexport const useClassNames: () => InsightsPageContentsStyles =\r\n  makeStyles<InsightsPageContentsClasses>({\r\n    root: {\r\n      display: 'flex',\r\n      width: '100%',\r\n      ...shorthands.border(\r\n        '1px',\r\n        'solid',\r\n        tokens.colorNeutralBackground1Selected,\r\n      ),\r\n    },\r\n    loading: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '100%',\r\n      paddingLeft: '8px',\r\n    },\r\n  });\r\n","export { InsightsPageContents } from './InsightsPageContents.root';\r\n","export { InsightsPage } from './InsightsPage';\r\nexport { InsightsPages } from './InsightsPage.types';\r\n","export * from './InsightsPage';\r\n"],"names":["__styles","shorthands","tokens","useClassNames","root","mc9l5x","i8kkvl","Belr9w4","Beiy3e4","header","Bhrd7zp","sj55zd","B6of3ja","t21cq0","jrapky","Frg6f3","groupHeader","uwmqm3","d","list","Bmxbyg5","Bqenvij","listItem","B2u0y6b","ygn44y","B68tc82","Huce71","a9b677","Bh6795r","Bnnss6s","xawz","loading","tray","typographyStyles","z189sj","columnHeader","formulaName","Bahqtrf","Be2twd7","Bg96gwp","sortIcon","listTitle","drawerBody","row","title","instructions","inputTypes","editor","B4j52fo","Bekrc4i","Bn0qgzm","ibv6hh","icvyot","vrafjx","oivjwe","wvpqe5","g2u3we","h3c5rm","B9xav0g","zhjwy3","Bbmb7ep","Beyfa6y","B7oj6ja","Btl43ni","editorContainer","searchString","Byoj8tv","subtitle","dropdownPanel","operationButton","Bf4jedk","hierarchyLabel","treeItem","buttonRow","Brf1p80","Bt984gj","leafLabel","De3pzq","E5pizo","button","buttonGroup","listIcons","text","messageBarGroup","control","Budl1dq","z8tnut"],"sourceRoot":""}