{"version":3,"file":"vendors-node_modules_fluentui_react-calendar-compat_lib_utils_dateMath_dateMath_js-node_modul-b99bb8.bundle.js","mappings":";;;;;;;;;;;;;;;;AAA+B;AAC/B,sBAAsB,gDAAmB;AACzC;AACA;AACA;AACA,IAAW;AACX;AACA;AACA,IAAW;AACX;AACA,gCAAgC,6CAAgB;AAChD;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AAC5B;AACP;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AAChC;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DqG;AACrG;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX,iCAAiC,qDAAa;AAC9C;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qDAAa,kBAAkB,qDAAa,mBAAmB,qDAAa;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA,iDAAiD,qDAAa,kBAAkB,qDAAa,mBAAmB,qDAAa;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAS;AACrB,YAAY,iDAAS;AACrB,YAAY,iDAAS;AACrB,YAAY,iDAAS;AACrB,YAAY,iDAAS;AACrB;AACA;AACA;AACA;AACA,aAAa,qDAAa;AAC1B;AACA;AACA;AACA,aAAa,qDAAa;AAC1B,aAAa,qDAAa;AAC1B;AACA,yCAAyC,qDAAa;AACtD;AACA,aAAa,qDAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAa;AAC3C;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA,0DAA0D,qDAAa;AACvE;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA,sBAAsB,qDAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA,aAAa,uDAAe;AAC5B,+DAA+D,qDAAa;AAC5E,aAAa,uDAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA,sBAAsB,qDAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX,yEAAyE,qDAAa;AACtF;AACA;AACA;AACA,sBAAsB,qDAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qDAAa;AACvD,+DAA+D,mDAAW;AAC1E;AACA,2CAA2C,qDAAa,kBAAkB,qDAAa;AACvF;AACA,gBAAgB,qDAAa;AAC7B;AACA;AACA;AACA,4BAA4B,qDAAa;AACzC,2CAA2C,qDAAa,kBAAkB,qDAAa;AACvF;AACA,oBAAoB,qDAAa;AACjC;AACA;AACA;AACA,6BAA6B,qDAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qDAAa;AACpD,8CAA8C,qDAAa,kBAAkB,qDAAa;AAC1F,qCAAqC,qDAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,8BAA8B,iDAAS,wDAAwD,qDAAa;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClV+B;AACoC;AACM;AACa;AACO;AACf;AAC9E;AACA;AACA,IAAW,sCAAsC,6CAAgB;AACjE,kBAAkB,gFAA2B;AAC7C,IAAI,mGAAiC;AACrC,IAAI,mFAA2B;AAC/B,WAAW,sFAA8B,QAAQ,0GAAwC;AACzF,CAAC;AACD;;;;;;;;;;;;;;;;;;ACdA,EAAuF;AAC/B;AACO;AAC/D;AACA;AACA,IAAW;AACX,IAAI,sEAAW;AACf,yBAAyB,6EAAK;AAC9B;AACA,yCAAyC,4EAAI,CAAC,yEAAqB;AACnE;AACA,wCAAwC,4EAAI,gBAAgB;AAC5D,aAAa;AACb,2CAA2C,6EAAK;AAChD;AACA,gDAAgD,4EAAI;AACpD;AACA,qBAAqB;AACrB,uDAAuD,4EAAI,sBAAsB;AACjF;AACA,aAAa;AACb;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;ACvB+B;AAC4C;AACb;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAW;AACX,YAAY,OAAO,EAAE,uEAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,cAAc,6DAAW,CAAC,mFAAwB;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,cAAc,+DAAa;AAC3B;AACA;AACA,SAAS;AACT,eAAe,+DAAa;AAC5B;AACA,SAAS;AACT,qBAAqB,+DAAa;AAClC;AACA,SAAS;AACT,iBAAiB,+DAAa;AAC9B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtD+B;AACxB;AACP,YAAY,aAAa;AACzB,mBAAmB,0CAAa;AAChC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACXoE;AACrB;AACU;AAClD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wDAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB,cAAc,aAAa,oBAAoB,aAAa,sCAAsC,aAAa,mCAAmC,aAAa,aAAa,cAAc,eAAe,aAAa,gBAAgB,cAAc,mBAAmB,cAAc,uBAAuB,aAAa,gBAAgB,aAAa,gBAAgB,cAAc,gBAAgB,aAAa,uCAAuC,aAAa,oBAAoB,cAAc,wBAAwB,aAAa,sCAAsC,aAAa,mCAAmC,aAAa,kCAAkC,aAAa,sCAAsC,aAAa,sCAAsC;AACvwB,CAAC;AACD;AACA;AACA;AACO;AACP;AACA;AACA;AACA,IAAI;AACJ,yBAAyB,4DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAY;AACxC;AACA;AACA,2BAA2B,4DAAY;AACvC;AACA;AACA,kCAAkC,4DAAY;AAC9C;AACA;AACA,8BAA8B,4DAAY;AAC1C;AACA;AACA;AACA;;;;;;;;;;;;;;AC7FA;AACA,iEAAe;AACf;AACA,CAAC;;;;;;;;;;;;;;ACHD,iEAAe,cAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC;;;;;;;;;;;;;;ACApI;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACjBqC;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,SAAS;AACzB;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;;AAEA,OAAO,wDAAQ;AACf;AACA;;AAEA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;;AChCS;AACN;AACsB;;AAEjD;AACA,MAAM,kDAAM;AACZ,WAAW,kDAAM;AACjB;;AAEA;AACA,iDAAiD,+CAAG,KAAK;;AAEzD;AACA,mCAAmC;;AAEnC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;;AAEA,SAAS,8DAAe;AACxB;;AAEA,iEAAe,EAAE;;;;;;;;;;;;;;;AC5Bc;;AAE/B;AACA,qCAAqC,iDAAK;AAC1C;;AAEA,iEAAe,QAAQ","sources":["webpack:///./node_modules/@fluentui/react-avatar/lib/contexts/AvatarContext.js","webpack:///./node_modules/@fluentui/react-calendar-compat/lib/utils/constants.js","webpack:///./node_modules/@fluentui/react-calendar-compat/lib/utils/dateMath/dateMath.js","webpack:///./node_modules/@fluentui/react-table/lib/components/TableCellLayout/TableCellLayout.js","webpack:///./node_modules/@fluentui/react-table/lib/components/TableCellLayout/renderTableCellLayout.js","webpack:///./node_modules/@fluentui/react-table/lib/components/TableCellLayout/useTableCellLayout.js","webpack:///./node_modules/@fluentui/react-table/lib/components/TableCellLayout/useTableCellLayoutContextValues.js","webpack:///./node_modules/@fluentui/react-table/lib/components/TableCellLayout/useTableCellLayoutStyles.styles.js","webpack:///./src/apps/insights/node_modules/uuid/dist/esm-browser/native.js","webpack:///./src/apps/insights/node_modules/uuid/dist/esm-browser/regex.js","webpack:///./src/apps/insights/node_modules/uuid/dist/esm-browser/rng.js","webpack:///./src/apps/insights/node_modules/uuid/dist/esm-browser/stringify.js","webpack:///./src/apps/insights/node_modules/uuid/dist/esm-browser/v4.js","webpack:///./src/apps/insights/node_modules/uuid/dist/esm-browser/validate.js"],"sourcesContent":["import * as React from 'react';\nconst avatarContext = React.createContext(undefined);\nconst avatarContextDefaultValue = {};\n/**\n * @internal\n */ export const AvatarContextProvider = avatarContext.Provider;\n/**\n * @internal\n */ export const useAvatarContext = ()=>{\n    var _React_useContext;\n    return (_React_useContext = React.useContext(avatarContext)) !== null && _React_useContext !== void 0 ? _React_useContext : avatarContextDefaultValue;\n};\n","/**\n * The days of the week\n */ export var DayOfWeek;\n(function(DayOfWeek) {\n    DayOfWeek[DayOfWeek[\"Sunday\"] = 0] = \"Sunday\";\n    DayOfWeek[DayOfWeek[\"Monday\"] = 1] = \"Monday\";\n    DayOfWeek[DayOfWeek[\"Tuesday\"] = 2] = \"Tuesday\";\n    DayOfWeek[DayOfWeek[\"Wednesday\"] = 3] = \"Wednesday\";\n    DayOfWeek[DayOfWeek[\"Thursday\"] = 4] = \"Thursday\";\n    DayOfWeek[DayOfWeek[\"Friday\"] = 5] = \"Friday\";\n    DayOfWeek[DayOfWeek[\"Saturday\"] = 6] = \"Saturday\";\n})(DayOfWeek || (DayOfWeek = {}));\nexport var MonthOfYear;\n(function(MonthOfYear) {\n    MonthOfYear[MonthOfYear[\"January\"] = 0] = \"January\";\n    MonthOfYear[MonthOfYear[\"February\"] = 1] = \"February\";\n    MonthOfYear[MonthOfYear[\"March\"] = 2] = \"March\";\n    MonthOfYear[MonthOfYear[\"April\"] = 3] = \"April\";\n    MonthOfYear[MonthOfYear[\"May\"] = 4] = \"May\";\n    MonthOfYear[MonthOfYear[\"June\"] = 5] = \"June\";\n    MonthOfYear[MonthOfYear[\"July\"] = 6] = \"July\";\n    MonthOfYear[MonthOfYear[\"August\"] = 7] = \"August\";\n    MonthOfYear[MonthOfYear[\"September\"] = 8] = \"September\";\n    MonthOfYear[MonthOfYear[\"October\"] = 9] = \"October\";\n    MonthOfYear[MonthOfYear[\"November\"] = 10] = \"November\";\n    MonthOfYear[MonthOfYear[\"December\"] = 11] = \"December\";\n})(MonthOfYear || (MonthOfYear = {}));\nexport var FirstWeekOfYear;\n(function(FirstWeekOfYear) {\n    FirstWeekOfYear[FirstWeekOfYear[\"FirstDay\"] = 0] = \"FirstDay\";\n    FirstWeekOfYear[FirstWeekOfYear[\"FirstFullWeek\"] = 1] = \"FirstFullWeek\";\n    FirstWeekOfYear[FirstWeekOfYear[\"FirstFourDayWeek\"] = 2] = \"FirstFourDayWeek\";\n})(FirstWeekOfYear || (FirstWeekOfYear = {}));\nexport var DateRangeType;\n(function(DateRangeType) {\n    DateRangeType[DateRangeType[\"Day\"] = 0] = \"Day\";\n    DateRangeType[DateRangeType[\"Week\"] = 1] = \"Week\";\n    DateRangeType[DateRangeType[\"Month\"] = 2] = \"Month\";\n    DateRangeType[DateRangeType[\"WorkWeek\"] = 3] = \"WorkWeek\";\n})(DateRangeType || (DateRangeType = {}));\nexport const DAYS_IN_WEEK = 7;\nexport const TimeConstants = {\n    MillisecondsInOneDay: 86400000,\n    MillisecondsIn1Sec: 1000,\n    MillisecondsIn1Min: 60000,\n    MillisecondsIn30Mins: 1800000,\n    MillisecondsIn1Hour: 3600000,\n    MinutesInOneDay: 1440,\n    MinutesInOneHour: 60,\n    DaysInOneWeek: 7,\n    MonthInOneYear: 12,\n    HoursInOneDay: 24,\n    SecondsInOneMinute: 60,\n    OffsetTo24HourFormat: 12,\n    /**\n   * Matches a time string. Groups:\n   * 1. hours (with or without leading 0)\n   * 2. minutes\n   * 3. seconds (optional)\n   * 4. meridiem (am/pm, case-insensitive, optional)\n   */ TimeFormatRegex: /^(\\d\\d?):(\\d\\d):?(\\d\\d)? ?([ap]m)?/i\n};\n","import { DateRangeType, DayOfWeek, FirstWeekOfYear, MonthOfYear, TimeConstants } from '../constants';\n/**\n * Returns a date offset from the given date by the specified number of days.\n * @param date - The origin date\n * @param days - The number of days to offset. 'days' can be negative.\n * @returns A new Date object offset from the origin date by the given number of days\n */ export function addDays(date, days) {\n    const result = new Date(date.getTime());\n    result.setDate(result.getDate() + days);\n    return result;\n}\n/**\n * Returns a date offset from the given date by the specified number of weeks.\n * @param date - The origin date\n * @param weeks - The number of weeks to offset. 'weeks' can be negative.\n * @returns A new Date object offset from the origin date by the given number of weeks\n */ export function addWeeks(date, weeks) {\n    return addDays(date, weeks * TimeConstants.DaysInOneWeek);\n}\n/**\n * Returns a date offset from the given date by the specified number of months.\n * The method tries to preserve the day-of-month; however, if the new month does not have enough days\n * to contain the original day-of-month, we'll use the last day of the new month.\n * @param date - The origin date\n * @param months - The number of months to offset. 'months' can be negative.\n * @returns A new Date object offset from the origin date by the given number of months\n */ export function addMonths(date, months) {\n    let result = new Date(date.getTime());\n    const newMonth = result.getMonth() + months;\n    result.setMonth(newMonth);\n    // We want to maintain the same day-of-month, but that may not be possible if the new month doesn't have enough days.\n    // Loop until we back up to a day the new month has.\n    // (Weird modulo math is due to Javascript's treatment of negative numbers in modulo)\n    if (result.getMonth() !== (newMonth % TimeConstants.MonthInOneYear + TimeConstants.MonthInOneYear) % TimeConstants.MonthInOneYear) {\n        result = addDays(result, -result.getDate());\n    }\n    return result;\n}\n/**\n * Returns a date offset from the given date by the specified number of years.\n * The method tries to preserve the day-of-month; however, if the new month does not have enough days\n * to contain the original day-of-month, we'll use the last day of the new month.\n * @param date - The origin date\n * @param years - The number of years to offset. 'years' can be negative.\n * @returns A new Date object offset from the origin date by the given number of years\n */ export function addYears(date, years) {\n    let result = new Date(date.getTime());\n    result.setFullYear(date.getFullYear() + years);\n    // We want to maintain the same day-of-month, but that may not be possible if the new month doesn't have enough days.\n    // Loop until we back up to a day the new month has.\n    // (Weird modulo math is due to Javascript's treatment of negative numbers in modulo)\n    if (result.getMonth() !== (date.getMonth() % TimeConstants.MonthInOneYear + TimeConstants.MonthInOneYear) % TimeConstants.MonthInOneYear) {\n        result = addDays(result, -result.getDate());\n    }\n    return result;\n}\n/**\n * Returns a date that is the first day of the month of the provided date.\n * @param date - The origin date\n * @returns A new Date object with the day set to the first day of the month.\n */ export function getMonthStart(date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1, 0, 0, 0, 0);\n}\n/**\n * Returns a date that is the last day of the month of the provided date.\n * @param date - The origin date\n * @returns A new Date object with the day set to the last day of the month.\n */ export function getMonthEnd(date) {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0, 0, 0, 0, 0);\n}\n/**\n * Returns a date that is the first day of the year of the provided date.\n * @param date - The origin date\n * @returns A new Date object with the day set to the first day of the year.\n */ export function getYearStart(date) {\n    return new Date(date.getFullYear(), 0, 1, 0, 0, 0, 0);\n}\n/**\n * Returns a date that is the last day of the year of the provided date.\n * @param date - The origin date\n * @returns A new Date object with the day set to the last day of the year.\n */ export function getYearEnd(date) {\n    return new Date(date.getFullYear() + 1, 0, 0, 0, 0, 0, 0);\n}\n/**\n * Returns a date that is a copy of the given date, aside from the month changing to the given month.\n *  The method tries to preserve the day-of-month; however, if the new month does not have enough days\n * to contain the original day-of-month, we'll use the last day of the new month.\n * @param date - The origin date\n * @param month - The 0-based index of the month to set on the date.\n * @returns A new Date object with the given month set.\n */ export function setMonth(date, month) {\n    return addMonths(date, month - date.getMonth());\n}\n/**\n * Compares two dates, and returns true if the two dates (not accounting for time-of-day) are equal.\n * @returns True if the two dates represent the same date (regardless of time-of-day), false otherwise.\n */ export function compareDates(date1, date2) {\n    if (!date1 && !date2) {\n        return true;\n    } else if (!date1 || !date2) {\n        return false;\n    } else {\n        return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n    }\n}\n/**\n * Compare the date parts of two dates\n * @param date1 - The first date to compare\n * @param date2 - The second date to compare\n * @returns A negative value if date1 is earlier than date2, 0 if the dates are equal, or a positive value\n * if date1 is later than date2.\n */ export function compareDatePart(date1, date2) {\n    return getDatePartHashValue(date1) - getDatePartHashValue(date2);\n}\n/**\n * Gets the date range array including the specified date. The date range array is calculated as the list\n * of dates accounting for the specified first day of the week and date range type.\n * @param date - The input date\n * @param dateRangeType - The desired date range type, i.e., day, week, month, etc.\n * @param firstDayOfWeek - The first day of the week.\n * @param workWeekDays - The allowed days in work week. If not provided, assumes all days are allowed.\n * @param daysToSelectInDayView - The number of days to include when using dateRangeType === DateRangeType.Day\n * for multiday view. Defaults to 1\n * @returns An array of dates representing the date range containing the specified date.\n */ export function getDateRangeArray(date, dateRangeType, firstDayOfWeek, workWeekDays, daysToSelectInDayView = 1) {\n    const datesArray = [];\n    let startDate;\n    let endDate = null;\n    if (!workWeekDays) {\n        workWeekDays = [\n            DayOfWeek.Monday,\n            DayOfWeek.Tuesday,\n            DayOfWeek.Wednesday,\n            DayOfWeek.Thursday,\n            DayOfWeek.Friday\n        ];\n    }\n    daysToSelectInDayView = Math.max(daysToSelectInDayView, 1);\n    switch(dateRangeType){\n        case DateRangeType.Day:\n            startDate = getDatePart(date);\n            endDate = addDays(startDate, daysToSelectInDayView);\n            break;\n        case DateRangeType.Week:\n        case DateRangeType.WorkWeek:\n            startDate = getStartDateOfWeek(getDatePart(date), firstDayOfWeek);\n            endDate = addDays(startDate, TimeConstants.DaysInOneWeek);\n            break;\n        case DateRangeType.Month:\n            startDate = new Date(date.getFullYear(), date.getMonth(), 1);\n            endDate = addMonths(startDate, 1);\n            break;\n        default:\n            throw new Error('Unexpected object: ' + dateRangeType);\n    }\n    // Populate the dates array with the dates in range\n    let nextDate = startDate;\n    do {\n        if (dateRangeType !== DateRangeType.WorkWeek) {\n            // push all days not in work week view\n            datesArray.push(nextDate);\n        } else if (workWeekDays.indexOf(nextDate.getDay()) !== -1) {\n            datesArray.push(nextDate);\n        }\n        nextDate = addDays(nextDate, 1);\n    }while (!compareDates(nextDate, endDate))\n    return datesArray;\n}\n/**\n * Checks whether the specified date is in the given date range.\n * @param date - The origin date\n * @param dateRange - An array of dates to do the lookup on\n * @returns True if the date matches one of the dates in the specified array, false otherwise.\n */ export function isInDateRangeArray(date, dateRange) {\n    for (const dateInRange of dateRange){\n        if (compareDates(date, dateInRange)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Returns the week number for a date.\n * Week numbers are 1 - 52 (53) in a year\n * @param navigatedDate - A date to find the week number for.\n * @param firstDayOfWeek - The first day of the week (0-6, Sunday = 0)\n * @param firstWeekOfYear - The first week of the year (1-2)\n * @returns The weeks number array for the current month.\n */ export function getWeekNumbersInMonth(weeksInMonth, firstDayOfWeek, firstWeekOfYear, navigatedDate) {\n    const selectedYear = navigatedDate.getFullYear();\n    const selectedMonth = navigatedDate.getMonth();\n    let dayOfMonth = 1;\n    const fistDayOfMonth = new Date(selectedYear, selectedMonth, dayOfMonth);\n    const endOfFirstWeek = dayOfMonth + (firstDayOfWeek + TimeConstants.DaysInOneWeek - 1) - adjustWeekDay(firstDayOfWeek, fistDayOfMonth.getDay());\n    let endOfWeekRange = new Date(selectedYear, selectedMonth, endOfFirstWeek);\n    dayOfMonth = endOfWeekRange.getDate();\n    const weeksArray = [];\n    for(let i = 0; i < weeksInMonth; i++){\n        // Get week number for end of week\n        weeksArray.push(getWeekNumber(endOfWeekRange, firstDayOfWeek, firstWeekOfYear));\n        dayOfMonth += TimeConstants.DaysInOneWeek;\n        endOfWeekRange = new Date(selectedYear, selectedMonth, dayOfMonth);\n    }\n    return weeksArray;\n}\n/**\n * Returns the week number for a date.\n * Week numbers are 1 - 52 (53) in a year\n * @param date - A date to find the week number for.\n * @param firstDayOfWeek - The first day of the week (0-6, Sunday = 0)\n * @param firstWeekOfYear - The first week of the year (1-2)\n * @returns The week's number in the year.\n */ export function getWeekNumber(date, firstDayOfWeek, firstWeekOfYear) {\n    // First four-day week of the year - minumum days count\n    const fourDayWeek = 4;\n    switch(firstWeekOfYear){\n        case FirstWeekOfYear.FirstFullWeek:\n            return getWeekOfYearFullDays(date, firstDayOfWeek, TimeConstants.DaysInOneWeek);\n        case FirstWeekOfYear.FirstFourDayWeek:\n            return getWeekOfYearFullDays(date, firstDayOfWeek, fourDayWeek);\n        default:\n            return getFirstDayWeekOfYear(date, firstDayOfWeek);\n    }\n}\n/**\n * Gets the date for the first day of the week based on the given date assuming\n * the specified first day of the week.\n * @param date - The date to find the beginning of the week date for.\n * @returns A new date object representing the first day of the week containing the input date.\n */ export function getStartDateOfWeek(date, firstDayOfWeek) {\n    let daysOffset = firstDayOfWeek - date.getDay();\n    if (daysOffset > 0) {\n        // If first day of week is > date, go 1 week back, to ensure resulting date is in the past.\n        daysOffset -= TimeConstants.DaysInOneWeek;\n    }\n    return addDays(date, daysOffset);\n}\n/**\n * Gets the date for the last day of the week based on the given date assuming\n * the specified first day of the week.\n * @param date - The date to find the beginning of the week date for.\n * @returns A new date object representing the first day of the week containing the input date.\n */ export function getEndDateOfWeek(date, firstDayOfWeek) {\n    const lastDayOfWeek = firstDayOfWeek - 1 >= 0 ? firstDayOfWeek - 1 : TimeConstants.DaysInOneWeek - 1;\n    let daysOffset = lastDayOfWeek - date.getDay();\n    if (daysOffset < 0) {\n        // If last day of week is < date, go 1 week forward, to ensure resulting date is in the future.\n        daysOffset += TimeConstants.DaysInOneWeek;\n    }\n    return addDays(date, daysOffset);\n}\n/**\n * Gets a new date with the time portion zeroed out, i.e., set to midnight\n * @param date - The origin date\n * @returns A new date with the time set to midnight\n */ function getDatePart(date) {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n}\n/**\n * Helper function to assist in date comparisons\n */ export function getDatePartHashValue(date) {\n    // Generate date hash value created as sum of Date (up to 31 = 5 bits), Month (up to 11 = 4 bits) and Year.\n    // eslint-disable-next-line no-bitwise\n    return date.getDate() + (date.getMonth() << 5) + (date.getFullYear() << 9);\n}\n/**\n * Helper function for `getWeekNumber`.\n * Returns week number for a date.\n * @param date - current selected date.\n * @param firstDayOfWeek - The first day of week (0-6, Sunday = 0)\n * @param numberOfFullDays - week settings.\n * @returns The week's number in the year.\n */ function getWeekOfYearFullDays(date, firstDayOfWeek, numberOfFullDays) {\n    const dayOfYear = getDayOfYear(date) - 1;\n    let num = date.getDay() - dayOfYear % TimeConstants.DaysInOneWeek;\n    const lastDayOfPrevYear = new Date(date.getFullYear() - 1, MonthOfYear.December, 31);\n    const daysInYear = getDayOfYear(lastDayOfPrevYear) - 1;\n    let num2 = (firstDayOfWeek - num + 2 * TimeConstants.DaysInOneWeek) % TimeConstants.DaysInOneWeek;\n    if (num2 !== 0 && num2 >= numberOfFullDays) {\n        num2 -= TimeConstants.DaysInOneWeek;\n    }\n    let num3 = dayOfYear - num2;\n    if (num3 < 0) {\n        num -= daysInYear % TimeConstants.DaysInOneWeek;\n        num2 = (firstDayOfWeek - num + 2 * TimeConstants.DaysInOneWeek) % TimeConstants.DaysInOneWeek;\n        if (num2 !== 0 && num2 + 1 >= numberOfFullDays) {\n            num2 -= TimeConstants.DaysInOneWeek;\n        }\n        num3 = daysInYear - num2;\n    }\n    return Math.floor(num3 / TimeConstants.DaysInOneWeek + 1);\n}\n/**\n * Helper function for `getWeekNumber`.\n * Returns week number for a date.\n * @param date - current selected date.\n * @param firstDayOfWeek - The first day of week (0-6, Sunday = 0)\n * @returns The week's number in the year.\n */ function getFirstDayWeekOfYear(date, firstDayOfWeek) {\n    const num = getDayOfYear(date) - 1;\n    const num2 = date.getDay() - num % TimeConstants.DaysInOneWeek;\n    const num3 = (num2 - firstDayOfWeek + 2 * TimeConstants.DaysInOneWeek) % TimeConstants.DaysInOneWeek;\n    return Math.floor((num + num3) / TimeConstants.DaysInOneWeek + 1);\n}\n/**\n * Helper function for `getWeekNumber`.\n * Returns adjusted week day number when `firstDayOfWeek` is other than Sunday.\n * For Week Day Number comparison checks\n * @param firstDayOfWeek - The first day of week (0-6, Sunday = 0)\n * @param dateWeekDay - shifts number forward to 1 week in case passed as true\n * @returns The day of week adjusted to `firstDayOfWeek`; e.g. when `firstDayOfWeek` is Monday (1),\n * Sunday becomes 7.\n */ function adjustWeekDay(firstDayOfWeek, dateWeekDay) {\n    return firstDayOfWeek !== DayOfWeek.Sunday && dateWeekDay < firstDayOfWeek ? dateWeekDay + TimeConstants.DaysInOneWeek : dateWeekDay;\n}\n/**\n * Returns the day number for a date in a year:\n * the number of days since January 1st in the particular year.\n * @param date - A date to find the day number for.\n * @returns The day's number in the year.\n */ function getDayOfYear(date) {\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    let daysUntilDate = 0;\n    for(let i = 0; i < month; i++){\n        daysUntilDate += daysInMonth(i + 1, year);\n    }\n    daysUntilDate += date.getDate();\n    return daysUntilDate;\n}\n/**\n * Returns the number of days in the month\n * @param month - The month number to target (months 1-12).\n * @param year - The year to target.\n * @returns The number of days in the month.\n */ function daysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n}\n","import * as React from 'react';\nimport { useTableCellLayout_unstable } from './useTableCellLayout';\nimport { renderTableCellLayout_unstable } from './renderTableCellLayout';\nimport { useTableCellLayoutStyles_unstable } from './useTableCellLayoutStyles.styles';\nimport { useTableCellLayoutContextValues_unstable } from './useTableCellLayoutContextValues';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * TableCellLayout component\n */ export const TableCellLayout = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useTableCellLayout_unstable(props, ref);\n    useTableCellLayoutStyles_unstable(state);\n    useCustomStyleHook_unstable('useTableCellLayoutStyles_unstable')(state);\n    return renderTableCellLayout_unstable(state, useTableCellLayoutContextValues_unstable(state));\n});\nTableCellLayout.displayName = 'TableCellLayout';\n","  import { jsx as _jsx, jsxs as _jsxs } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\nimport { AvatarContextProvider } from '@fluentui/react-avatar';\n/**\n * Render the final JSX of TableCellLayout\n */ export const renderTableCellLayout_unstable = (state, contextValues)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsxs(state.root, {\n        children: [\n            state.media && /*#__PURE__*/ _jsx(AvatarContextProvider, {\n                value: contextValues.avatar,\n                children: /*#__PURE__*/ _jsx(state.media, {})\n            }),\n            state.content && /*#__PURE__*/ _jsxs(state.content, {\n                children: [\n                    state.main && /*#__PURE__*/ _jsx(state.main, {\n                        children: state.root.children\n                    }),\n                    state.description && /*#__PURE__*/ _jsx(state.description, {})\n                ]\n            })\n        ]\n    });\n};\n","import * as React from 'react';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport { useTableContext } from '../../contexts/tableContext';\nconst tableAvatarSizeMap = {\n    medium: 32,\n    small: 24,\n    'extra-small': 20\n};\n/**\n * Create the state required to render TableCellLayout.\n *\n * The returned state can be modified with hooks such as useTableCellLayoutStyles_unstable,\n * before being passed to renderTableCellLayout_unstable.\n *\n * @param props - props from this instance of TableCellLayout\n * @param ref - reference to root HTMLElement of TableCellLayout\n */ export const useTableCellLayout_unstable = (props, ref)=>{\n    const { size } = useTableContext();\n    return {\n        components: {\n            root: 'div',\n            main: 'span',\n            description: 'span',\n            content: 'div',\n            media: 'span'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: ref,\n            ...props\n        }), {\n            elementType: 'div'\n        }),\n        appearance: props.appearance,\n        truncate: props.truncate,\n        main: slot.optional(props.main, {\n            renderByDefault: true,\n            elementType: 'span'\n        }),\n        media: slot.optional(props.media, {\n            elementType: 'span'\n        }),\n        description: slot.optional(props.description, {\n            elementType: 'span'\n        }),\n        content: slot.optional(props.content, {\n            renderByDefault: !!props.description || !!props.children,\n            elementType: 'div'\n        }),\n        avatarSize: tableAvatarSizeMap[size],\n        size\n    };\n};\n","import * as React from 'react';\nexport function useTableCellLayoutContextValues_unstable(state) {\n    const { avatarSize } = state;\n    const avatar = React.useMemo(()=>({\n            size: avatarSize\n        }), [\n        avatarSize\n    ]);\n    return {\n        avatar\n    };\n}\n","import { __styles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport { typographyStyles } from '@fluentui/react-theme';\nexport const tableCellLayoutClassNames = {\n  root: 'fui-TableCellLayout',\n  media: 'fui-TableCellLayout__media',\n  main: 'fui-TableCellLayout__main',\n  description: 'fui-TableCellLayout__description',\n  content: 'fui-TableCellLayout__content'\n};\n/**\n * Styles for the root slot\n */\nconst useStyles = /*#__PURE__*/__styles({\n  root: {\n    mc9l5x: \"f22iagw\",\n    Bt984gj: \"f122n59\",\n    i8kkvl: \"fsnqrgy\",\n    Belr9w4: \"fylz90v\",\n    Bh6795r: \"fqerorx\",\n    Bnnss6s: \"f1neuvcm\",\n    xawz: \"fkjuxzh\"\n  },\n  rootTruncate: {\n    B68tc82: \"f1p9o1ba\"\n  },\n  content: {\n    mc9l5x: \"f22iagw\",\n    Beiy3e4: \"f1vx9l62\"\n  },\n  contentTruncate: {\n    B68tc82: \"f1p9o1ba\"\n  },\n  media: {\n    mc9l5x: \"f22iagw\",\n    Bt984gj: \"f122n59\"\n  },\n  mediaExtraSmall: {\n    Be2twd7: \"f4ybsrx\"\n  },\n  mediaSmallAndMedium: {\n    Be2twd7: \"fe5j1ua\"\n  },\n  mediaPrimary: {\n    Be2twd7: \"f1rt2boy\"\n  },\n  mainPrimary: {\n    Bhrd7zp: \"fl43uef\"\n  },\n  mainTruncate: {\n    B68tc82: \"f1p9o1ba\",\n    Huce71: \"fz5stix\",\n    ygn44y: \"f1cmbuwj\"\n  },\n  description: {\n    sj55zd: \"fkfq4zb\",\n    Bahqtrf: \"fk6fouc\",\n    Be2twd7: \"fy9rknc\",\n    Bhrd7zp: \"figsok6\",\n    Bg96gwp: \"fwrc4pm\"\n  }\n}, {\n  d: [\".f22iagw{display:flex;}\", \".f122n59{align-items:center;}\", \".fsnqrgy{column-gap:var(--spacingHorizontalS);}\", \".fylz90v{row-gap:var(--spacingHorizontalS);}\", \".fqerorx{flex-grow:1;}\", \".f1neuvcm{flex-shrink:1;}\", \".fkjuxzh{flex-basis:0px;}\", \".f1p9o1ba{overflow-x:hidden;}\", \".f1vx9l62{flex-direction:column;}\", \".f4ybsrx{font-size:16px;}\", \".fe5j1ua{font-size:20px;}\", \".f1rt2boy{font-size:24px;}\", \".fl43uef{font-weight:var(--fontWeightSemibold);}\", \".fz5stix{white-space:nowrap;}\", \".f1cmbuwj{text-overflow:ellipsis;}\", \".fkfq4zb{color:var(--colorNeutralForeground2);}\", \".fk6fouc{font-family:var(--fontFamilyBase);}\", \".fy9rknc{font-size:var(--fontSizeBase200);}\", \".figsok6{font-weight:var(--fontWeightRegular);}\", \".fwrc4pm{line-height:var(--lineHeightBase200);}\"]\n});\n/**\n * Apply styling to the TableCellLayout slots based on the state\n */\nexport const useTableCellLayoutStyles_unstable = state => {\n  const styles = useStyles();\n  const {\n    truncate\n  } = state;\n  state.root.className = mergeClasses(tableCellLayoutClassNames.root, styles.root, truncate && styles.rootTruncate, state.root.className);\n  const primary = state.appearance === 'primary';\n  if (state.media) {\n    const mediaSizedStyles = {\n      small: styles.mediaSmallAndMedium,\n      medium: styles.mediaSmallAndMedium,\n      'extra-small': styles.mediaExtraSmall\n    };\n    state.media.className = mergeClasses(tableCellLayoutClassNames.media, styles.media, mediaSizedStyles[state.size], primary && styles.mediaPrimary, state.media.className);\n  }\n  if (state.main) {\n    state.main.className = mergeClasses(tableCellLayoutClassNames.main, truncate && styles.mainTruncate, primary && styles.mainPrimary, state.main.className);\n  }\n  if (state.description) {\n    state.description.className = mergeClasses(tableCellLayoutClassNames.description, styles.description, state.description.className);\n  }\n  if (state.content) {\n    state.content.className = mergeClasses(tableCellLayoutClassNames.content, styles.content, truncate && styles.contentTruncate, state.content.className);\n  }\n  return state;\n};\n//# sourceMappingURL=useTableCellLayoutStyles.styles.js.map","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;"],"names":[],"sourceRoot":""}