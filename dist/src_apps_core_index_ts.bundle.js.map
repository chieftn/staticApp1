{"version":3,"file":"src_apps_core_index_ts.bundle.js","mappings":"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","sources":["webpack:///./src/apps/core/clients/CalculationClient/CalculationClient.mock.ts","webpack:///./src/apps/core/clients/CalculationClient/CalculationClient.ts","webpack:///./src/apps/core/clients/CalculationClient/CalculationClient.types.ts","webpack:///./src/apps/core/clients/CalculationClient/CalculationClient.utils.ts","webpack:///./src/apps/core/clients/CalculationClient/index.ts","webpack:///./src/apps/core/clients/DigitalOperationsClients/BaseClient.ts","webpack:///./src/apps/core/clients/EntityMatchingClient/EntityMatchingClient.mock.ts","webpack:///./src/apps/core/clients/EntityMatchingClient/EntityMatchingClient.ts","webpack:///./src/apps/core/clients/EntityMatchingClient/EntityMatchingClient.types.ts","webpack:///./src/apps/core/clients/EntityMatchingClient/EntityMatchingClient.utils.ts","webpack:///./src/apps/core/clients/EntityMatchingClient/__mocks__/EntityMatching.mocks.ts","webpack:///./src/apps/core/clients/EntityMatchingClient/index.ts","webpack:///./src/apps/core/clients/EventClient/EventClient.mock.ts","webpack:///./src/apps/core/clients/EventClient/EventClient.ts","webpack:///./src/apps/core/clients/EventClient/EventClient.types.ts","webpack:///./src/apps/core/clients/EventClient/__mocks__/MockTwinEvents.ts","webpack:///./src/apps/core/clients/EventClient/index.ts","webpack:///./src/apps/core/clients/HierarchyClient/HierarchyClient.mock.ts","webpack:///./src/apps/core/clients/HierarchyClient/HierarchyClient.ts","webpack:///./src/apps/core/clients/HierarchyClient/HierarchyClient.types.ts","webpack:///./src/apps/core/clients/HierarchyClient/index.ts","webpack:///./src/apps/core/clients/LakehouseClient/LakehouseClient.mock.ts","webpack:///./src/apps/core/clients/LakehouseClient/LakehouseClient.ts","webpack:///./src/apps/core/clients/LakehouseClient/LakehouseClient.types.ts","webpack:///./src/apps/core/clients/LakehouseClient/index.ts","webpack:///./src/apps/core/clients/MappingClient/MappingClient.ts","webpack:///./src/apps/core/clients/MappingClient/MappingClient.types.ts","webpack:///./src/apps/core/clients/MappingClient/MappingClient.utils.ts","webpack:///./src/apps/core/clients/MappingClient/__mocks__/MappingClient.mock.ts","webpack:///./src/apps/core/clients/MappingClient/index.ts","webpack:///./src/apps/core/clients/ModelDetailsClient/ModelDetailsClient.mock.ts","webpack:///./src/apps/core/clients/ModelDetailsClient/ModelDetailsClient.ts","webpack:///./src/apps/core/clients/ModelDetailsClient/ModelDetailsClient.types.ts","webpack:///./src/apps/core/clients/ModelDetailsClient/__mocks__/MockModelDetails.ts","webpack:///./src/apps/core/clients/ModelDetailsClient/index.ts","webpack:///./src/apps/core/clients/ModelGenerationTwinInformationClient/ModelGenerationTwinInformationClient.mock.ts","webpack:///./src/apps/core/clients/ModelGenerationTwinInformationClient/ModelGenerationTwinInformationClient.types.ts","webpack:///./src/apps/core/clients/ModelGenerationTwinInformationClient/_mocks_/MockModelGenerationTwinInformation.ts","webpack:///./src/apps/core/clients/ModelGenerationTwinInformationClient/index.ts","webpack:///./src/apps/core/clients/ModelInformationClient/ModelInformationClient.mock.ts","webpack:///./src/apps/core/clients/ModelInformationClient/ModelInformationClient.ts","webpack:///./src/apps/core/clients/ModelInformationClient/ModelInformationClient.types.ts","webpack:///./src/apps/core/clients/ModelInformationClient/__mocks__/MockModelInformation.ts","webpack:///./src/apps/core/clients/ModelInformationClient/index.ts","webpack:///./src/apps/core/clients/ModelingJobsClient/ModelingJobsClient.mock.ts","webpack:///./src/apps/core/clients/ModelingJobsClient/ModelingJobsClient.ts","webpack:///./src/apps/core/clients/ModelingJobsClient/ModelingJobsClient.types.ts","webpack:///./src/apps/core/clients/ModelingJobsClient/__mocks__/MockModelingJobs.ts","webpack:///./src/apps/core/clients/ModelingJobsClient/index.ts","webpack:///./src/apps/core/clients/PredictedModelTwinInformationClient/PredictedModelTwinInformationClient.mock.ts","webpack:///./src/apps/core/clients/PredictedModelTwinInformationClient/PredictedModelTwinInformationClient.ts","webpack:///./src/apps/core/clients/PredictedModelTwinInformationClient/PredictedModelTwinInformationClient.types.ts","webpack:///./src/apps/core/clients/PredictedModelTwinInformationClient/__mocks__/MockPredictedModelTwinInformation.ts","webpack:///./src/apps/core/clients/PredictedModelTwinInformationClient/index.ts","webpack:///./src/apps/core/clients/TimeSeriesClient/TimeSeriesClient.mock.ts","webpack:///./src/apps/core/clients/TimeSeriesClient/TimeSeriesClient.ts","webpack:///./src/apps/core/clients/TimeSeriesClient/TimeSeriesClient.types.ts","webpack:///./src/apps/core/clients/TimeSeriesClient/TimeSeriesClient.utils.ts","webpack:///./src/apps/core/clients/TimeSeriesClient/__mocks__/MockTimeSeries.ts","webpack:///./src/apps/core/clients/TimeSeriesClient/index.ts","webpack:///./src/apps/core/clients/TridentExtension/index.ts","webpack:///./src/apps/core/clients/TridentExtension/mock/ExtensionClientMock.ts","webpack:///./src/apps/core/clients/TwinClient/TwinClient.mock.ts","webpack:///./src/apps/core/clients/TwinClient/TwinClient.ts","webpack:///./src/apps/core/clients/TwinClient/TwinClient.types.ts","webpack:///./src/apps/core/clients/TwinClient/__mocks__/MockTwins.ts","webpack:///./src/apps/core/clients/TwinClient/index.ts","webpack:///./src/apps/core/clients/TwinDetailsClient/TwinDetailsClient.mock.ts","webpack:///./src/apps/core/clients/TwinDetailsClient/TwinDetailsClient.ts","webpack:///./src/apps/core/clients/TwinDetailsClient/TwinDetailsClient.types.ts","webpack:///./src/apps/core/clients/TwinDetailsClient/index.ts","webpack:///./src/apps/core/clients/common/MwcTokenProvider.mock.ts","webpack:///./src/apps/core/clients/common/MwcTokenProvider.ts","webpack:///./src/apps/core/clients/common/MwcTokenProvider.types.ts","webpack:///./src/apps/core/clients/common/index.ts","webpack:///./src/apps/core/clients/index.ts","webpack:///./src/apps/core/constants/debugging.ts","webpack:///./src/apps/core/constants/environments.ts","webpack:///./src/apps/core/constants/featureSwitches.ts","webpack:///./src/apps/core/constants/index.ts","webpack:///./src/apps/core/constants/routing.ts","webpack:///./src/apps/core/constants/searchParams.ts","webpack:///./src/apps/core/constants/styles.ts","webpack:///./src/apps/core/constants/theme.ts","webpack:///./src/apps/core/contexts/EnvironmentContext/EnvironmentContext.tsx","webpack:///./src/apps/core/contexts/EnvironmentContext/EnvironmentContext.types.ts","webpack:///./src/apps/core/contexts/EnvironmentContext/index.ts","webpack:///./src/apps/core/contexts/FeatureSwitchContext/FeatureSwitchContext.tsx","webpack:///./src/apps/core/contexts/FeatureSwitchContext/FeatureSwitchContext.types.ts","webpack:///./src/apps/core/contexts/FeatureSwitchContext/FeatureSwitchContext.utils.ts","webpack:///./src/apps/core/contexts/FeatureSwitchContext/index.ts","webpack:///./src/apps/core/contexts/SharedStateContext/SharedStateContext.state.tsx","webpack:///./src/apps/core/contexts/SharedStateContext/SharedStateContext.tsx","webpack:///./src/apps/core/contexts/SharedStateContext/index.ts","webpack:///./src/apps/core/contexts/TridentContext/TridentContext.tsx","webpack:///./src/apps/core/contexts/TridentContext/TridentContext.types.ts","webpack:///./src/apps/core/contexts/TridentContext/index.ts","webpack:///./src/apps/core/contexts/index.ts","webpack:///./src/apps/core/hooks/externalExtensions/index.ts","webpack:///./src/apps/core/hooks/externalExtensions/useDataPipelinesExtension.ts","webpack:///./src/apps/core/hooks/index.ts","webpack:///./src/apps/core/hooks/useAppRouteProps.ts","webpack:///./src/apps/core/hooks/useArtifactClient.ts","webpack:///./src/apps/core/hooks/useCalculationClient.ts","webpack:///./src/apps/core/hooks/useDebugLogging.ts","webpack:///./src/apps/core/hooks/useEffectOnce.ts","webpack:///./src/apps/core/hooks/useEntityMatchingClient.ts","webpack:///./src/apps/core/hooks/useEnvironmentSettings.ts","webpack:///./src/apps/core/hooks/useEventClient.ts","webpack:///./src/apps/core/hooks/useExtensionClient.ts","webpack:///./src/apps/core/hooks/useFeatureSwitches.ts","webpack:///./src/apps/core/hooks/useHierarchyClient.ts","webpack:///./src/apps/core/hooks/useLakehouseClient.ts","webpack:///./src/apps/core/hooks/useMappingClient.ts","webpack:///./src/apps/core/hooks/useModelGenerationTwinInformationClient.ts","webpack:///./src/apps/core/hooks/useModelingJobsClient.ts","webpack:///./src/apps/core/hooks/useNavigation.ts","webpack:///./src/apps/core/hooks/usePredictedModelTwinInformationClient.ts","webpack:///./src/apps/core/hooks/useSettings.ts","webpack:///./src/apps/core/hooks/useTimeSeriesClient.ts","webpack:///./src/apps/core/hooks/useTwinClient.ts","webpack:///./src/apps/core/hooks/useTwinDetailsClient.ts","webpack:///./src/apps/core/hooks/useWorkspaceClient.ts","webpack:///./src/apps/core/index.ts","webpack:///./src/apps/core/models/LakehouseTypes.ts","webpack:///./src/apps/core/models/Types.ts","webpack:///./src/apps/core/models/environment.ts","webpack:///./src/apps/core/models/index.ts","webpack:///./src/apps/core/models/pathItem.ts","webpack:///./src/apps/core/models/requests.ts","webpack:///./src/apps/core/models/responses.ts","webpack:///./src/apps/core/models/routeParams.ts","webpack:///./src/apps/core/regex/index.ts","webpack:///./src/apps/core/regex/language.ts","webpack:///./src/apps/core/regex/tokenizer.ts","webpack:///./src/apps/core/regex/translator.ts","webpack:///./src/apps/core/regex/types.ts","webpack:///./src/apps/core/regex/validator.ts","webpack:///./src/apps/core/telemetry/CertifiedEvents/MappingCertifiedEvents.ts","webpack:///./src/apps/core/telemetry/CertifiedEvents/ModelingCertifiedEvents.ts","webpack:///./src/apps/core/telemetry/CertifiedEvents/index.ts","webpack:///./src/apps/core/telemetry/ConsoleLogger.ts","webpack:///./src/apps/core/telemetry/ExtensionClientLogger.ts","webpack:///./src/apps/core/telemetry/Logger.ts","webpack:///./src/apps/core/telemetry/Logger.types.ts","webpack:///./src/apps/core/telemetry/config.ts","webpack:///./src/apps/core/telemetry/index.ts","webpack:///./src/apps/core/utilities/Utils.ts","webpack:///./src/apps/core/utilities/client.utils.ts","webpack:///./src/apps/core/utilities/data.utils.ts","webpack:///./src/apps/core/utilities/date.utils.ts","webpack:///./src/apps/core/utilities/index.ts","webpack:///./src/apps/core/utilities/shell.utils.ts","webpack:///./src/apps/core/utilities/stringUtils.ts","webpack:///./src/apps/core/utilities/testing.utils.ts","webpack:///./src/apps/core/utilities/timezone.utils.ts","webpack:///./src/apps/core/utilities/url.ts","webpack:///./src/apps/explorer/components/TimeSeriesChart/__mocks__/TimeseriesMockUtils.ts","webpack:///./src/localization/components/LocalizationContext/LocalizationContext.tsx","webpack:///./src/localization/components/LocalizationContext/LocalizationContext.types.ts","webpack:///./src/localization/components/LocalizationContext/__mocks__/LocalizationContext.mock.ts","webpack:///./src/localization/components/LocalizationContext/index.ts","webpack:///./src/localization/components/index.ts","webpack:///./src/localization/index.ts","webpack:///./src/localization/locale.ts","webpack:///./src/localization/resourceKeys.ts","webpack:///./src/localization/t.ts","webpack:///./src/localization/locales/ sync ^\\.\\/strings\\..*\\.json$","webpack:///ignored|c:\\repos\\powerbi\\extension-digitaloperations\\node_modules\\@azure\\storage-blob\\dist-esm\\storage-blob\\src|os","webpack:///ignored|c:\\repos\\powerbi\\extension-digitaloperations\\node_modules\\@azure\\storage-file-datalake\\dist-esm\\storage-file-datalake\\src|os","webpack:///ignored|c:\\repos\\powerbi\\extension-digitaloperations\\node_modules\\object-inspect|./util.inspect"],"sourcesContent":["import { v4 } from 'uuid';\r\nimport { DataResponse } from '../../models';\r\nimport {\r\n  CalculationClientType,\r\n  FormulaData,\r\n  FormulaListResult,\r\n  CreateFormulaResult,\r\n  UpdateFormulaResult,\r\n  FormulaElement,\r\n  FormulaRelationship,\r\n  GetFormulasByTwinIdResponse,\r\n  GetFormulaResult,\r\n} from './CalculationClient.types';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nconst DEFAULT_TWIN_ID = 'test twin id';\r\nconst DEFAULT_TWIN_ID_1 = 'test twin id 1';\r\nconst DEFAULT_TWIN_ID_2 = 'test twin id 2';\r\nexport class MockCalculationClient implements CalculationClientType {\r\n  private formulaListByTwin: Map<string, FormulaListResult> = new Map([\r\n    [DEFAULT_TWIN_ID, []],\r\n    [DEFAULT_TWIN_ID_1, [getMockFormulaData()]],\r\n    [DEFAULT_TWIN_ID_2, [getMockFormulaData(), getMockFormulaData()]],\r\n  ]);\r\n  getFormulasByTwinId(\r\n    _logConfig: Partial<FeatureEvent>,\r\n    twinId: string,\r\n  ): Promise<GetFormulasByTwinIdResponse> {\r\n    let twinIdToSearch = twinId;\r\n\r\n    // If twinIdToSearch is a test twin id, use the mapping to get the corresponding default twin id\r\n    if (!this.formulaListByTwin.has(twinIdToSearch)) {\r\n      // If twinIdToSearch is not in formulaListByTwin, assign a default twin id based on the last digit of twinIdToSearch\r\n      // TODO: Remove later, no good way to associate Hierarchy Mock Data with Formula Mock Data\r\n      const lastDigit = parseInt(twinIdToSearch.slice(-1));\r\n      if (lastDigit === 2) {\r\n        twinIdToSearch = DEFAULT_TWIN_ID;\r\n      } else {\r\n        twinIdToSearch =\r\n          lastDigit % 2 === 0 ? DEFAULT_TWIN_ID_2 : DEFAULT_TWIN_ID_1;\r\n      }\r\n    }\r\n\r\n    return Promise.resolve({\r\n      data: {\r\n        data: this.formulaListByTwin.get(twinIdToSearch) || [],\r\n        continuationToken: undefined,\r\n      },\r\n      continuationToken: undefined,\r\n      state: 'success',\r\n    });\r\n  }\r\n\r\n  getFormulaById(\r\n    twinId: string,\r\n    formulaId: string,\r\n  ): Promise<DataResponse<GetFormulaResult>> {\r\n    const formulasForTwin = this.formulaListByTwin.get(twinId);\r\n    if (formulasForTwin) {\r\n      const formula = formulasForTwin.find((f) => f.id === formulaId);\r\n      if (formula) {\r\n        return Promise.resolve({\r\n          data: {\r\n            calculation: formula,\r\n          },\r\n          state: 'success',\r\n        });\r\n      }\r\n    }\r\n    return Promise.resolve({\r\n      data: null,\r\n      state: 'error',\r\n      errorCode: 'NotFound',\r\n      errorMessage: 'Formula not found',\r\n    });\r\n  }\r\n\r\n  createFormula(\r\n    _logConfig: Partial<FeatureEvent>,\r\n    twinId: string,\r\n    formula: FormulaData,\r\n  ): Promise<DataResponse<CreateFormulaResult>> {\r\n    formula.id = v4(); // give it an id\r\n    this.createUpdateFormula({}, twinId, formula);\r\n    return Promise.resolve({\r\n      data: {\r\n        calculation: formula,\r\n      },\r\n      state: 'success',\r\n    });\r\n  }\r\n  updateFormula(\r\n    twinId: string,\r\n    formula: FormulaData,\r\n  ): Promise<DataResponse<UpdateFormulaResult>> {\r\n    this.createUpdateFormula({}, twinId, formula);\r\n    return Promise.resolve({\r\n      data: { calculation: formula },\r\n      state: 'success',\r\n    });\r\n  }\r\n\r\n  deleteFormula(\r\n    _logConfig: Partial<FeatureEvent>,\r\n    twinId: string,\r\n    formulaId: string,\r\n  ): Promise<DataResponse<undefined>> {\r\n    const formulasForTwin = this.formulaListByTwin.get(twinId);\r\n    if (formulasForTwin) {\r\n      const formulaIndex = formulasForTwin.findIndex((f) => f.id === formulaId);\r\n      if (formulaIndex !== -1) {\r\n        formulasForTwin.splice(formulaIndex, 1); // remove the formula\r\n        this.formulaListByTwin.set(twinId, formulasForTwin); // update the list\r\n        return Promise.resolve({ data: undefined, state: 'success' });\r\n      }\r\n    }\r\n    return Promise.resolve({\r\n      data: undefined,\r\n      state: 'error',\r\n      errorCode: 'NotFound',\r\n      errorMessage: 'Formula not found',\r\n    });\r\n  }\r\n\r\n  private createUpdateFormula(\r\n    _logConfig: Partial<FeatureEvent>,\r\n    twinId: string,\r\n    formula: FormulaData,\r\n  ): Promise<DataResponse<null>> {\r\n    const formulasForTwin = this.formulaListByTwin.get(twinId);\r\n    if (formulasForTwin) {\r\n      const formulaIndex = formulasForTwin.findIndex(\r\n        (f) => f.id === formula.id,\r\n      );\r\n      // update existing\r\n      if (formulaIndex !== -1) {\r\n        formulasForTwin[formulaIndex] = formula;\r\n      } else {\r\n        formulasForTwin.push(formula);\r\n      }\r\n      this.formulaListByTwin.set(twinId, formulasForTwin);\r\n    } else {\r\n      this.formulaListByTwin.set(twinId, [formula]);\r\n    }\r\n    return Promise.resolve({ data: null, state: 'success' });\r\n  }\r\n}\r\n\r\nconst getMockFormulaData = (): FormulaData => {\r\n  const input1: FormulaElement = {\r\n    type: 'InputProperty',\r\n    id: 'oven.status',\r\n    displayName: 'Oven.Status',\r\n    propertySelector: {\r\n      propertyType: 'Attribute',\r\n      referenceId: 'Status',\r\n    },\r\n    twinSelector: {\r\n      referenceId: 'Oven',\r\n      twinSelectorType: 'Twin',\r\n    },\r\n  };\r\n\r\n  const input2: FormulaElement = {\r\n    type: 'InputProperty',\r\n    id: 'oven.ScheduledOpertaionTime',\r\n    displayName: 'Oven.ScheduledOpertaionTime',\r\n    propertySelector: {\r\n      propertyType: 'Attribute',\r\n      referenceId: 'ScheduledOpertaionTime',\r\n    },\r\n    twinSelector: {\r\n      referenceId: 'Oven',\r\n      twinSelectorType: 'Twin',\r\n    },\r\n  };\r\n\r\n  const input3: FormulaElement = {\r\n    type: 'InputProperty',\r\n    id: 'Oven.ScheduledServiceState',\r\n    displayName: 'Oven.ScheduledServiceState',\r\n    propertySelector: {\r\n      propertyType: 'Attribute',\r\n      referenceId: 'ScheduledServiceState',\r\n    },\r\n    twinSelector: {\r\n      referenceId: 'Oven',\r\n      twinSelectorType: 'Twin',\r\n    },\r\n  };\r\n\r\n  const input4: FormulaElement = {\r\n    type: 'InputProperty',\r\n    id: 'oven.scheduledserviceend',\r\n    displayName: 'Oven.ScheduledServiceEnd',\r\n    propertySelector: {\r\n      propertyType: 'Attribute',\r\n      referenceId: 'ScheduledServiceEnd',\r\n    },\r\n    twinSelector: {\r\n      referenceId: 'Oven',\r\n      twinSelectorType: 'Twin',\r\n    },\r\n  };\r\n\r\n  const expression1: FormulaElement = {\r\n    type: 'Function',\r\n    id: 'exp1',\r\n    displayName: 'upTime',\r\n    dataType: 'Duration',\r\n  };\r\n\r\n  const expression2: FormulaElement = {\r\n    type: 'Expression',\r\n    id: 'exp2',\r\n    displayName: 'plannedDowntime',\r\n    expression: `@${input4.displayName} - @${input3.displayName}`,\r\n  };\r\n\r\n  const expression3: FormulaElement = {\r\n    type: 'Expression',\r\n    id: 'exp3',\r\n    displayName: 'exp_2',\r\n    expression: `@${expression2.displayName} /( @${input2.displayName} - @${expression1.displayName} )`,\r\n  };\r\n\r\n  const output1: FormulaElement = {\r\n    type: 'OutputProperty',\r\n    id: 'out1',\r\n    displayName: 'Oven.Availability',\r\n    propertySelector: {\r\n      propertyType: 'Attribute',\r\n      referenceId: 'ScheduledServiceEnd',\r\n    },\r\n    twinSelector: {\r\n      referenceId: 'Oven',\r\n      twinSelectorType: 'Twin',\r\n    },\r\n  };\r\n\r\n  const in1ToExp1: FormulaRelationship = {\r\n    source: input1.id,\r\n    target: expression1.id,\r\n  };\r\n  const in3ToExp2: FormulaRelationship = {\r\n    source: input3.id,\r\n    target: expression2.id,\r\n  };\r\n  const in4ToExp2: FormulaRelationship = {\r\n    source: input4.id,\r\n    target: expression2.id,\r\n  };\r\n  const in2ToExp3: FormulaRelationship = {\r\n    source: input2.id,\r\n    target: expression3.id,\r\n  };\r\n  const exp1ToExp3: FormulaRelationship = {\r\n    source: expression1.id,\r\n    target: expression3.id,\r\n  };\r\n  const exp2ToExp3: FormulaRelationship = {\r\n    source: expression2.id,\r\n    target: expression3.id,\r\n  };\r\n  const exp3ToOut1: FormulaRelationship = {\r\n    source: expression3.id,\r\n    target: output1.id,\r\n  };\r\n\r\n  const formulaData: FormulaData = {\r\n    id: 'default-formula',\r\n    elements: [\r\n      input1,\r\n      input2,\r\n      input3,\r\n      input4,\r\n      expression1,\r\n      expression2,\r\n      expression3,\r\n      output1,\r\n    ],\r\n    edges: [\r\n      in1ToExp1,\r\n      in3ToExp2,\r\n      in4ToExp2,\r\n      in2ToExp3,\r\n      exp1ToExp3,\r\n      exp2ToExp3,\r\n      exp3ToOut1,\r\n    ],\r\n    displayName: 'Sample formula',\r\n  };\r\n  return formulaData;\r\n};\r\n","import {\r\n  CalculationClientType,\r\n  FormulaData,\r\n  CreateFormulaResult,\r\n  UpdateFormulaResult,\r\n  GetFormulasByTwinIdResponse,\r\n  GetFormulaResult,\r\n} from './CalculationClient.types';\r\nimport { DataResponse } from '../../models';\r\nimport {\r\n  API_VERSION,\r\n  BaseClient,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport { ExtensionClientAPI } from '@trident/extension-client';\r\nimport {\r\n  convertCalculationToClientModel,\r\n  convertCalculationToServerModel,\r\n} from './CalculationClient.utils';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport class CalculationClient\r\n  extends BaseClient\r\n  implements CalculationClientType\r\n{\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n  getFormulasByTwinId = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    twinId: string,\r\n    continuationToken: string | undefined,\r\n  ): Promise<GetFormulasByTwinIdResponse> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/TwinCalculations/{twinId}/calculationDefinitions',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n      )\r\n      .get({\r\n        queryParameters: {\r\n          continuationToken: continuationToken,\r\n        },\r\n      });\r\n\r\n    // handle errors\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status || 'Unknown error',\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    // handle success\r\n    const result = response.body;\r\n    return {\r\n      state: 'success',\r\n      data: {\r\n        continuationToken: result?.continuationToken,\r\n        data:\r\n          result?.value?.map((x) => convertCalculationToClientModel(x)) ?? [],\r\n      },\r\n    };\r\n  };\r\n\r\n  getFormulaById = async (\r\n    twinId: string,\r\n    formulaId: string,\r\n  ): Promise<DataResponse<GetFormulaResult>> => {\r\n    const client = await this.getClient();\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/TwinCalculations/{twinId}/calculationDefinitions/{calculationId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n        formulaId,\r\n      )\r\n      .get();\r\n\r\n    // handle errors\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status || 'Unknown error',\r\n        errorMessage: response.body.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    // handle success\r\n    const result = response.body;\r\n    return {\r\n      state: 'success',\r\n      data: {\r\n        calculation: convertCalculationToClientModel(result),\r\n      },\r\n    };\r\n  };\r\n\r\n  createFormula = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    twinId: string,\r\n    formula: FormulaData,\r\n  ): Promise<DataResponse<CreateFormulaResult>> => {\r\n    const client = await this.getClient(logConfig);\r\n\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/TwinCalculations/{twinId}/calculationDefinitions',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n      )\r\n      .post({\r\n        body: convertCalculationToServerModel(twinId, formula),\r\n      });\r\n\r\n    // handle errors\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status || 'Unknown error',\r\n        errorMessage: response.body.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    // handle success\r\n    const result = response.body;\r\n    return {\r\n      state: 'success',\r\n      data: {\r\n        calculation: convertCalculationToClientModel(result),\r\n      },\r\n    };\r\n  };\r\n\r\n  updateFormula = async (\r\n    twinId: string,\r\n    formula: FormulaData,\r\n  ): Promise<DataResponse<UpdateFormulaResult>> => {\r\n    const client = await this.getClient();\r\n\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/TwinCalculations/{twinId}/calculationDefinitions/{calculationId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n        formula.id,\r\n      )\r\n      .patch({\r\n        body: convertCalculationToServerModel(twinId, formula),\r\n      });\r\n\r\n    // handle errors\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status || 'Unknown error',\r\n        errorMessage: response.body.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    // handle success\r\n    const result = response.body;\r\n    return {\r\n      state: 'success',\r\n      data: {\r\n        calculation: convertCalculationToClientModel(result),\r\n      },\r\n    };\r\n  };\r\n\r\n  deleteFormula = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    twinId: string,\r\n    formulaId: string,\r\n  ): Promise<DataResponse<undefined>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/TwinCalculations/{twinId}/calculationDefinitions/{calculationId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n        formulaId,\r\n      )\r\n      .delete();\r\n\r\n    // handle errors\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.body?.code || 'Unknown error',\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    // handle success\r\n    return {\r\n      state: 'success',\r\n      data: undefined,\r\n    };\r\n  };\r\n}\r\n","import { ScheduledRunType } from '@do/insights/components/InsightsRibbon/components/ScheduleDrawer/ScheduleDrawer.types';\r\nimport { DataResponse } from '../../models';\r\nimport { WithContinuationToken } from '../Clients.types';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nexport interface FormulaData {\r\n  id: string;\r\n  displayName: string;\r\n  elements: FormulaElement[];\r\n  edges: FormulaRelationship[];\r\n  scheduleRuns?: ScheduleRun;\r\n}\r\n\r\n/**\r\n * a combination type of the different pieces that make up a formula\r\n * NOTE: the specific type can be discriminated out by using the `type` field.\r\n */\r\nexport type FormulaElement =\r\n  | FormulaInputProperty\r\n  | FormulaExpression\r\n  | FormulaFunction\r\n  | FormulaOutputProperty;\r\n\r\n/** the reference relationship between two elements */\r\nexport type FormulaRelationship = {\r\n  source: string;\r\n  target: string;\r\n};\r\n\r\nexport type ElementTypes = FormulaElement['type'];\r\n\r\nexport type PropertyType = 'Attribute' | 'TimeSeries';\r\nexport type FunctionType = AggregationFunctions | BuiltInFunctions;\r\nexport type AggregationFunctions =\r\n  | 'Average'\r\n  | 'Sum'\r\n  | 'Count'\r\n  | 'Min'\r\n  | 'Max'\r\n  | 'StandardDeviation';\r\nexport type BuiltInFunctions = 'Duration';\r\n\r\ninterface FormulaElementBase {\r\n  id: string; // auto generated, always hidden, used in the graph edges\r\n  displayName: string;\r\n  description?: string;\r\n  errorMessages?: Record<string, string>;\r\n}\r\n\r\nexport interface FormulaTwinSelector {\r\n  referenceId: string;\r\n  twinSelectorType: 'Twin'; // will expand to models in the future\r\n}\r\n\r\nexport interface FormulaPropertySelector {\r\n  referenceId: string;\r\n  propertyType: PropertyType;\r\n}\r\n\r\n/**\r\n * Status of the scheduled run.\r\n *\r\n * Possible values: Queued, Running, Completed, Failed, Scheduled, Canceled\r\n */\r\nexport type ScheduleRunStatus =\r\n  | 'Queued'\r\n  | 'Running'\r\n  | 'Completed'\r\n  | 'Failed'\r\n  | 'Scheduled'\r\n  | 'Canceled';\r\n\r\nexport interface ScheduleRun {\r\n  calculationJobStatus?: ScheduleRunStatus;\r\n  scheduleCalculation: ScheduledRunType;\r\n  /** Calculation Lookback Window. */\r\n  lookbackWindow: string;\r\n  /** Start Time Utc. */\r\n  startTimeUtc: Date;\r\n  /** Execution Frequency. */\r\n  executionFrequency: string;\r\n  /** Execution Delay. */\r\n  executionDelay: string;\r\n  /** Last calculation run Utc. */\r\n  lastCalculationRunUtc?: Date;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport interface FormulaInputProperty extends FormulaElementBase {\r\n  type: 'InputProperty';\r\n  twinSelector: FormulaTwinSelector;\r\n  propertySelector: FormulaPropertySelector;\r\n}\r\n\r\nexport interface FormulaExpression extends FormulaElementBase {\r\n  type: 'Expression';\r\n  expression: string;\r\n}\r\n\r\nexport interface FormulaFunction extends FormulaElementBase {\r\n  type: 'Function';\r\n  dataType: FunctionType;\r\n}\r\n\r\nexport interface FormulaOutputProperty extends FormulaElementBase {\r\n  type: 'OutputProperty';\r\n  twinSelector: FormulaTwinSelector;\r\n  propertySelector: FormulaPropertySelector;\r\n}\r\n\r\nexport type FormulaListResult = FormulaData[];\r\nexport type GetFormulaResult = {\r\n  calculation: FormulaData;\r\n};\r\nexport type CreateFormulaResult = {\r\n  calculation: FormulaData;\r\n};\r\nexport type UpdateFormulaResult = {\r\n  calculation: FormulaData;\r\n};\r\n\r\nexport type GetFormulasByTwinIdResponse = DataResponse<\r\n  WithContinuationToken<FormulaListResult>\r\n>;\r\n\r\nexport interface CalculationClientType {\r\n  /** get all the formulas for a given twin */\r\n  getFormulasByTwinId(\r\n    logConfig: Partial<FeatureEvent> | undefined,\r\n    twinId: string,\r\n    continuationToken: string | undefined,\r\n  ): Promise<GetFormulasByTwinIdResponse>;\r\n  /** get an existing formula for a given calculation */\r\n  getFormulaById(\r\n    twinId: string,\r\n    formulaId: string,\r\n  ): Promise<DataResponse<GetFormulaResult>>;\r\n  /** creates a new formula for the twin */\r\n  createFormula(\r\n    logConfig: Partial<FeatureEvent>,\r\n    twinId: string,\r\n    formula: FormulaData,\r\n  ): Promise<DataResponse<CreateFormulaResult>>;\r\n  /** updates an existing formula for the twin */\r\n  updateFormula(\r\n    twinId: string,\r\n    formula: FormulaData,\r\n  ): Promise<DataResponse<UpdateFormulaResult>>;\r\n  /** deletes an existing formula for the twin */\r\n  deleteFormula(\r\n    logConfig: Partial<FeatureEvent>,\r\n    twinId: string,\r\n    formulaId: string,\r\n  ): Promise<DataResponse<undefined>>;\r\n}\r\n","import {\r\n  BaseCalculationJob,\r\n  CalculationDefinition,\r\n  CalculationMetadata,\r\n  ExecutionGraph,\r\n  ImReference,\r\n  Link,\r\n  Node,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport {\r\n  FormulaData,\r\n  FormulaElement,\r\n  FormulaPropertySelector,\r\n  FormulaRelationship,\r\n  FormulaTwinSelector,\r\n  FunctionType,\r\n  ScheduleRun,\r\n  ScheduleRunStatus,\r\n} from './CalculationClient.types';\r\nimport { ScheduledRunType } from '@do/insights/components/InsightsRibbon/components/ScheduleDrawer/ScheduleDrawer.types';\r\n\r\n/** converts the server model of a calculation into the client model */\r\nexport const convertCalculationToClientModel = (\r\n  calculation: CalculationDefinition,\r\n): FormulaData => {\r\n  const metadata = calculation.calculationMetadata;\r\n  const graph = calculation.executionGraph;\r\n  return {\r\n    id: calculation.calculationId,\r\n    displayName: metadata.name,\r\n    elements: convertNodesToClientModel(graph.nodes),\r\n    edges: convertEdgesToClientModel(graph.links),\r\n    scheduleRuns: convertScheduleRunsToClientModel(calculation.calculationJob),\r\n  };\r\n};\r\n\r\nexport const convertScheduleRunsToClientModel = (\r\n  scheduleRuns: BaseCalculationJob,\r\n): ScheduleRun => {\r\n  return {\r\n    executionDelay: scheduleRuns.executionDelay,\r\n    executionFrequency: scheduleRuns.executionFrequency,\r\n    lookbackWindow: scheduleRuns.lookbackWindow,\r\n    startTimeUtc: new Date(scheduleRuns.startTimeUtc), // Creates a DATE object in UTC\r\n    scheduleCalculation: scheduleRuns.scheduleCalculation as ScheduledRunType,\r\n    calculationJobStatus:\r\n      scheduleRuns.calculationJobStatus as ScheduleRunStatus,\r\n    lastCalculationRunUtc: scheduleRuns.lastCalculationRunUtc\r\n      ? new Date(scheduleRuns.lastCalculationRunUtc)\r\n      : undefined,\r\n  };\r\n};\r\n\r\nconst convertNodesToClientModel = (nodes: Node[]): FormulaElement[] => {\r\n  if (!nodes || nodes.length === 0) {\r\n    return [];\r\n  }\r\n  const elements: FormulaElement[] = nodes.map((x) => {\r\n    switch (x.nodeType) {\r\n      case 'Input':\r\n        return {\r\n          id: x.nodeId,\r\n          displayName: x.name,\r\n          description: x.description,\r\n          type: 'InputProperty',\r\n          twinSelector: {\r\n            referenceId: x.imReference.twinSelector.referenceId,\r\n            twinSelectorType: 'Twin',\r\n          },\r\n          propertySelector: {\r\n            referenceId: x.imReference.propertySelector.referenceId,\r\n            propertyType:\r\n              x.imReference.propertySelector.propertyType === 'AttributeName'\r\n                ? 'Attribute'\r\n                : 'TimeSeries',\r\n          },\r\n          errorMessages: {},\r\n        };\r\n      case 'Expression':\r\n        return {\r\n          id: x.nodeId,\r\n          displayName: x.name,\r\n          description: x.description,\r\n          type: 'Expression',\r\n          expression: x.expression,\r\n          errorMessages: {},\r\n        };\r\n      case 'AggregateFunction':\r\n        return {\r\n          id: x.nodeId,\r\n          displayName: x.name,\r\n          description: x.description,\r\n          type: 'Function',\r\n          dataType: getClientFunctionType(x.functionSelector),\r\n          errorMessages: {},\r\n        };\r\n      case 'Output':\r\n        return {\r\n          id: x.nodeId,\r\n          displayName: x.name,\r\n          description: x.description,\r\n          type: 'OutputProperty',\r\n          twinSelector: {\r\n            referenceId: x.imReference.twinSelector.referenceId,\r\n            twinSelectorType: 'Twin',\r\n          },\r\n          propertySelector: {\r\n            referenceId: x.imReference.propertySelector.referenceId,\r\n            propertyType:\r\n              x.imReference.propertySelector.propertyType === 'AttributeName'\r\n                ? 'Attribute'\r\n                : 'TimeSeries',\r\n          },\r\n          errorMessages: {},\r\n        };\r\n    }\r\n  });\r\n  return elements;\r\n};\r\n\r\nconst convertEdgesToClientModel = (edges: Link[]): FormulaRelationship[] => {\r\n  if (!edges || edges.length === 0) {\r\n    return [];\r\n  }\r\n  const relationships: FormulaRelationship[] = edges.map((x) => {\r\n    return {\r\n      source: x.sourceId,\r\n      target: x.targetId,\r\n    };\r\n  });\r\n  return relationships;\r\n};\r\n\r\nfunction getClientFunctionType(functionSelector: string): FunctionType {\r\n  switch (functionSelector) {\r\n    case 'Sum':\r\n      return 'Sum';\r\n    case 'Average':\r\n      return 'Average';\r\n    case 'Count':\r\n      return 'Count';\r\n    case 'Minimum':\r\n      return 'Min';\r\n    case 'Maximum':\r\n      return 'Max';\r\n    case 'StandardDeviation':\r\n      return 'StandardDeviation';\r\n    default:\r\n      return functionSelector as FunctionType;\r\n  }\r\n}\r\n\r\n//#region Create/Edit formula\r\n\r\nexport const convertCalculationToServerModel = (\r\n  twinId: string,\r\n  formula: FormulaData,\r\n): CalculationDefinition => {\r\n  return {\r\n    calculationId: formula.id,\r\n    calculationJob: getCalculationJobSchedule(formula),\r\n    calculationMetadata: getCalculationMetadata(twinId, formula),\r\n    executionGraph: getExecutionGraph(formula),\r\n  };\r\n};\r\n\r\nconst getCalculationJobSchedule = (\r\n  formula: FormulaData,\r\n): BaseCalculationJob => {\r\n  return {\r\n    // Setting the default job status to 'Canceled' with Schedule Calculation set to 'Off'\r\n    calculationJobStatus: formula.scheduleRuns?.calculationJobStatus || 'Canceled',\r\n    executionDelay: formula.scheduleRuns?.executionDelay || 'PT15M',\r\n    executionFrequency: formula.scheduleRuns?.executionFrequency || 'PT15M',\r\n    lookbackWindow: formula.scheduleRuns?.lookbackWindow || 'PT30M',\r\n    scheduleCalculation: formula.scheduleRuns?.scheduleCalculation || 'Off',\r\n    startTimeUtc: (\r\n      formula.scheduleRuns?.startTimeUtc ?? new Date()\r\n    ).toISOString(), // Converts local DATE object to a UTC ISO string\r\n  };\r\n};\r\n\r\nexport const getCalculationMetadata = (\r\n  twinId: string,\r\n  formula: FormulaData,\r\n): CalculationMetadata => {\r\n  return {\r\n    calculationType: 'Twin',\r\n    twinId: twinId,\r\n    name: formula.displayName,\r\n    description: undefined,\r\n    outputPropertyName: formula.elements.find(\r\n      (x) => x.type === 'OutputProperty',\r\n    )?.displayName,\r\n  };\r\n};\r\n\r\nexport const getExecutionGraph = (formula: FormulaData): ExecutionGraph => {\r\n  return {\r\n    links: convertEdgesToServerModel(formula.edges),\r\n    nodes: convertNodesToServerModel(formula.elements),\r\n  };\r\n};\r\n\r\nconst convertInformationModelReferenceToServer = (x: {\r\n  propertySelector: FormulaPropertySelector;\r\n  twinSelector: FormulaTwinSelector;\r\n}): ImReference => {\r\n  return {\r\n    twinSelector: {\r\n      twinSelectorType: x.twinSelector.twinSelectorType,\r\n      referenceId: x.twinSelector.referenceId,\r\n    },\r\n    propertySelector: {\r\n      propertyType:\r\n        x.propertySelector.propertyType === 'Attribute'\r\n          ? 'AttributeName'\r\n          : 'TimeSeriesDataPointId',\r\n      referenceId: x.propertySelector.referenceId,\r\n    },\r\n  };\r\n};\r\n\r\nconst convertNodesToServerModel = (nodes: FormulaElement[]): Node[] => {\r\n  if (!nodes || nodes.length === 0) {\r\n    return [];\r\n  }\r\n  const elements: Node[] = nodes.map((x): Node => {\r\n    switch (x.type) {\r\n      case 'InputProperty':\r\n        return {\r\n          nodeType: 'Input',\r\n          nodeId: x.id,\r\n          name: x.displayName,\r\n          description: x.description,\r\n          imReference: convertInformationModelReferenceToServer(x),\r\n        };\r\n      case 'Expression':\r\n        return {\r\n          nodeType: 'Expression',\r\n          nodeId: x.id,\r\n          name: x.displayName,\r\n          description: x.description,\r\n          expression: x.expression,\r\n        };\r\n      case 'Function':\r\n        return {\r\n          nodeType: 'AggregateFunction',\r\n          nodeId: x.id,\r\n          name: x.displayName,\r\n          description: x.description,\r\n          functionSelector: getServerFunctionType(x.dataType),\r\n        };\r\n      case 'OutputProperty':\r\n        return {\r\n          nodeType: 'Output',\r\n          nodeId: x.id,\r\n          name: x.displayName,\r\n          description: x.description,\r\n          imReference: convertInformationModelReferenceToServer(x),\r\n        };\r\n    }\r\n  });\r\n  return elements;\r\n};\r\n\r\nfunction getServerFunctionType(dataType: string): string {\r\n  switch (dataType) {\r\n    case 'Sum':\r\n      return 'Sum';\r\n    case 'Average':\r\n      return 'Average';\r\n    case 'Count':\r\n      return 'Count';\r\n    case 'Min':\r\n      return 'Minimum';\r\n    case 'Max':\r\n      return 'Maximum';\r\n    case 'StandardDeviation':\r\n      return 'StandardDeviation';\r\n    default:\r\n      return dataType;\r\n  }\r\n}\r\n\r\nconst convertEdgesToServerModel = (edges: FormulaRelationship[]): Link[] => {\r\n  if (!edges || edges.length === 0) {\r\n    return [];\r\n  }\r\n  const relationships: Link[] = edges.map((x): Link => {\r\n    return {\r\n      sourceId: x.source,\r\n      targetId: x.target,\r\n    };\r\n  });\r\n  return relationships;\r\n};\r\n\r\n","export * from './CalculationClient';\r\nexport * from './CalculationClient.mock';\r\nexport * from './CalculationClient.types';\r\nexport * from './CalculationClient';\r\n","import { FeatureEvent, Status } from '@trident/certified-events';\r\nimport * as DigitalOperations from '@microsoft/digital-operations.sdk';\r\nimport { IMwcTokenProvider, getMwcTokenProvider } from '../common';\r\nimport { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { getLogger } from '../../telemetry';\r\n\r\nexport const API_VERSION = 'v1';\r\ninterface ErrorResponse {\r\n  status: string;\r\n  body: DigitalOperations.FabricApiErrorResponseOutput;\r\n}\r\n\r\ninterface AsyncResponse {\r\n  status: '202';\r\n  headers: {\r\n    location: string;\r\n  };\r\n}\r\n\r\nexport type LogConfigEvent = Partial<FeatureEvent>;\r\n\r\nexport abstract class BaseClient {\r\n  protected readonly workspaceId: string;\r\n  protected readonly artifactId: string;\r\n  private readonly capacityId: string;\r\n  protected readonly mwcTokenProvider: IMwcTokenProvider;\r\n  protected readonly extensionClient: ExtensionClientAPI | undefined;\r\n  private client: DigitalOperations.DigitalOperationsClient | undefined;\r\n  private logConfig: LogConfigEvent | undefined;\r\n\r\n  protected getClient = async (logConfig?: LogConfigEvent) => {\r\n    this.logConfig = logConfig;\r\n\r\n    if (!this.client) {\r\n      this.client = await this.getClientInstance();\r\n    }\r\n    return this.client;\r\n  };\r\n\r\n  /** checks if the response is empty or returned a status beside 200 */\r\n  protected isErrorResponse = <T extends { status: string }>(\r\n    response: T | ErrorResponse | null | undefined,\r\n  ): response is ErrorResponse | null | undefined => {\r\n    return (\r\n      !response ||\r\n      (response.status !== '200' &&\r\n        response.status !== '201' &&\r\n        response.status !== '202' &&\r\n        response.status !== '204')\r\n    );\r\n  };\r\n\r\n  protected isAsyncResponse = <T extends { status: string }>(\r\n    response: T | AsyncResponse | null | undefined,\r\n  ): response is AsyncResponse | null | undefined => {\r\n    return response?.status === '202'; // It can't be async response if there is no response\r\n  };\r\n\r\n  private getClientInstance = async () => {\r\n    const token = await this.mwcTokenProvider.getMWCToken(\r\n      {\r\n        artifactObjectId: this.artifactId,\r\n        capacityObjectId: this.capacityId,\r\n        workspaceObjectId: this.workspaceId,\r\n      },\r\n      'DO',\r\n    );\r\n\r\n    return DigitalOperations.default({\r\n      baseUrl: `https://${token.targetUriHost}/webapi/capacities/${this.capacityId}/workloads/DO/DigitalOperationsService/direct`, // This feels hacky\r\n      retryOptions: {\r\n        maxRetries: 0,\r\n      },\r\n      additionalPolicies: [\r\n        {\r\n          policy: {\r\n            name: 'MsTokenPolicy',\r\n            // we shouldn't be hitting the real client in Jest so this will never fire\r\n            /* istanbul ignore next */\r\n            sendRequest: async (request, next) => {\r\n              // Creating a local copy of the class variable to reduce the chance of the object\r\n              // being modified in parallel or having stale data from a previous request\r\n              let logConfig = { ...this.logConfig };\r\n              let startTime;\r\n              let endTime;\r\n              let response;\r\n              let activityStatus: Status = Status.Failed; // Default to failed so we get alerted if anything unexpected happens\r\n              let activityAttributes: Record<string, string> | undefined;\r\n\r\n              try {\r\n                // get a fresh token if we need to\r\n                const freshToken = await this.mwcTokenProvider.getMWCToken(\r\n                  {\r\n                    artifactObjectId: this.artifactId,\r\n                    capacityObjectId: this.capacityId,\r\n                    workspaceObjectId: this.workspaceId,\r\n                  },\r\n                  'DO',\r\n                );\r\n                request.headers.set(\r\n                  'Authorization',\r\n                  `MwcToken ${freshToken.token}`,\r\n                );\r\n\r\n                // Make the request\r\n                startTime = new Date();\r\n                response = await next(request);\r\n              } catch (e) {\r\n                if (logConfig) {\r\n                  if (e instanceof Error) {\r\n                    activityStatus = Status.Failed;\r\n                    activityAttributes = {\r\n                      errorMessage: e.message,\r\n                    };\r\n                  }\r\n                }\r\n                throw e;\r\n              } finally {\r\n                endTime = new Date();\r\n                if (logConfig) {\r\n                  if (\r\n                    response &&\r\n                    response.status >= 200 &&\r\n                    response.status <= 299\r\n                  ) {\r\n                    activityStatus = Status.Succeeded;\r\n                  } else if (\r\n                    response &&\r\n                    response.status >= 400 &&\r\n                    response.status <= 499\r\n                  ) {\r\n                    activityStatus = Status.SucceededWithErrors; // Used for user errors\r\n                    activityAttributes = {\r\n                      errorMessage: response.bodyAsText ?? 'Unknown error',\r\n                    };\r\n                  } else if (\r\n                    response &&\r\n                    response.status >= 500 &&\r\n                    response.status <= 599\r\n                  ) {\r\n                    activityStatus = Status.Failed;\r\n                    activityAttributes = {\r\n                      errorMessage: response?.bodyAsText ?? 'Unknown error',\r\n                    };\r\n                  }\r\n\r\n                  // Update logConfig\r\n                  logConfig = {\r\n                    ...logConfig,\r\n                    resultCode: response?.status.toString(),\r\n                    activityStatus,\r\n                    activityAttributes,\r\n                    operationStartTime: startTime?.toISOString(),\r\n                    operationEndTime: endTime?.toISOString(),\r\n                  };\r\n\r\n                  // Log the event\r\n                  getLogger().logStandardizedCertifiedEvent(logConfig);\r\n                }\r\n              }\r\n              return response;\r\n            },\r\n          },\r\n          position: 'perCall',\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    this.workspaceId = workspaceId;\r\n    this.artifactId = artifactId;\r\n    this.capacityId = capacityId;\r\n    this.mwcTokenProvider = getMwcTokenProvider(extensionClient);\r\n    this.extensionClient = extensionClient;\r\n  }\r\n}\r\n","import { _LocalizationClient } from '@trident/extension-client/src/lib/clients/non-public/localization-client';\r\nimport { DataResponse } from '../../models';\r\nimport { delay } from '../../utilities/client.utils';\r\nimport {\r\n  EntityMatchingClientType,\r\n  EntityMatchingResultPagedCollection,\r\n  BulkRecordLinkageRequest,\r\n  BulkRecordLinkageResponse,\r\n  EntityMatchingJobExist,\r\n  EntityMatchingDatasetsResponse,\r\n  EntityMatchingFuzzyConfiguration,\r\n  EntityMatchingRuleBasedConfiguration,\r\n  EntityMatchingAlgorithmType,\r\n  EntityMatchingPipelineRunResponse,\r\n  EntityMatchingPipeline,\r\n  RelationshipTypeSelected,\r\n} from './EntityMatchingClient.types';\r\nimport {\r\n  mockBulkRecordLinkageResponse,\r\n  mockEntityMatchingResultPagedCollection,\r\n  mockEntityMatchingResultPagedCollectionWithContinuationToken,\r\n} from './__mocks__/EntityMatching.mocks';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport class MockEntityMatchingClient implements EntityMatchingClientType {\r\n  deletePipeline = (\r\n    _logConfig: Partial<FeatureEvent>,\r\n    _pipelineId: string,\r\n  ): Promise<DataResponse<undefined>> => {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: undefined,\r\n    });\r\n  };\r\n  getPipelineList = async (\r\n    _logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<EntityMatchingPipeline[]>> => {\r\n    await delay(500);\r\n    const mockResponseData: EntityMatchingPipeline[] = [\r\n      {\r\n        id: 'pipeline_001',\r\n        name: 'Assembly line twin matching',\r\n        status: 'Succeeded',\r\n        runs: [\r\n          {\r\n            runId: 'run_001',\r\n            startedTime: '2021-08-01T00:00:00Z',\r\n            status: 'Succeeded',\r\n          },\r\n        ],\r\n        configuration: {\r\n          algorithmType: EntityMatchingAlgorithmType.FUZZY,\r\n          relationshipType: 'isChildOf',\r\n          customRelationshipType: '',\r\n          relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n          defaultThreshold: 0.8,\r\n          pipelineName: 'Assembly line twin matching',\r\n          sourceDataset: {\r\n            name: 'sourceDataset',\r\n            matchingConditions: [],\r\n            columnName: 'sourceColumn',\r\n          },\r\n          targetDataset: {\r\n            name: 'targetDataset',\r\n            matchingConditions: [],\r\n            columnName: 'targetColumn',\r\n          },\r\n          comparisons: [\r\n            {\r\n              sourceDatasetColumn: 'twinId',\r\n              targetDatasetColumn: 'twinId',\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      {\r\n        id: 'pipeline_002',\r\n        name: 'Bread line twin matching',\r\n        status: 'InProgress',\r\n        configuration: {\r\n          algorithmType: EntityMatchingAlgorithmType.FUZZY,\r\n          defaultThreshold: 0.8,\r\n          pipelineName: 'Bread line twin matching',\r\n          relationshipType: 'isChildOf',\r\n          customRelationshipType: '',\r\n          relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n          sourceDataset: {\r\n            name: 'sourceDataset',\r\n            matchingConditions: [],\r\n            columnName: 'sourceColumn',\r\n          },\r\n          targetDataset: {\r\n            name: 'targetDataset',\r\n            matchingConditions: [],\r\n            columnName: 'targetColumn',\r\n          },\r\n          comparisons: [\r\n            {\r\n              sourceDatasetColumn: 'twinId',\r\n              targetDatasetColumn: 'twinId',\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    ];\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: mockResponseData,\r\n    });\r\n  };\r\n  runPipeline = async (\r\n    _logConfig: Partial<FeatureEvent>,\r\n    pipelineId: string,\r\n  ): Promise<DataResponse<EntityMatchingPipelineRunResponse>> => {\r\n    await delay(500);\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        pipelineId: pipelineId,\r\n        configuration: {\r\n          algorithmType: EntityMatchingAlgorithmType.FUZZY,\r\n          defaultThreshold: 0.8,\r\n          pipelineName: 'mock pipeline name',\r\n          relationshipTypeSelected: 'default',\r\n          customRelationshipType: '',\r\n          sourceDataset: {\r\n            datasetName: 'mockSourceDataset',\r\n            matchingConditions: [],\r\n          },\r\n          targetDataset: {\r\n            datasetName: 'mockTargetDataset',\r\n            matchingConditions: [],\r\n          },\r\n          matchingMethod: 'SimpleFuzzyMatch',\r\n          comparisons: [],\r\n        },\r\n        id: pipelineId,\r\n        name: 'mock pipeline name',\r\n      },\r\n    } as any);\r\n  };\r\n  createPipeline = async (\r\n    _logConfig: Partial<FeatureEvent>,\r\n    configuration:\r\n      | EntityMatchingFuzzyConfiguration\r\n      | EntityMatchingRuleBasedConfiguration,\r\n  ): Promise<DataResponse<EntityMatchingPipeline>> => {\r\n    await delay(500); // Fake delay to view pending results in Fabric\r\n    if (configuration.algorithmType === EntityMatchingAlgorithmType.FUZZY) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          pipelineId: 'mock-pipeline-id',\r\n          configuration: {\r\n            algorithmType: EntityMatchingAlgorithmType.FUZZY,\r\n            defaultThreshold: 0.8,\r\n            pipelineName: configuration.pipelineName,\r\n            relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n            customRelationshipType: '',\r\n            relationshipType: 'isChildOf',\r\n            sourceDataset: {\r\n              name: configuration.sourceDataset.name,\r\n              matchingConditions: [],\r\n              columnName: configuration.sourceDataset.columnName,\r\n            },\r\n            targetDataset: {\r\n              name: configuration.targetDataset.name,\r\n              matchingConditions: [],\r\n              columnName: configuration.targetDataset.columnName,\r\n            },\r\n            comparisons: [...configuration.comparisons],\r\n          },\r\n          id: 'mock-pipeline-id',\r\n          name: configuration.pipelineName,\r\n        } as EntityMatchingPipeline,\r\n      });\r\n    }\r\n    if (\r\n      configuration.algorithmType === EntityMatchingAlgorithmType.RULE_BASED\r\n    ) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          pipelineId: 'mock-pipeline-id',\r\n          configuration: {\r\n            algorithmType: EntityMatchingAlgorithmType.RULE_BASED,\r\n            relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n            pipelineName: configuration.pipelineName,\r\n            customRelationshipType: '',\r\n            relationshipType: 'isChildOf',\r\n            sourceDataset: {\r\n              name: configuration.sourceDataset.name,\r\n              matchingConditions: [],\r\n              columnName: configuration.sourceDataset.columnName,\r\n            },\r\n            rules: [],\r\n            targetDataset: {\r\n              name: configuration.targetDataset.name,\r\n              matchingConditions: [],\r\n              columnName: configuration.targetDataset.columnName,\r\n            },\r\n            comparisons: [],\r\n          },\r\n          id: 'mock-pipeline-id',\r\n          name: configuration.pipelineName,\r\n        } as EntityMatchingPipeline,\r\n      });\r\n    }\r\n    return Promise.reject({\r\n      state: 'error',\r\n      message: 'Invalid algorithm type',\r\n    });\r\n  };\r\n  updatePipeline = async (\r\n    _logConfig: Partial<FeatureEvent>,\r\n    _pipelineId: string,\r\n    configuration:\r\n      | EntityMatchingFuzzyConfiguration\r\n      | EntityMatchingRuleBasedConfiguration,\r\n  ): Promise<DataResponse<EntityMatchingPipeline>> => {\r\n    await delay(500); // Fake delay to view pending results in Fabric\r\n    if (configuration.algorithmType === EntityMatchingAlgorithmType.FUZZY) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          pipelineId: 'mock-pipeline-id',\r\n          configuration: {\r\n            algorithmType: EntityMatchingAlgorithmType.FUZZY,\r\n            defaultThreshold: 0.8,\r\n            pipelineName: configuration.pipelineName,\r\n            relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n            customRelationshipType: '',\r\n            relationshipType: 'isChildOf',\r\n            sourceDataset: {\r\n              name: configuration.sourceDataset.name,\r\n              matchingConditions: [],\r\n              columnName: configuration.sourceDataset.columnName,\r\n            },\r\n            targetDataset: {\r\n              name: configuration.targetDataset.name,\r\n              matchingConditions: [],\r\n              columnName: configuration.targetDataset.columnName,\r\n            },\r\n            comparisons: [...configuration.comparisons],\r\n          },\r\n          id: 'mock-pipeline-id',\r\n          name: configuration.pipelineName,\r\n        } as EntityMatchingPipeline,\r\n      });\r\n    }\r\n    if (\r\n      configuration.algorithmType === EntityMatchingAlgorithmType.RULE_BASED\r\n    ) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          pipelineId: 'mock-pipeline-id',\r\n          configuration: {\r\n            algorithmType: EntityMatchingAlgorithmType.RULE_BASED,\r\n            relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n            pipelineName: configuration.pipelineName,\r\n            customRelationshipType: '',\r\n            relationshipType: 'isChildOf',\r\n            sourceDataset: {\r\n              name: configuration.sourceDataset.name,\r\n              matchingConditions: [],\r\n              columnName: configuration.sourceDataset.columnName,\r\n            },\r\n            rules: [],\r\n            targetDataset: {\r\n              name: configuration.targetDataset.name,\r\n              matchingConditions: [],\r\n              columnName: configuration.targetDataset.columnName,\r\n            },\r\n            comparisons: [],\r\n          },\r\n          id: 'mock-pipeline-id',\r\n          name: configuration.pipelineName,\r\n        } as EntityMatchingPipeline,\r\n      });\r\n    }\r\n    return Promise.reject({\r\n      state: 'error',\r\n      message: 'Invalid algorithm type',\r\n    });\r\n  };\r\n  getResults = async (\r\n    _logConfig: Partial<FeatureEvent>,\r\n    _pipelineId: string,\r\n    runId: string,\r\n    _filter?: string,\r\n    _orderby?: string[],\r\n    _skip?: number,\r\n    _top?: number,\r\n    continuationToken?: string,\r\n  ): Promise<DataResponse<EntityMatchingResultPagedCollection>> => {\r\n    await delay(300); // Fake delay to view pending results in Fabric\r\n\r\n    if (runId === 'throw_error') {\r\n      throw new Error('Error');\r\n    }\r\n\r\n    if (runId === '400_response') {\r\n      return Promise.resolve({\r\n        state: 'error',\r\n        errorCode: '400',\r\n        errorMessage: 'Error',\r\n      });\r\n    }\r\n\r\n    if (runId === 'empty_results') {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          ...mockEntityMatchingResultPagedCollection,\r\n          value: [],\r\n        },\r\n      });\r\n    }\r\n\r\n    const middleIndex = Math.ceil(\r\n      mockEntityMatchingResultPagedCollection.value.length / 2,\r\n    );\r\n    const firstHalf = mockEntityMatchingResultPagedCollection.value.slice(\r\n      0,\r\n      middleIndex,\r\n    );\r\n    const secondHalf =\r\n      mockEntityMatchingResultPagedCollection.value.slice(middleIndex);\r\n\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data:\r\n        continuationToken === undefined\r\n          ? {\r\n              ...mockEntityMatchingResultPagedCollectionWithContinuationToken,\r\n              value: firstHalf,\r\n            }\r\n          : {\r\n              ...mockEntityMatchingResultPagedCollection,\r\n              value: secondHalf,\r\n            },\r\n    });\r\n  };\r\n  commitLinks = async (\r\n    _logConfig: Partial<FeatureEvent>,\r\n    _body: BulkRecordLinkageRequest,\r\n  ): Promise<DataResponse<BulkRecordLinkageResponse>> => {\r\n    await delay(500); // Fake delay to view pending results in Fabric\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: mockBulkRecordLinkageResponse,\r\n    });\r\n  };\r\n  rollbackLinks = async (\r\n    _logConfig: Partial<FeatureEvent>,\r\n    _body: BulkRecordLinkageRequest,\r\n  ): Promise<DataResponse<BulkRecordLinkageResponse>> => {\r\n    await delay(500); // Fake delay to view pending results in Fabric\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: mockBulkRecordLinkageResponse,\r\n    });\r\n  };\r\n  jobNameExists = async (\r\n    jobName: string,\r\n  ): Promise<DataResponse<EntityMatchingJobExist>> => {\r\n    if (jobName) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          jobExist: false,\r\n        },\r\n      });\r\n    }\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        jobExist: true,\r\n      },\r\n    });\r\n  };\r\n  getAllDatasets = async (\r\n    _logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<EntityMatchingDatasetsResponse>> => {\r\n    await delay(500); // Fake delay to view pending results in Fabric\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        value: [\r\n          {\r\n            datasetName: 'sourceDataset',\r\n            attributes: [\r\n              {\r\n                columnType: 'string',\r\n                columnName: 'twinId',\r\n              },\r\n              {\r\n                columnType: 'string',\r\n                columnName: 'twinName',\r\n              },\r\n              {\r\n                columnType: 'string',\r\n                columnName: 'description',\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            datasetName: 'targetDataset',\r\n            attributes: [\r\n              {\r\n                columnType: 'string',\r\n                columnName: 'twinId',\r\n              },\r\n              {\r\n                columnType: 'string',\r\n                columnName: 'twinName',\r\n              },\r\n              {\r\n                columnType: 'string',\r\n                columnName: 'description',\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport {\r\n  API_VERSION,\r\n  BaseClient,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport {\r\n  BulkRecordLinkageRequest,\r\n  BulkRecordLinkageResponse,\r\n  ClientEntityMatchingDatasetsListParameters,\r\n  EntityMatchingDatasetsResponse,\r\n  EntityMatchingClientType,\r\n  EntityMatchingFuzzyConfiguration,\r\n  EntityMatchingJobExist,\r\n  EntityMatchingPipeline,\r\n  EntityMatchingPipelineRunResponse,\r\n  EntityMatchingResultPagedCollection,\r\n  EntityMatchingRuleBasedConfiguration,\r\n} from './EntityMatchingClient.types';\r\nimport { DataResponse } from '../../models';\r\nimport {\r\n  convertPipelineRunToClientModel,\r\n  convertPipelineToClientModel,\r\n  convertPipelineToPayload,\r\n} from './EntityMatchingClient.utils';\r\nimport { produce } from 'immer';\r\n\r\nexport class EntityMatchingClient\r\n  extends BaseClient\r\n  implements EntityMatchingClientType\r\n{\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n\r\n  deletePipeline = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    pipelineId: string,\r\n  ): Promise<DataResponse<undefined>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/contextualization/entityMatchingPipelines/{id}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        pipelineId,\r\n      )\r\n      .delete();\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: undefined,\r\n    };\r\n  };\r\n\r\n  getPipelineList = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    _filter: string | undefined,\r\n  ): Promise<DataResponse<EntityMatchingPipeline[]>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/contextualization/entityMatchingPipelines',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get();\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n    const pipelines = response.body;\r\n    const result = pipelines?.value?.map(convertPipelineToClientModel);\r\n    return {\r\n      state: 'success',\r\n      data: result,\r\n    };\r\n  };\r\n\r\n  createPipeline = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    configuration:\r\n      | EntityMatchingFuzzyConfiguration\r\n      | EntityMatchingRuleBasedConfiguration,\r\n  ): Promise<DataResponse<EntityMatchingPipeline>> => {\r\n    const configurationPayload = convertPipelineToPayload(configuration);\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/contextualization/entityMatchingPipelines',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        body: configurationPayload,\r\n      });\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n    const pipeline = response.body;\r\n    const result = convertPipelineToClientModel(pipeline);\r\n    return {\r\n      state: 'success',\r\n      data: result,\r\n    };\r\n  };\r\n\r\n  updatePipeline = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    pipelineId: string,\r\n    configuration:\r\n      | EntityMatchingFuzzyConfiguration\r\n      | EntityMatchingRuleBasedConfiguration,\r\n  ): Promise<DataResponse<EntityMatchingPipeline>> => {\r\n    const configurationPayload = convertPipelineToPayload(configuration);\r\n    configurationPayload.id = pipelineId;\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/contextualization/entityMatchingPipelines/{id}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        pipelineId,\r\n      )\r\n      .patch({\r\n        body: configurationPayload,\r\n      });\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n    const pipeline = response.body;\r\n    const result = convertPipelineToClientModel(pipeline);\r\n    return {\r\n      state: 'success',\r\n      data: result,\r\n    };\r\n  };\r\n\r\n  runPipeline = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    pipelineId: string,\r\n  ): Promise<DataResponse<EntityMatchingPipelineRunResponse>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/contextualization/entityMatchingPipelines/{id}/run',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        pipelineId,\r\n      )\r\n      .post();\r\n    // Important that this is checked before isErrorResponse to keep error response simple\r\n    if (this.isAsyncResponse(response)) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          location: response.headers.location,\r\n        },\r\n      });\r\n    }\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n\r\n    const pipeline = response.body;\r\n    const result = convertPipelineRunToClientModel(pipeline);\r\n    return {\r\n      state: 'success',\r\n      data: result,\r\n    };\r\n  };\r\n\r\n  getResults = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    pipelineId: string,\r\n    runId: string,\r\n    filter?: string,\r\n    orderby?: string[],\r\n    skip?: number,\r\n    top?: number,\r\n    continuationToken?: string,\r\n  ): Promise<DataResponse<EntityMatchingResultPagedCollection>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/contextualization/entityMatchingPipelines/{id}/runs/{runId}/results',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        pipelineId,\r\n        runId,\r\n      )\r\n      .get({\r\n        queryParameters: {\r\n          filter,\r\n          orderby,\r\n          skip,\r\n          top,\r\n          continuationToken,\r\n        },\r\n      });\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n    return {\r\n      state: 'success',\r\n      //data: response.body,\r\n      // TODO: remove this when the API is fixed\r\n      data: produce(response.body, (draft) => {\r\n        draft.totalResultCount = 100;\r\n      }),\r\n    };\r\n  };\r\n\r\n  commitLinks = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    body: BulkRecordLinkageRequest,\r\n  ): Promise<DataResponse<BulkRecordLinkageResponse>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/contextualization/commitLinks',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        body,\r\n      });\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: response.body,\r\n    };\r\n  };\r\n  rollbackLinks = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    body: BulkRecordLinkageRequest,\r\n  ): Promise<DataResponse<BulkRecordLinkageResponse>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/contextualization/removeLinks',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        body,\r\n      });\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: response.body,\r\n    };\r\n  };\r\n  jobNameExists = async (\r\n    jobName: string,\r\n  ): Promise<DataResponse<EntityMatchingJobExist>> => {\r\n    if (jobName) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          jobExist: false,\r\n        },\r\n      });\r\n    }\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        jobExist: true,\r\n      },\r\n    });\r\n  };\r\n  getAllDatasets = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    query?: ClientEntityMatchingDatasetsListParameters,\r\n  ): Promise<DataResponse<EntityMatchingDatasetsResponse>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/contextualization/entityMatchingDatasets',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get({\r\n        queryParameters: query,\r\n      });\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: response.body,\r\n    };\r\n  };\r\n}\r\n","import {\r\n  EntityMatchingColumnValuesFilterOutput,\r\n  EntityMatchingInputDatasetConfigurationOutput,\r\n  EntityMatchingLabelsFilterOutput,\r\n  EntityMatchingResultOutput,\r\n  EntityMatchingResultPagedCollectionOutput,\r\n  RecordLinkageRecord as RecordLinkageRecordInput,\r\n  BulkRecordLinkageRequest as BulkRecordLinkageRequestInput,\r\n  BulkRecordLinkageResponseOutput,\r\n  EntityMatchingDatasetsListQueryParamProperties as EntityMatchingDatasetsListQueryParamPropertiesInput,\r\n  EntityMatchingDatasetPagedCollectionOutput,\r\n  SimpleFuzzyMatchConfigurationOutput,\r\n  RuleBasedMatchConfigurationOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport { DataResponse } from '../../models';\r\nimport { FilterRowType } from '@do/components';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport type EnityMatchingDataSetInput = {\r\n  value?: string | undefined;\r\n  fetchSuggestions: boolean;\r\n};\r\nexport type EntityMatchingSavedFuzzyPipelineConfiguration = Pick<\r\n  SimpleFuzzyMatchConfigurationOutput,\r\n  'matchingMethod' | 'sourceDataset' | 'targetDataset' | 'comparisons'\r\n>;\r\nexport type EntityMatchingSavedRuleBasedPipelineConfiguration = Pick<\r\n  RuleBasedMatchConfigurationOutput,\r\n  'matchingMethod' | 'rules' | 'sourceDataset' | 'targetDataset'\r\n>;\r\nexport type EntityMatchingSavedPipelineConfiguration =\r\n  | EntityMatchingSavedFuzzyPipelineConfiguration\r\n  | EntityMatchingSavedRuleBasedPipelineConfiguration;\r\n/**\r\n * Status of the pipeline run.\r\n *\r\n * Possible values: Succeeded, InProgress, Queued, Canceled, Failed\r\n */\r\nexport type PipelineRunStatus =\r\n  | 'Succeeded'\r\n  | 'InProgress'\r\n  | 'Queued'\r\n  | 'Canceled'\r\n  | 'Failed';\r\n\r\n// Kept this simple for list implementation\r\n// TODO: Include configuration and other properties if needed later\r\nexport type EntityMatchingPipeline = {\r\n  id: string;\r\n  name: string;\r\n  status?: PipelineRunStatus;\r\n  runs?: EntityMatchingPipelineRun[];\r\n  configuration:\r\n    | EntityMatchingFuzzyConfiguration\r\n    | EntityMatchingRuleBasedConfiguration;\r\n};\r\n\r\nexport enum EntityMatchingAlgorithmType {\r\n  FUZZY = 'FUZZY',\r\n  RULE_BASED = 'RULE_BASED',\r\n}\r\nexport enum RelationshipTypeSelected {\r\n  CUSTOM = 'custom',\r\n  DEFAULT = 'default',\r\n}\r\n\r\nexport enum DefaultRelationshipTypes {\r\n  IS_LINKED_TO = 'isLinkedTo',\r\n  IS_CHILD_OF = 'isChildOf',\r\n  PRODUCES = 'produces',\r\n  DEPENDS_ON = 'dependsOn',\r\n}\r\n\r\nexport enum RelationType {\r\n  isChildOf = 'isChildOf',\r\n}\r\n\r\nexport interface IMatchingCondition {\r\n  columnName: string;\r\n  relationType: RelationType;\r\n}\r\nexport type DatasetFilterRule = {\r\n  property: string;\r\n  type: FilterRowType;\r\n  operator: string;\r\n  value: string;\r\n};\r\nexport interface SelectedDataset {\r\n  name: string;\r\n  matchingConditions: Array<DatasetFilterRule>;\r\n  columnName: string;\r\n}\r\nexport type BaseEntityMatchingConfiguration = {\r\n  pipelineName: string;\r\n  algorithmType: EntityMatchingAlgorithmType;\r\n  sourceDataset: SelectedDataset;\r\n  targetDataset: SelectedDataset;\r\n  relationshipType: string;\r\n  customRelationshipType: string;\r\n  relationshipTypeSelected: RelationshipTypeSelected;\r\n};\r\n\r\n/** Definition of regex replacement rule. */\r\nexport type RegExpReplacementRule = {\r\n  /** Input column. */\r\n  inputColumn: string;\r\n  /** Pattern to look for, escaped. This will include matching groups. Syntax is Java Regular Expressions. Example: ^([A-Z]{2})-(\\d{4})$ */\r\n  pattern: string;\r\n  /** String to produce based on matching groups, escaped. Syntax is Java Regular Expressions replacement string. Example: $1$2 */\r\n  substitution: string;\r\n};\r\n\r\nexport type RuleBasedEntityMatchingRule = {\r\n  /** Left-hand side (i.e., what is to be matched). */\r\n  lhs: RegExpReplacementRule;\r\n  /** Right-hand side (i.e., what to match with). */\r\n  rhs: RegExpReplacementRule;\r\n  /**\r\n   * Flag to enable the fuzzy matching mode to match the regex groups\r\n   *\r\n   * Possible values: True, False\r\n   */\r\n  enableFuzzy: string;\r\n};\r\n\r\nexport type EntityMatchingFuzzyConfiguration =\r\n  BaseEntityMatchingConfiguration & {\r\n    algorithmType: EntityMatchingAlgorithmType.FUZZY;\r\n    defaultThreshold?: number;\r\n    comparisons: EntityMatchComparison[];\r\n  };\r\n\r\n/* Data required if the user selects the rule based match algorithm */\r\nexport type EntityMatchingRuleBasedConfiguration =\r\n  BaseEntityMatchingConfiguration & {\r\n    algorithmType: EntityMatchingAlgorithmType.RULE_BASED;\r\n    rules: RuleBasedEntityMatchingRule[];\r\n  };\r\n\r\nexport type EntityMatchingConfiguration =\r\n  | EntityMatchingFuzzyConfiguration\r\n  | EntityMatchingRuleBasedConfiguration;\r\n\r\nexport type EntityMatchComparison = {\r\n  sourceDatasetColumn: string;\r\n  targetDatasetColumn: string;\r\n};\r\n\r\n// Client simplified version of the pipeline run\r\nexport interface EntityMatchingPipelineRun {\r\n  runId: string;\r\n  startedTime: string;\r\n  status?: PipelineRunStatus;\r\n}\r\n\r\nexport interface EntityMatchingPipelineRunAsync {\r\n  location: string;\r\n}\r\n\r\nexport type EntityMatchingPipelineRunResponse =\r\n  | EntityMatchingPipelineRun\r\n  | EntityMatchingPipelineRunAsync;\r\n\r\nexport type EntityMatchingResult = Pick<\r\n  EntityMatchingResultOutput,\r\n  | 'sourceDatasetColumnValues'\r\n  | 'targetDatasetColumnValues'\r\n  | 'relationshipName'\r\n  | 'state'\r\n  | 'score'\r\n>;\r\n\r\nexport type EntityMatchingInputDatasetConfiguration = {\r\n  filters?: EntityMatchingInputDatasetFilter[];\r\n} & Pick<EntityMatchingInputDatasetConfigurationOutput, 'datasetName'>;\r\n\r\nexport type EntityMatchingInputDatasetFilter =\r\n  | EntityMatchingLabelsFilter\r\n  | EntityMatchingColumnValuesFilter;\r\n\r\nexport type EntityMatchingLabelsFilter = Pick<\r\n  EntityMatchingLabelsFilterOutput,\r\n  'filterType' | 'label'\r\n>;\r\n\r\nexport type EntityMatchingColumnValuesFilter = Pick<\r\n  EntityMatchingColumnValuesFilterOutput,\r\n  'filterType' | 'columnName' | 'comparisonType' | 'columnValue'\r\n>;\r\n\r\nexport type EntityMatchingResultPagedCollection = {\r\n  sourceDataset: EntityMatchingInputDatasetConfiguration;\r\n  targetDataset: EntityMatchingInputDatasetConfiguration;\r\n  value: Array<EntityMatchingResult>;\r\n} & Pick<\r\n  EntityMatchingResultPagedCollectionOutput,\r\n  | 'sourceDatasetColumnNames'\r\n  | 'targetDatasetColumnNames'\r\n  | 'totalResultCount'\r\n  | 'continuationUri'\r\n  | 'continuationToken'\r\n>;\r\n\r\nexport type RecordLinkageRecord = Pick<\r\n  RecordLinkageRecordInput,\r\n  'sourceDatasetColumnValues' | 'targetDatasetColumnValues' | 'relationshipName'\r\n>;\r\n\r\nexport type BulkRecordLinkageRequest = {\r\n  mappings: Array<RecordLinkageRecord>;\r\n} & Pick<\r\n  BulkRecordLinkageRequestInput,\r\n  | 'sourceDatasetName'\r\n  | 'sourceDatasetColumnNames'\r\n  | 'targetDatasetName'\r\n  | 'targetDatasetColumnNames'\r\n>;\r\n\r\nexport type BulkRecordLinkageResponse = Pick<\r\n  BulkRecordLinkageResponseOutput,\r\n  'appliedMappingsCount'\r\n>;\r\n\r\nexport type EntityMatchingJobExist = { jobExist: boolean };\r\n\r\nexport type EntityMatchingDatasetsResponse = Pick<\r\n  EntityMatchingDatasetPagedCollectionOutput,\r\n  'value' | 'continuationToken' | 'continuationUri'\r\n>;\r\nexport type ClientEntityMatchingDatasetsListParameters = Pick<\r\n  EntityMatchingDatasetsListQueryParamPropertiesInput,\r\n  'continuationToken'\r\n>;\r\nexport interface EntityMatchingClientType {\r\n  // TODO: Add remaining methods\r\n  deletePipeline: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    pipelineId: string,\r\n  ) => Promise<DataResponse<undefined>>;\r\n  getPipelineList: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    filter: string | undefined,\r\n  ) => Promise<DataResponse<EntityMatchingPipeline[]>>;\r\n  createPipeline: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    configuration:\r\n      | EntityMatchingFuzzyConfiguration\r\n      | EntityMatchingRuleBasedConfiguration,\r\n  ) => Promise<DataResponse<EntityMatchingPipeline>>;\r\n  updatePipeline: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    pipelineId: string,\r\n    configuration:\r\n      | EntityMatchingFuzzyConfiguration\r\n      | EntityMatchingRuleBasedConfiguration,\r\n  ) => Promise<DataResponse<EntityMatchingPipeline>>;\r\n  runPipeline: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    pipelineId: string,\r\n  ) => Promise<DataResponse<EntityMatchingPipelineRunResponse>>;\r\n  getResults: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    pipelineId: string,\r\n    runId: string,\r\n    filter?: string,\r\n    orderby?: string[],\r\n    skip?: number,\r\n    top?: number,\r\n    continuationToken?: string,\r\n  ) => Promise<DataResponse<EntityMatchingResultPagedCollection>>;\r\n  commitLinks: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    body: BulkRecordLinkageRequest,\r\n  ) => Promise<DataResponse<BulkRecordLinkageResponse>>;\r\n  rollbackLinks: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    body: BulkRecordLinkageRequest,\r\n  ) => Promise<DataResponse<BulkRecordLinkageResponse>>;\r\n  jobNameExists: (\r\n    jobName: string,\r\n  ) => Promise<DataResponse<EntityMatchingJobExist>>;\r\n\r\n  getAllDatasets: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    options?: ClientEntityMatchingDatasetsListParameters,\r\n  ) => Promise<DataResponse<EntityMatchingDatasetsResponse>>;\r\n}\r\n","import {\r\n  EntityMatchingInputDatasetFilter,\r\n  EntityMatchingPipeline,\r\n  EntityMatchingPipelineConfiguration,\r\n  EntityMatchingPipelineOutput,\r\n  EntityMatchingPipelineRun,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport {\r\n  BaseEntityMatchingConfiguration,\r\n  EntityMatchingPipeline as ClientEntityMatchingPipeline,\r\n  EntityMatchingPipelineRun as ClientEntityMatchingPipelineRun,\r\n  DatasetFilterRule,\r\n  DefaultRelationshipTypes,\r\n  EntityMatchingAlgorithmType,\r\n  EntityMatchingConfiguration,\r\n  EntityMatchingFuzzyConfiguration,\r\n  EntityMatchingRuleBasedConfiguration,\r\n  PipelineRunStatus,\r\n  RelationshipTypeSelected,\r\n  SelectedDataset,\r\n} from './EntityMatchingClient.types';\r\nimport { translate, validate } from '../../regex';\r\n\r\nexport const convertPipelineConfigurationToClientModel = (\r\n  pipelineName: string,\r\n  configuration: EntityMatchingPipelineConfiguration,\r\n): EntityMatchingFuzzyConfiguration | EntityMatchingRuleBasedConfiguration => {\r\n  const base: BaseEntityMatchingConfiguration = {\r\n    pipelineName: pipelineName,\r\n    relationshipType: configuration.relationshipName ?? '',\r\n    customRelationshipType: configuration.relationshipName ?? '',\r\n    relationshipTypeSelected: Object.values(DefaultRelationshipTypes).some(\r\n      (x) => x === configuration.relationshipName,\r\n    )\r\n      ? RelationshipTypeSelected.DEFAULT\r\n      : RelationshipTypeSelected.CUSTOM,\r\n\r\n    sourceDataset: {\r\n      name: configuration.sourceDataset?.datasetName ?? '',\r\n      matchingConditions: convertDatasetFilters(\r\n        configuration.sourceDataset?.filters ?? [],\r\n      ),\r\n      columnName: '',\r\n    },\r\n    targetDataset: {\r\n      name: configuration.targetDataset?.datasetName ?? '',\r\n      matchingConditions: convertDatasetFilters(\r\n        configuration.targetDataset?.filters ?? [],\r\n      ),\r\n      columnName: '',\r\n    },\r\n  } as any;\r\n  if (base.relationshipTypeSelected === RelationshipTypeSelected.CUSTOM) {\r\n    base.relationshipType = RelationshipTypeSelected.CUSTOM; // this is the dropdown value, text is in customRelationshipType\r\n  }\r\n  switch (configuration.matchingMethod) {\r\n    case 'SimpleFuzzyMatch':\r\n      base.sourceDataset.columnName =\r\n        configuration.comparisons?.[0].sourceDatasetColumn ?? '';\r\n      base.targetDataset.columnName =\r\n        configuration?.comparisons?.[0].targetDatasetColumn ?? '';\r\n      return {\r\n        ...base,\r\n        algorithmType: EntityMatchingAlgorithmType.FUZZY,\r\n        comparisons: configuration.comparisons,\r\n        defaultThreshold: configuration.defaultThreshold,\r\n      };\r\n    case 'RuleBased':\r\n      base.sourceDataset.columnName =\r\n        configuration.rules?.[0].lhs.inputColumn ?? '';\r\n      base.targetDataset.columnName =\r\n        configuration.rules?.[0].rhs.inputColumn ?? '';\r\n      return {\r\n        ...base,\r\n        algorithmType: EntityMatchingAlgorithmType.RULE_BASED,\r\n        rules: [...configuration.rules],\r\n      };\r\n  }\r\n};\r\nconst convertDatasetFilters = (\r\n  filters: EntityMatchingInputDatasetFilter[],\r\n): DatasetFilterRule[] => {\r\n  return filters.reduce((acc, filter) => {\r\n    if (filter.filterType === 'ColumnValueFilter') {\r\n      acc.push({\r\n        property: filter.columnName,\r\n        operator: filter.comparisonType ?? 'sameAs',\r\n        value: filter.columnValue,\r\n        type: 'string',\r\n      });\r\n    }\r\n    return acc;\r\n  }, [] as DatasetFilterRule[]);\r\n};\r\n\r\nexport const convertPipelineToClientModel = (\r\n  pipeline: EntityMatchingPipelineOutput,\r\n): ClientEntityMatchingPipeline => {\r\n  return {\r\n    id: pipeline.id,\r\n    name: pipeline.name,\r\n    // Grab last run from array since SJD controller always returns runs in ascending order\r\n    status:\r\n      pipeline.runs && pipeline.runs.length > 0\r\n        ? (pipeline.runs.at(-1)?.status as PipelineRunStatus)\r\n        : undefined,\r\n    // TODO: adopt client types that do not need to enumerate mappings to convert\r\n    runs: pipeline.runs?.map(convertPipelineRunToClientModel) ?? [],\r\n    configuration: convertPipelineConfigurationToClientModel(\r\n      pipeline.name,\r\n      pipeline.configuration,\r\n    ),\r\n  };\r\n};\r\n\r\nexport const getDataSetFilters = (\r\n  dataset: SelectedDataset,\r\n): EntityMatchingInputDatasetFilter[] | undefined => {\r\n  const filters =\r\n    dataset?.matchingConditions?.map(\r\n      (condition) =>\r\n        ({\r\n          filterType: 'ColumnValueFilter',\r\n          columnName: condition.property,\r\n          comparisonType: condition.operator,\r\n          columnValue: condition.value,\r\n        }) as EntityMatchingInputDatasetFilter,\r\n    ) ?? [];\r\n  filters.push({\r\n    filterType: 'LabelFilter',\r\n    label: dataset.name,\r\n  } as EntityMatchingInputDatasetFilter);\r\n  return filters;\r\n};\r\n\r\nexport const convertFuzzyMatchingPipelineToPayload = (\r\n  configuration: EntityMatchingFuzzyConfiguration,\r\n): EntityMatchingPipeline => {\r\n  return {\r\n    configuration: {\r\n      matchingMethod: 'SimpleFuzzyMatch', // THIS ABSOLUTELY HAS TO BE THE FIRST PROPERTY SPECIFIED OR THE MWC CALL FAILS\r\n      relationshipName:\r\n        configuration.relationshipTypeSelected ===\r\n        RelationshipTypeSelected.CUSTOM\r\n          ? configuration.customRelationshipType\r\n          : configuration.relationshipType,\r\n      defaultThreshold: configuration.defaultThreshold,\r\n      sourceDataset: {\r\n        datasetName: configuration.sourceDataset.name,\r\n        filters: getDataSetFilters(configuration.sourceDataset),\r\n      },\r\n      targetDataset: {\r\n        datasetName: configuration.targetDataset.name,\r\n        filters: getDataSetFilters(configuration.targetDataset),\r\n      },\r\n      comparisons: configuration.comparisons,\r\n    },\r\n    id: '',\r\n    name: configuration.pipelineName,\r\n  };\r\n};\r\n\r\nexport const convertRuleBasedMatchingPipelineToPayload = (\r\n  configuration: EntityMatchingRuleBasedConfiguration,\r\n): EntityMatchingPipeline => {\r\n  const translatedRules = configuration.rules.map((rule) => {\r\n    const lhsValidregex = validate(rule.lhs.pattern);\r\n    const rhsValidRegex = validate(rule.rhs.pattern);\r\n\r\n    return {\r\n      lhs: {\r\n        ...rule.lhs,\r\n        pattern: translate(lhsValidregex), // java regex\r\n      },\r\n      rhs: {\r\n        ...rule.rhs,\r\n        pattern: translate(rhsValidRegex), // java regex\r\n      },\r\n      enableFuzzy: rule.enableFuzzy,\r\n    };\r\n  });\r\n\r\n  return {\r\n    configuration: {\r\n      matchingMethod: 'RuleBased', // THIS ABSOLUTELY HAS TO BE THE FIRST PROPERTY SPECIFIED OR THE MWC CALL FAILS\r\n      relationshipName:\r\n        configuration.relationshipTypeSelected ===\r\n        RelationshipTypeSelected.CUSTOM\r\n          ? configuration.customRelationshipType\r\n          : configuration.relationshipType,\r\n      rules: translatedRules,\r\n      sourceDataset: {\r\n        datasetName: configuration.sourceDataset.name,\r\n        filters: getDataSetFilters(configuration.sourceDataset),\r\n      },\r\n      targetDataset: {\r\n        datasetName: configuration.targetDataset.name,\r\n        filters: getDataSetFilters(configuration.targetDataset),\r\n      },\r\n    },\r\n    id: '',\r\n    name: configuration.pipelineName,\r\n  };\r\n};\r\n\r\nexport const convertPipelineToPayload = (\r\n  configuration: EntityMatchingConfiguration,\r\n): EntityMatchingPipeline => {\r\n  return configuration.algorithmType === EntityMatchingAlgorithmType.FUZZY\r\n    ? convertFuzzyMatchingPipelineToPayload(configuration)\r\n    : convertRuleBasedMatchingPipelineToPayload(configuration);\r\n};\r\n\r\nexport const convertPipelineRunToClientModel = (\r\n  run: EntityMatchingPipelineRun,\r\n): ClientEntityMatchingPipelineRun => {\r\n  return {\r\n    runId: run.runId,\r\n    startedTime: new Date(run.startedTimeUtc).toLocaleString(),\r\n    status: run.status as PipelineRunStatus,\r\n  };\r\n};\r\n","import {\r\n  BulkRecordLinkageResponse,\r\n  EntityMatchingAlgorithmType,\r\n  EntityMatchingPipeline,\r\n  EntityMatchingResultPagedCollection,\r\n  RelationshipTypeSelected,\r\n} from '../EntityMatchingClient.types';\r\n\r\nexport const mockEntityMatchingPipelines: EntityMatchingPipeline[] = [\r\n  {\r\n    id: 'pipeline_001',\r\n    name: 'Assembly line twin matching',\r\n    status: 'Succeeded',\r\n    runs: [\r\n      {\r\n        runId: 'run_001',\r\n        startedTime: '2021-08-01T00:00:00Z',\r\n        status: 'Succeeded',\r\n      },\r\n    ],\r\n    configuration: {\r\n      algorithmType: EntityMatchingAlgorithmType.FUZZY,\r\n      relationshipType: 'default',\r\n      customRelationshipType: '',\r\n      relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n      defaultThreshold: 0.8,\r\n      pipelineName: 'pipeline_001',\r\n      sourceDataset: {\r\n        name: 'sourceDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockSourceColumn',\r\n      },\r\n      targetDataset: {\r\n        name: 'targetDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockTargetColumn',\r\n      },\r\n      comparisons: [],\r\n    },\r\n  },\r\n  {\r\n    id: 'pipeline_002',\r\n    name: 'Bread line twin matching',\r\n    status: 'InProgress',\r\n    configuration: {\r\n      algorithmType: EntityMatchingAlgorithmType.FUZZY,\r\n      defaultThreshold: 0.8,\r\n      pipelineName: 'pipeline_002',\r\n      relationshipType: 'default',\r\n      customRelationshipType: '',\r\n      relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n      sourceDataset: {\r\n        name: 'sourceDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockSourceColumn',\r\n      },\r\n      targetDataset: {\r\n        name: 'targetDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockTargetColumn',\r\n      },\r\n      comparisons: [],\r\n    },\r\n  },\r\n  {\r\n    id: 'pipeline_003',\r\n    name: 'Power plant twin matching',\r\n    status: 'Canceled',\r\n    configuration: {\r\n      algorithmType: EntityMatchingAlgorithmType.FUZZY,\r\n      defaultThreshold: 0.8,\r\n      pipelineName: 'pipeline_003',\r\n      relationshipType: 'default',\r\n      customRelationshipType: '',\r\n      relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n      sourceDataset: {\r\n        name: 'mockSourceDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockSourceColumn',\r\n      },\r\n      targetDataset: {\r\n        name: 'mockTargetDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockTargetColumn',\r\n      },\r\n      comparisons: [],\r\n    },\r\n  },\r\n  {\r\n    id: 'pipeline_004',\r\n    name: 'Assembly line 2 twin matching',\r\n    status: 'Queued',\r\n    configuration: {\r\n      algorithmType: EntityMatchingAlgorithmType.RULE_BASED,\r\n      pipelineName: 'pipeline_004',\r\n      relationshipType: 'default',\r\n      customRelationshipType: '',\r\n      relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n      sourceDataset: {\r\n        name: 'mockSourceDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockSourceColumn',\r\n      },\r\n      targetDataset: {\r\n        name: 'mockTargetDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockTargetColumn',\r\n      },\r\n      rules: [],\r\n    },\r\n  },\r\n  {\r\n    id: 'pipeline_005',\r\n    name: 'Assembly line fuzzy matching',\r\n    status: 'Failed',\r\n    configuration: {\r\n      algorithmType: EntityMatchingAlgorithmType.RULE_BASED,\r\n      pipelineName: 'pipeline_005',\r\n      relationshipType: 'default',\r\n      customRelationshipType: '',\r\n      relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n      sourceDataset: {\r\n        name: 'mockSourceDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockSourceColumn',\r\n      },\r\n      targetDataset: {\r\n        name: 'mockTargetDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockTargetColumn',\r\n      },\r\n      rules: [],\r\n    },\r\n  },\r\n  {\r\n    id: 'pipeline_006',\r\n    name: 'Unknown status fuzzy matching',\r\n    configuration: {\r\n      algorithmType: EntityMatchingAlgorithmType.RULE_BASED,\r\n      pipelineName: 'pipeline_006',\r\n      relationshipType: 'default',\r\n      customRelationshipType: '',\r\n      relationshipTypeSelected: RelationshipTypeSelected.DEFAULT,\r\n      sourceDataset: {\r\n        name: 'mockSourceDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockSourceColumn',\r\n      },\r\n      targetDataset: {\r\n        name: 'mockTargetDataset',\r\n        matchingConditions: [],\r\n        columnName: 'mockTargetColumn',\r\n      },\r\n      rules: [],\r\n    },\r\n  },\r\n];\r\n\r\nexport const mockEntityMatchingResultPagedCollection: EntityMatchingResultPagedCollection =\r\n  {\r\n    sourceDataset: {\r\n      datasetName: 'work-orders',\r\n    },\r\n    sourceDatasetColumnNames: ['TwinId', 'Name'],\r\n    targetDataset: {\r\n      datasetName: 'other-dataset',\r\n    },\r\n    targetDatasetColumnNames: ['TwinId', 'AssetName'],\r\n    totalResultCount: 30,\r\n    value: [\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (1, 1)', 'SourceValue (1, 2)'],\r\n        targetDatasetColumnValues: ['TargetValue (1, 1)', 'TargetValue (1, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 1,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (2, 1)', 'SourceValue (1, 2)'],\r\n        targetDatasetColumnValues: ['TargetValue (2, 1)', 'TargetValue (1, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.5,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (3, 1)', 'SourceValue (1, 2)'],\r\n        targetDatasetColumnValues: ['TargetValue (3, 1)', ''],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.9,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (4, 1)', 'SourceValue (4, 2)'],\r\n        targetDatasetColumnValues: ['TargetValue (4, 1)', 'TargetValue (4, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.91,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (5, 1)', 'SourceValue (5, 2)'],\r\n        targetDatasetColumnValues: ['TargetValue (5, 1)', 'TargetValue (5, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (6, 1)', 'SourceValue (6, 2)'],\r\n        targetDatasetColumnValues: ['TargetValue (6, 1)', 'TargetValue (6, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (7, 1)', 'SourceValue (7, 2)'],\r\n        targetDatasetColumnValues: ['TargetValue (7, 1)', 'TargetValue (7, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (8, 1)', 'SourceValue (8, 2)'],\r\n        targetDatasetColumnValues: ['TargetValue (8, 1)', 'TargetValue (8, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (9, 1)', 'SourceValue (9, 2)'],\r\n        targetDatasetColumnValues: ['TargetValue (9, 1)', 'TargetValue (9, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (10, 1)',\r\n          'SourceValue (10, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (10, 1)',\r\n          'TargetValue (10, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (11, 1)',\r\n          'SourceValue (11, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (11, 1)',\r\n          'TargetValue (11, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 1,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (12, 1)',\r\n          'SourceValue (12, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (12, 1)',\r\n          'TargetValue (12, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.5,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (13, 1)',\r\n          'SourceValue (13, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (13, 1)',\r\n          'TargetValue (13, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.9,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (14, 1)',\r\n          'SourceValue (14, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (14, 1)',\r\n          'TargetValue (14, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.91,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (15, 1)',\r\n          'SourceValue (15, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (15, 1)',\r\n          'TargetValue (15, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (16, 1)',\r\n          'SourceValue (16, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (16, 1)',\r\n          'TargetValue (16, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (17, 1)',\r\n          'SourceValue (17, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (17, 1)',\r\n          'TargetValue (17, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (18, 1)',\r\n          'SourceValue (18, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (18, 1)',\r\n          'TargetValue (18, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (19, 1)',\r\n          'SourceValue (19, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (19, 1)',\r\n          'TargetValue (19, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (20, 1)',\r\n          'SourceValue (20, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (20, 1)',\r\n          'TargetValue (20, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (21, 1)',\r\n          'SourceValue (21, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (21, 1)',\r\n          'TargetValue (21, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 1,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (22, 1)',\r\n          'SourceValue (22, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (22, 1)',\r\n          'TargetValue (22, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.5,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (23, 1)',\r\n          'SourceValue (23, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (23, 1)',\r\n          'TargetValue (23, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.9,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (24, 1)',\r\n          'SourceValue (24, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (24, 1)',\r\n          'TargetValue (24, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.91,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (25, 1)',\r\n          'SourceValue (25, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (25, 1)',\r\n          'TargetValue (25, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (26, 1)',\r\n          'SourceValue (26, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (26, 1)',\r\n          'TargetValue (26, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (27, 1)',\r\n          'SourceValue (27, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (27, 1)',\r\n          'TargetValue (27, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'confirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (28, 1)',\r\n          'SourceValue (28, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (28, 1)',\r\n          'TargetValue (28, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'confirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (29, 1)',\r\n          'SourceValue (29, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (29, 1)',\r\n          'TargetValue (29, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'confirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: [\r\n          'SourceValue (30, 1)',\r\n          'SourceValue (30, 2)',\r\n        ],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (30, 1)',\r\n          'TargetValue (30, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n    ],\r\n  };\r\n\r\nexport const mockEntityMatchingResultPagedCollection2: EntityMatchingResultPagedCollection =\r\n  {\r\n    sourceDataset: {\r\n      datasetName: 'work-orders',\r\n    },\r\n    sourceDatasetColumnNames: ['TwinId'],\r\n    targetDataset: {\r\n      datasetName: 'other-dataset',\r\n    },\r\n    targetDatasetColumnNames: ['TwinId', 'AssetName'],\r\n    totalResultCount: 30,\r\n    value: [\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (1, 1)'],\r\n        targetDatasetColumnValues: ['TargetValue (1, 1)', 'TargetValue (1, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 1,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (2, 1)'],\r\n        targetDatasetColumnValues: ['TargetValue (2, 1)', 'TargetValue (2, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.5,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (3, 1)'],\r\n        targetDatasetColumnValues: ['TargetValue (3, 1)', 'TargetValue (3, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.9,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (4, 1)'],\r\n        targetDatasetColumnValues: ['TargetValue (4, 1)', 'TargetValue (4, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.91,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (5, 1)'],\r\n        targetDatasetColumnValues: ['TargetValue (5, 1)', 'TargetValue (5, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (6, 1)'],\r\n        targetDatasetColumnValues: ['TargetValue (6, 1)', 'TargetValue (6, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (7, 1)'],\r\n        targetDatasetColumnValues: ['TargetValue (7, 1)', 'TargetValue (7, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (8, 1)'],\r\n        targetDatasetColumnValues: ['TargetValue (8, 1)', 'TargetValue (8, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (9, 1)'],\r\n        targetDatasetColumnValues: ['TargetValue (9, 1)', 'TargetValue (9, 2)'],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n      {\r\n        sourceDatasetColumnValues: ['SourceValue (10, 1)'],\r\n        targetDatasetColumnValues: [\r\n          'TargetValue (10, 1)',\r\n          'TargetValue (10, 2)',\r\n        ],\r\n        relationshipName: 'sameAs',\r\n        state: 'unconfirmed',\r\n        score: 0.98,\r\n      },\r\n    ],\r\n  };\r\n\r\nexport const mockEntityMatchingResultPagedCollectionWithContinuationToken: EntityMatchingResultPagedCollection =\r\n  {\r\n    ...mockEntityMatchingResultPagedCollection,\r\n    continuationToken: 'dummyToken',\r\n  };\r\n\r\nexport const mockBulkRecordLinkageResponse: BulkRecordLinkageResponse = {\r\n  appliedMappingsCount: 1,\r\n};\r\n","export * from './EntityMatchingClient.mock';\r\nexport * from './EntityMatchingClient.types';\r\nexport * from './EntityMatchingClient';\r\n","import { FeatureEvent } from '@trident/certified-events';\r\nimport { DataResponse } from '../../models';\r\nimport { EventClientType, TwinEvent } from './EventClient.types';\r\nimport { twinEvents } from './__mocks__/MockTwinEvents';\r\n\r\nexport class MockEventClient implements EventClientType {\r\n  getEvents(_searchString?: string): Promise<DataResponse<TwinEvent[]>> {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: twinEvents,\r\n    });\r\n  }\r\n  getEventsByTwinId(\r\n    id: string,\r\n    _logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinEvent[]>> {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: twinEvents.filter((event) => event.twinId === id),\r\n    });\r\n  }\r\n\r\n  getEventById(id: string): Promise<DataResponse<TwinEvent | undefined>> {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: twinEvents.find((event) => event.eventId === id),\r\n    });\r\n  }\r\n\r\n  queryEvents(_queryObj?: any): Promise<DataResponse<TwinEvent[]>> {\r\n    // TODO: Think about how to implement the mock for this\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: twinEvents,\r\n    });\r\n  }\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport {\r\n  BaseClient,\r\n  API_VERSION,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport {\r\n  EventOutput,\r\n  EventPagedCollectionOutput,\r\n  EventQueryResourcePagedCollectionOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport { EventClientType, TwinEvent } from './EventClient.types';\r\nimport { DataResponse } from '../../models';\r\n\r\nexport class EventClient extends BaseClient implements EventClientType {\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n\r\n  // Note: Event APIs use EventOutput, and query API seems to return EventQueryResourceOutput\r\n  //       but the two return types are the same shape.\r\n  serviceEventToClientEvent = (event: EventOutput): TwinEvent => ({\r\n    twinId: event.twinId,\r\n    eventId: event.eventId,\r\n    eventType: event.eventType,\r\n    sourceTimestamp: new Date(event.sourceTimestampUtc),\r\n    createdTimestamp: event.createdTimestampUtc\r\n      ? new Date(event.createdTimestampUtc)\r\n      : undefined,\r\n    source: event.source,\r\n    message: event.message,\r\n    severity: event.severity,\r\n  });\r\n\r\n  // API doesn't seem to take a search string so are we doing client-side filtering? Seems bad\r\n  getEvents = async (\r\n    _searchString?: string | undefined,\r\n  ): Promise<DataResponse<TwinEvent[]>> => {\r\n    const client = await this.getClient();\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/events',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get({\r\n        queryParameters: {},\r\n      });\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status ?? 500,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    const events: EventPagedCollectionOutput =\r\n      response.body as EventPagedCollectionOutput;\r\n    const results = events.value.map(this.serviceEventToClientEvent);\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n\r\n  getEventsByTwinId = async (\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinEvent[]>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/events',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get({\r\n        queryParameters: {\r\n          twinId,\r\n        },\r\n      });\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return Promise.reject({\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      });\r\n    }\r\n    const events: EventPagedCollectionOutput =\r\n      response.body as EventPagedCollectionOutput;\r\n    const results = events.value.map(this.serviceEventToClientEvent);\r\n\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n\r\n  getEventById = async (eventId: string): Promise<DataResponse<TwinEvent>> => {\r\n    const client = await this.getClient();\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/events/{eventId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        eventId,\r\n      )\r\n      .get();\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status ?? 500,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    const event: EventOutput = response.body as EventOutput;\r\n    const results = this.serviceEventToClientEvent(event);\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n\r\n  queryEvents = async (\r\n    queryObj?: any,\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinEvent[]>> => {\r\n    const client = await this.getClient(logConfig);\r\n\r\n    const body = { ...queryObj };\r\n    if (body.query && !body.query.pageSize) {\r\n      // Design decision to display 100 results at a time in list view\r\n      body.query.pageSize = 100;\r\n    }\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/query/events',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        body: queryObj,\r\n      });\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status ?? 500,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    const events: EventQueryResourcePagedCollectionOutput =\r\n      response.body as EventQueryResourcePagedCollectionOutput;\r\n    const results = events.value.map(this.serviceEventToClientEvent);\r\n\r\n    return {\r\n      state: 'success',\r\n      data: results,\r\n    };\r\n  };\r\n}\r\n","import { FeatureEvent } from '@trident/certified-events';\r\nimport { DataResponse } from '../../models';\r\n\r\n/**\r\n * An event associated with a twin. Follows the OPCUA data model closely.\r\n| Name | Is Required | Type | Note |\r\n| --- | --- | --- | --- |\r\n| TwinId | True \\* | String |\r\n| EventId | True / Unique | String | |\r\n| EventType | True | String | From OPCUA data model |\r\n| Source | False | String | From OPCUA data model |\r\n| Message | False | String | From OPCUA data model |\r\n| Severity | False | String | From OPCUA data model |\r\n| SourceTimestamp | True | DateTime | From OPCUA data model |\r\n */\r\nexport type TwinEvent = {\r\n  twinId: string;\r\n  eventId: string;\r\n  eventType: string;\r\n  sourceTimestamp: Date;\r\n  createdTimestamp?: Date;\r\n  source?: string;\r\n  message?: string;\r\n  severity?: string;\r\n};\r\n\r\nexport interface EventClientType {\r\n  getEvents(searchString?: string): Promise<DataResponse<TwinEvent[]>>;\r\n  getEventsByTwinId(\r\n    id: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinEvent[]>>;\r\n  getEventById(id: string): Promise<DataResponse<TwinEvent | undefined>>;\r\n  queryEvents(\r\n    queryObj?: any,\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinEvent[]>>;\r\n}\r\n","import { TwinEvent } from '../EventClient.types';\r\n\r\nexport const twinEvents: TwinEvent[] = [\r\n  {\r\n    eventId: 'Event1',\r\n    twinId: '1',\r\n    eventType: 'TemperatureChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:16:33Z'),\r\n    source: 'Oven1',\r\n    message: 'Temperature increased',\r\n    severity: 'Low',\r\n  },\r\n  {\r\n    eventId: 'Event2',\r\n    twinId: '1',\r\n    eventType: 'HumidityChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:17:33Z'),\r\n    source: 'Proofer1',\r\n    message: 'Humidity decreased',\r\n    severity: 'Medium',\r\n  },\r\n  {\r\n    eventId: 'Event3',\r\n    twinId: '1',\r\n    eventType: 'SpeedChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:18:33Z'),\r\n    source: 'Conveyor1',\r\n    message: 'Speed increased',\r\n    severity: '',\r\n  },\r\n  {\r\n    eventId: 'Event4',\r\n    twinId: '1',\r\n    eventType: 'PressureChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:19:33Z'),\r\n    source: 'Mixer1',\r\n    message: 'Pressure decreased',\r\n    severity: 'High',\r\n  },\r\n  {\r\n    eventId: 'Event5',\r\n    twinId: '1',\r\n    eventType: 'TemperatureChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:20:33Z'),\r\n    source: 'Oven2',\r\n    message: 'Temperature decreased',\r\n    severity: 'High',\r\n  },\r\n  {\r\n    eventId: 'Event6',\r\n    twinId: '1',\r\n    eventType: 'HumidityChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:21:33Z'),\r\n    source: 'Proofer2',\r\n    message: 'Humidity increased',\r\n    severity: 'Low',\r\n  },\r\n  {\r\n    eventId: 'Event7',\r\n    twinId: '1',\r\n    eventType: 'SpeedChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:22:33Z'),\r\n    source: 'Conveyor2',\r\n    message: 'Speed decreased',\r\n  },\r\n  {\r\n    eventId: 'Event8',\r\n    twinId: '1',\r\n    eventType: 'SpeedChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:16:33Z'),\r\n    source: 'Conveyor1',\r\n    severity: 'Low',\r\n  },\r\n  {\r\n    eventId: 'Event9',\r\n    twinId: '1',\r\n    eventType: 'PressureChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:16:33Z'),\r\n    source: 'Oven2',\r\n    message: 'Pressure increased',\r\n    severity: 'Medium',\r\n  },\r\n  {\r\n    eventId: 'Event10',\r\n    twinId: '1',\r\n    eventType: 'TemperatureChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:16:33Z'),\r\n    source: 'Oven1',\r\n    message: '',\r\n    severity: 'Medium',\r\n  },\r\n  {\r\n    eventId: 'Event11',\r\n    twinId: '1',\r\n    eventType: 'HumidityChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:16:33Z'),\r\n    severity: 'High',\r\n  },\r\n  {\r\n    eventId: 'Event12',\r\n    twinId: '1',\r\n    eventType: 'PressureChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:16:33Z'),\r\n    source: 'Mixer1',\r\n    message: 'Pressure decreased',\r\n    severity: 'Low',\r\n  },\r\n  {\r\n    eventId: 'Event13',\r\n    twinId: '1',\r\n    eventType: 'HumidityChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:16:33Z'),\r\n    source: '',\r\n    message: 'Humidity decreased',\r\n    severity: 'Low',\r\n  },\r\n  {\r\n    eventId: 'Event14',\r\n    twinId: '2',\r\n    eventType: 'SpeedChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:16:33Z'),\r\n    source: 'Mixer1',\r\n    message: 'Speed increased',\r\n    severity: 'High',\r\n  },\r\n  {\r\n    eventId: 'Event15',\r\n    twinId: '2',\r\n    eventType: 'HumidityChange',\r\n    sourceTimestamp: new Date('2023-10-16T19:16:33Z'),\r\n  },\r\n];\r\n","export * from './EventClient.mock';\r\nexport * from './EventClient.types';\r\nexport * from './EventClient';\r\n","import { DataResponse } from '../../models';\r\nimport { delay } from '../../utilities/client.utils';\r\nimport {\r\n  HierarchyClientType,\r\n  HierarchyNodesWithContinuationToken,\r\n} from './HierarchyClient.types';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport class MockHierarchyClient implements HierarchyClientType {\r\n  getRoots = async (\r\n    _logConfig: Partial<FeatureEvent>,\r\n    continuationToken?: string | undefined,\r\n  ): Promise<DataResponse<HierarchyNodesWithContinuationToken>> => {\r\n    await delay(500); // Fake delay to view pending results in Fabric\r\n    if (continuationToken) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          value: [\r\n            {\r\n              childCount: 1,\r\n              twin: undefined,\r\n              displayName: 'Northwind Traders',\r\n              path: '/Northwind',\r\n            },\r\n          ],\r\n          continuationToken: undefined,\r\n          continuationUri: undefined,\r\n        },\r\n      });\r\n    }\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        value: [\r\n          {\r\n            childCount: 3,\r\n            displayName: 'Contoso Bakery',\r\n            path: '/Contoso',\r\n          },\r\n          {\r\n            childCount: 2,\r\n            displayName: 'Wingtip Toys',\r\n            path: '/Wingtip',\r\n          },\r\n        ],\r\n        continuationToken: '123',\r\n        continuationUri: '123',\r\n      },\r\n    });\r\n  };\r\n  getChildren = async (\r\n    path: string,\r\n    _logConfig: Partial<FeatureEvent>,\r\n    continuationToken?: string | undefined,\r\n  ): Promise<DataResponse<HierarchyNodesWithContinuationToken>> => {\r\n    await delay(500); // Fake delay to view pending results in Fabric\r\n    switch (path) {\r\n      case '/Contoso':\r\n        if (continuationToken) {\r\n          return Promise.resolve({\r\n            state: 'success',\r\n            data: {\r\n              value: [\r\n                {\r\n                  childCount: 0,\r\n                  twin: undefined,\r\n                  displayName: 'London',\r\n                  path: '/Contoso/London',\r\n                },\r\n              ],\r\n              continuationToken: undefined,\r\n              continuationUri: undefined,\r\n            },\r\n          });\r\n        }\r\n        return Promise.resolve({\r\n          state: 'success',\r\n          data: {\r\n            value: [\r\n              {\r\n                childCount: 1,\r\n                twin: undefined,\r\n                displayName: 'Atlanta',\r\n                path: '/Contoso/Atlanta',\r\n              },\r\n              {\r\n                childCount: 1,\r\n                twin: undefined,\r\n                displayName: 'Seattle',\r\n                path: '/Contoso/Seattle',\r\n              },\r\n            ],\r\n            continuationToken: '123',\r\n            continuationUri: '123',\r\n          },\r\n        });\r\n      case '/Wingtip':\r\n        return Promise.resolve({\r\n          state: 'success',\r\n          data: {\r\n            value: [\r\n              {\r\n                childCount: 1,\r\n                twin: undefined,\r\n                displayName: 'Planes',\r\n                path: '/Wingtip/Planes',\r\n              },\r\n              {\r\n                childCount: 1,\r\n                twin: undefined,\r\n                displayName: 'Rockets',\r\n                path: '/Wingtip/Rockets',\r\n              },\r\n            ],\r\n            continuationToken: undefined,\r\n            continuationUri: undefined,\r\n          },\r\n        });\r\n      case '/Contoso/Atlanta':\r\n      case '/Contoso/London':\r\n      case '/Contoso/Seattle':\r\n        if (continuationToken) {\r\n          return Promise.resolve({\r\n            state: 'success',\r\n            data: {\r\n              value: [\r\n                {\r\n                  childCount: 0,\r\n                  twin: {\r\n                    twinId: 'Oven-6',\r\n                    displayName: 'Oven 6',\r\n                    description: 'Oven 6',\r\n                    state: 'Active',\r\n                  },\r\n                  displayName: 'Oven 6',\r\n                  path: `${path}/Oven-6`,\r\n                },\r\n                {\r\n                  childCount: 0,\r\n                  twin: {\r\n                    twinId: 'Oven-7',\r\n                    displayName: 'Oven 7',\r\n                    description: 'Oven 7',\r\n                    state: 'Active',\r\n                  },\r\n                  displayName: 'Oven 7',\r\n                  path: `${path}/Oven-7`,\r\n                },\r\n                {\r\n                  childCount: 0,\r\n                  twin: {\r\n                    twinId: 'Oven-8',\r\n                    displayName: 'Oven 8',\r\n                    description: 'Oven 8',\r\n                    state: 'Active',\r\n                  },\r\n                  displayName: 'Oven 8',\r\n                  path: `${path}/Oven-8`,\r\n                },\r\n                {\r\n                  childCount: 0,\r\n                  twin: {\r\n                    twinId: 'Oven-9',\r\n                    displayName: 'Oven 9',\r\n                    description: 'Oven 9',\r\n                    state: 'Active',\r\n                  },\r\n                  displayName: 'Oven 9',\r\n                  path: `${path}/Oven-9`,\r\n                },\r\n              ],\r\n              continuationToken: undefined,\r\n              continuationUri: undefined,\r\n            },\r\n          });\r\n        }\r\n        return Promise.resolve({\r\n          state: 'success',\r\n          data: {\r\n            value: [\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-0',\r\n                  displayName: 'Oven 0',\r\n                  description: 'Oven 0',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 0',\r\n                path: `${path}/Oven-0`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-1',\r\n                  displayName: 'Oven 1',\r\n                  description: 'Oven 1',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 1',\r\n                path: `${path}/Oven-1`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-2',\r\n                  displayName: 'Oven 2',\r\n                  description: 'Oven 2',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 2',\r\n                path: `${path}/Oven-2`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-3',\r\n                  displayName: 'Oven 3',\r\n                  description: 'Oven 3',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 3',\r\n                path: `${path}/Oven-3`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-4',\r\n                  displayName: 'Oven 4',\r\n                  description: 'Oven 4',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 4',\r\n                path: `${path}/Oven-4`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-5',\r\n                  displayName: 'Oven 5',\r\n                  description: 'Oven 5',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 5',\r\n                path: `${path}/Oven-5`,\r\n              },\r\n            ],\r\n            continuationToken: '123',\r\n            continuationUri: '123',\r\n          },\r\n        });\r\n      case '/Wingtip/Planes':\r\n      case '/Wingtip/Rockets':\r\n        if (continuationToken) {\r\n          return Promise.resolve({\r\n            state: 'success',\r\n            data: {\r\n              value: [\r\n                {\r\n                  childCount: 0,\r\n                  twin: {\r\n                    twinId: 'Oven-6',\r\n                    displayName: 'Oven 6',\r\n                    description: 'Oven 6',\r\n                    state: 'Active',\r\n                  },\r\n                  displayName: 'Oven 6',\r\n                  path: `${path}/Oven-6`,\r\n                },\r\n                {\r\n                  childCount: 0,\r\n                  twin: {\r\n                    twinId: 'Oven-7',\r\n                    displayName: 'Oven 7',\r\n                    description: 'Oven 7',\r\n                    state: 'Active',\r\n                  },\r\n                  displayName: 'Oven 7',\r\n                  path: `${path}/Oven-7`,\r\n                },\r\n                {\r\n                  childCount: 0,\r\n                  twin: {\r\n                    twinId: 'Oven-8',\r\n                    displayName: 'Oven 8',\r\n                    description: 'Oven 8',\r\n                    state: 'Active',\r\n                  },\r\n                  displayName: 'Oven 8',\r\n                  path: `${path}/Oven-8`,\r\n                },\r\n                {\r\n                  childCount: 0,\r\n                  twin: {\r\n                    twinId: 'Oven-9',\r\n                    displayName: 'Oven 9',\r\n                    description: 'Oven 9',\r\n                    state: 'Active',\r\n                  },\r\n                  displayName: 'Oven 9',\r\n                  path: `${path}/Oven-9`,\r\n                },\r\n              ],\r\n              continuationToken: undefined,\r\n              continuationUri: undefined,\r\n            },\r\n          });\r\n        }\r\n        return Promise.resolve({\r\n          state: 'success',\r\n          data: {\r\n            value: [\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-0',\r\n                  displayName: 'Oven 0',\r\n                  description: 'Oven 0',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 0',\r\n                path: `${path}/Oven-0`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-1',\r\n                  displayName: 'Oven 1',\r\n                  description: 'Oven 1',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 1',\r\n                path: `${path}/Oven-1`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-2',\r\n                  displayName: 'Oven 2',\r\n                  description: 'Oven 2',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 2',\r\n                path: `${path}/Oven-2`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-3',\r\n                  displayName: 'Oven 3',\r\n                  description: 'Oven 3',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 3',\r\n                path: `${path}/Oven-3`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-4',\r\n                  displayName: 'Oven 4',\r\n                  description: 'Oven 4',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 4',\r\n                path: `${path}/Oven-4`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-5',\r\n                  displayName: 'Oven 5',\r\n                  description: 'Oven 5',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 5',\r\n                path: `${path}/Oven-5`,\r\n              },\r\n            ],\r\n            continuationToken: '123',\r\n            continuationUri: '123',\r\n          },\r\n        });\r\n      case '/Northwind':\r\n        return Promise.resolve({\r\n          state: 'success',\r\n          data: {\r\n            value: [\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-0',\r\n                  displayName: 'Oven 0',\r\n                  description: 'Oven 0',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 0',\r\n                path: `${path}/Oven-0`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-1',\r\n                  displayName: 'Oven 1',\r\n                  description: 'Oven 1',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 1',\r\n                path: `${path}/Oven-1`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-2',\r\n                  displayName: 'Oven 2',\r\n                  description: 'Oven 2',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 2',\r\n                path: `${path}/Oven-2`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-3',\r\n                  displayName: 'Oven 3',\r\n                  description: 'Oven 3',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 3',\r\n                path: `${path}/Oven-3`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-4',\r\n                  displayName: 'Oven 4',\r\n                  description: 'Oven 4',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 4',\r\n                path: `${path}/Oven-4`,\r\n              },\r\n              {\r\n                childCount: 0,\r\n                twin: {\r\n                  twinId: 'Oven-5',\r\n                  displayName: 'Oven 5',\r\n                  description: 'Oven 5',\r\n                  state: 'Active',\r\n                },\r\n                displayName: 'Oven 5',\r\n                path: `${path}/Oven-5`,\r\n              },\r\n            ],\r\n            continuationToken: undefined,\r\n            continuationUri: undefined,\r\n          },\r\n        });\r\n    }\r\n    return Promise.resolve({\r\n      state: 'error',\r\n      errorMessage: 'Not Found',\r\n      errorCode: '404',\r\n    });\r\n  };\r\n}\r\n","import {\r\n  HierarchyClientType,\r\n  HierarchyNodesWithContinuationToken,\r\n} from './HierarchyClient.types';\r\nimport {\r\n  BaseClient,\r\n  API_VERSION,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { DataResponse } from '../../models';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport class HierarchyClient extends BaseClient implements HierarchyClientType {\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n  getRoots = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    continuationToken?: string | undefined,\r\n  ): Promise<DataResponse<HierarchyNodesWithContinuationToken>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const result = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/hierarchy',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get({\r\n        queryParameters: {\r\n          continuationToken: continuationToken,\r\n        },\r\n      });\r\n    if (this.isErrorResponse(result)) {\r\n      return {\r\n        state: 'error',\r\n        errorMessage: result?.body?.message || 'Unknown error',\r\n        errorCode: result?.status || 'Unknown error',\r\n      };\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: result.body as HierarchyNodesWithContinuationToken,\r\n    };\r\n  };\r\n  getChildren = async (\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n    continuationToken?: string | undefined,\r\n  ): Promise<DataResponse<HierarchyNodesWithContinuationToken>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const result = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/hierarchy',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get({\r\n        queryParameters: {\r\n          path: twinId,\r\n          continuationToken: continuationToken,\r\n        },\r\n      });\r\n    if (this.isErrorResponse(result)) {\r\n      return {\r\n        state: 'error',\r\n        errorMessage: result?.body?.message || 'Unknown error',\r\n        errorCode: result?.status || 'Unknown error',\r\n      };\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: result.body as HierarchyNodesWithContinuationToken,\r\n    };\r\n  };\r\n}\r\n","import { DataResponse } from '../../models';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport {\r\n  HierarchyNodeOutput,\r\n  HierarchyNodePagedCollectionOutput,\r\n  TwinOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\n\r\nexport type HierarchyNode = Pick<\r\n  HierarchyNodeOutput,\r\n  'path' | 'displayName' | 'childCount' | 'twin'\r\n> &\r\n  Pick<\r\n    HierarchyNodesWithContinuationToken,\r\n    'continuationToken' | 'continuationUri'\r\n  >;\r\nexport type HierarchyTwin = Pick<\r\n  TwinOutput,\r\n  'twinId' | 'displayName' | 'description' | 'state' | 'modelId'\r\n>;\r\n\r\nexport type HierarchyTwinState = 'Active' | 'Deleted';\r\n\r\nexport type HierarchyNodesWithContinuationToken = Pick<\r\n  HierarchyNodePagedCollectionOutput,\r\n  'continuationToken' | 'continuationUri'\r\n> & {\r\n  value: HierarchyNode[];\r\n};\r\n\r\nexport interface HierarchyClientType {\r\n  getRoots(\r\n    logConfig: Partial<FeatureEvent>,\r\n    continuationToken?: string | undefined,\r\n    continuationUri?: string | undefined,\r\n  ): Promise<DataResponse<HierarchyNodesWithContinuationToken>>;\r\n  getChildren(\r\n    path: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n    continuationToken?: string | undefined,\r\n    continuationUri?: string | undefined,\r\n  ): Promise<DataResponse<HierarchyNodesWithContinuationToken>>;\r\n}\r\n","export * from './HierarchyClient.mock';\r\nexport * from './HierarchyClient.types';\r\nexport * from './HierarchyClient';\r\n","import { FeatureEvent } from '@trident/certified-events';\r\nimport { ILakehouse, ILakehouseClient } from './LakehouseClient.types';\r\nimport { getLogger } from '../../telemetry';\r\nimport {\r\n  ArtifactInfoInput,\r\n  LakehouseTable,\r\n  LakehouseTableOperationInput,\r\n  LakehouseTablePreviewOperationInput,\r\n  TableColumn,\r\n  TablePreviewData,\r\n  TableType,\r\n} from '@lakehouse-ux/clients';\r\n\r\nconst MODULE_NAME = 'LakehouseClientMock';\r\n\r\nexport class MockLakehouseClient implements ILakehouseClient {\r\n  clientId: string;\r\n  constructor() {\r\n    this.clientId = '';\r\n  }\r\n\r\n  getLakehouse(\r\n    _objectId: string,\r\n    _logConfig?: Partial<FeatureEvent> | undefined,\r\n  ): Promise<ILakehouse> {\r\n    return Promise.resolve(MOCK_LAKEHOUSE_DATA[0]);\r\n  }\r\n\r\n  listLakehouses(\r\n    _workspaceObjectId: string,\r\n    _logConfig?: Partial<FeatureEvent> | undefined,\r\n  ): Promise<ILakehouse[]> {\r\n    getLogger().info(MODULE_NAME, 'Fetching list of Lakehouses');\r\n    return Promise.resolve(MOCK_LAKEHOUSE_DATA);\r\n  }\r\n\r\n  listTables(\r\n    lakehouse: ArtifactInfoInput,\r\n    _logConfig?: Partial<FeatureEvent> | undefined,\r\n  ): Promise<LakehouseTable[]> {\r\n    getLogger().info(MODULE_NAME, `Fetching list of tables for ${lakehouse}`);\r\n    return Promise.resolve(MOCK_TABLE_DETAILS.get(lakehouse.artifactId) || []);\r\n  }\r\n\r\n  getTableDetails(\r\n    _tableInfo: LakehouseTableOperationInput,\r\n    _logConfig?: Partial<FeatureEvent> | undefined,\r\n  ): Promise<TableColumn[]> {\r\n    return Promise.resolve([\r\n      {\r\n        name: 'twinId',\r\n        type: 'string',\r\n        nullable: false,\r\n      },\r\n      {\r\n        name: 'timeseriesDataPointID',\r\n        type: 'string',\r\n        nullable: true,\r\n      },\r\n      {\r\n        name: 'ts',\r\n        type: 'timestamp',\r\n        nullable: true,\r\n      },\r\n      {\r\n        name: 'value',\r\n        type: 'double',\r\n        nullable: true,\r\n      },\r\n    ]);\r\n  }\r\n  getTablePreview(\r\n    _tableInfo: LakehouseTablePreviewOperationInput,\r\n    _logConfig: Partial<FeatureEvent>,\r\n    _schemaName?: string | undefined,\r\n  ): Promise<TablePreviewData> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n\r\nconst MOCK_LAKEHOUSE_DATA: ILakehouse[] = [\r\n  {\r\n    artifactId: 'mock-lakehouse-1',\r\n    displayName: 'Lakehouse 1',\r\n    workspaceId: 'mock-workspace-1',\r\n    capacityId: 'mock-capacity-1',\r\n  },\r\n  {\r\n    artifactId: 'mock-lakehouse-2',\r\n    displayName: 'Lakehouse 2',\r\n    workspaceId: 'mock-workspace-2',\r\n    capacityId: 'mock-capacity-2',\r\n  },\r\n];\r\n\r\nconst MOCK_TABLE_DETAILS = new Map<string, LakehouseTable[]>([\r\n  [\r\n    MOCK_LAKEHOUSE_DATA[0].artifactId,\r\n    [\r\n      {\r\n        name: 'test table 1',\r\n        format: 'delta',\r\n        fullAbfsPath: 'abfs://mock-lakehouse-1/mock-workspace-1/mock-table-1',\r\n        isDeltaTable: true,\r\n        relativePath: 'mock-table-1',\r\n        type: TableType.MANAGED,\r\n      },\r\n    ],\r\n  ],\r\n  [\r\n    MOCK_LAKEHOUSE_DATA[1].artifactId,\r\n    [\r\n      {\r\n        name: 'test table 2',\r\n        format: 'delta',\r\n        fullAbfsPath: 'abfs://mock-lakehouse-1/mock-workspace-1/mock-table-1',\r\n        isDeltaTable: true,\r\n        relativePath: 'mock-table-1',\r\n        type: TableType.MANAGED,\r\n      },\r\n    ],\r\n  ],\r\n]);\r\n","import { FeatureEvent, Status } from '@trident/certified-events';\r\nimport {\r\n  ExtensionClientAPI,\r\n  ExtensionSettings,\r\n} from '@trident/extension-client';\r\nimport {\r\n  ArtifactClient,\r\n  ServiceClientConfig,\r\n} from '@trident/data-access-artifact';\r\nimport {\r\n  ArtifactInfoInput,\r\n  LakehouseTable,\r\n  LakehouseTableOperationInput,\r\n  LakehouseWorkloadClient,\r\n  TableColumn,\r\n  TablePreviewData,\r\n  createLakehouseWorkloadClient,\r\n} from '@lakehouse-ux/clients';\r\nimport { IMwcTokenProvider, getMwcTokenProvider } from '../common';\r\nimport { v4 as createGuid } from 'uuid';\r\nimport { JobCreateActivity, getLogger } from '../../telemetry';\r\nimport { getTridentAPIErrorMessage } from '../../utilities';\r\nimport {\r\n  GetTablePreviewArgs,\r\n  ILakehouse,\r\n  ILakehouseClient,\r\n} from './LakehouseClient.types';\r\n\r\n/**\r\n * Constants for logging.\r\n */\r\nconst MODULE_NAME = 'LakehouseClient';\r\n\r\nexport class LakehouseClient implements ILakehouseClient {\r\n  private extensionClient: ExtensionClientAPI;\r\n  private client: LakehouseWorkloadClient | undefined;\r\n  clientId: string;\r\n  mwcTokenProvider: IMwcTokenProvider;\r\n  settings: ExtensionSettings | undefined;\r\n\r\n  constructor(extensionClient: ExtensionClientAPI) {\r\n    this.extensionClient = extensionClient;\r\n    this.clientId = createGuid(); // used to correlate service calls\r\n    this.mwcTokenProvider = getMwcTokenProvider(extensionClient);\r\n  }\r\n\r\n  async listLakehouses(\r\n    workspaceObjectId: string,\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<ILakehouse[]> {\r\n    getLogger().info(MODULE_NAME, 'Fetching list of Lakehouses');\r\n\r\n    const client = new ArtifactClient(await this.getServiceConfig());\r\n\r\n    const artifacts = await this.makeExternalCall(\r\n      async () => await client.listArtifacts({ workspaceObjectId }),\r\n      logConfig,\r\n    );\r\n\r\n    const lakehouses = artifacts.reduce((array, lakehouse) => {\r\n      if (lakehouse.artifactType === 'Lakehouse') {\r\n        array.push({\r\n          artifactId: lakehouse.objectId,\r\n          displayName: lakehouse.displayName,\r\n          workspaceId: workspaceObjectId,\r\n          capacityId: lakehouse.capacityObjectId,\r\n        });\r\n      }\r\n      return array;\r\n    }, [] as ILakehouse[]);\r\n    getLogger().info(MODULE_NAME, 'Fetched list of Lakehouses');\r\n    return lakehouses;\r\n  }\r\n\r\n  async getLakehouse(\r\n    objectId: string,\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<ILakehouse> {\r\n    getLogger().info(MODULE_NAME, 'Fetching Lakehouse');\r\n    const client = new ArtifactClient(await this.getServiceConfig());\r\n    const lakehouse = await this.makeExternalCall(\r\n      async () => await client.getArtifact({ objectId }),\r\n      logConfig,\r\n    );\r\n    getLogger().info(MODULE_NAME, 'Fetched Lakehouse');\r\n    return {\r\n      artifactId: lakehouse.objectId,\r\n      displayName: lakehouse.displayName,\r\n      workspaceId: lakehouse.folderObjectId,\r\n      capacityId: lakehouse.capacityObjectId,\r\n    };\r\n  }\r\n\r\n  async listTables(\r\n    lakehouse: ArtifactInfoInput,\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<LakehouseTable[]> {\r\n    getLogger().info(MODULE_NAME, `Fetching list of tables for ${lakehouse}`);\r\n\r\n    const client = await this.getLakehouseWorkloadClient();\r\n    const tables = await this.makeExternalCall(\r\n      async () => await client.listTables(lakehouse),\r\n      logConfig,\r\n    );\r\n    return tables;\r\n  }\r\n\r\n  async getTableDetails(\r\n    tableInfo: LakehouseTableOperationInput,\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<TableColumn[]> {\r\n    const client = await this.getLakehouseWorkloadClient();\r\n    getLogger().info(\r\n      MODULE_NAME,\r\n      `Starting long running job for fetching table details for table ${name}`,\r\n    );\r\n    const result = await this.makeExternalCall(\r\n      async () => await client.getTableDetails(tableInfo),\r\n      logConfig,\r\n    );\r\n    getLogger().info(MODULE_NAME, 'Fetched table details');\r\n    return result;\r\n  }\r\n\r\n  async getTablePreview(\r\n    tablePreviewArgs: GetTablePreviewArgs,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<TablePreviewData> {\r\n    const client = await this.getLakehouseWorkloadClient();\r\n    getLogger().info(\r\n      MODULE_NAME,\r\n      `Start calls to get preview for table ${tablePreviewArgs.tableName}`,\r\n    );\r\n\r\n    let isDeltaTable = false;\r\n    if (\r\n      tablePreviewArgs.isDeltaTable === undefined ||\r\n      tablePreviewArgs.isDeltaTable === null\r\n    ) {\r\n      // enumerate tables to see if it's a delta table\r\n      const tables = await this.listTables(tablePreviewArgs, {\r\n        ...logConfig,\r\n        activityName: JobCreateActivity.ListTablesCalled,\r\n      });\r\n      const table = tables.find(\r\n        (table) => table.name === tablePreviewArgs.tableName,\r\n      );\r\n      if (!table) {\r\n        getLogger().error(\r\n          MODULE_NAME,\r\n          `Table ${tablePreviewArgs.tableName} not found in lakehouse ${tablePreviewArgs.artifactId}`,\r\n        );\r\n        throw new Error('Table not found');\r\n      }\r\n      isDeltaTable = table.isDeltaTable;\r\n    } else {\r\n      isDeltaTable = tablePreviewArgs.isDeltaTable;\r\n    }\r\n\r\n    const tableDetails =\r\n      tablePreviewArgs.schema ??\r\n      (await this.getTableDetails(tablePreviewArgs, {\r\n        ...logConfig,\r\n        activityName: JobCreateActivity.GetTablePreviewCalled,\r\n      }));\r\n\r\n    const result = await this.makeExternalCall(\r\n      async () =>\r\n        await client.getTablePreview(\r\n          {\r\n            ...tablePreviewArgs,\r\n            isDeltaTable: isDeltaTable,\r\n            schema: tableDetails,\r\n            tableName: tablePreviewArgs.tableName,\r\n          },\r\n          tablePreviewArgs.schemaName,\r\n        ),\r\n      logConfig,\r\n    );\r\n    getLogger().info(\r\n      MODULE_NAME,\r\n      `Fetched table preview for table ${tablePreviewArgs.tableName}`,\r\n    );\r\n    return result;\r\n  }\r\n\r\n  // #region Private\r\n\r\n  private async getLakehouseWorkloadClient() {\r\n    if (this.client) {\r\n      return this.client;\r\n    }\r\n    const extensionSettings = await this.extensionClient.settings.get();\r\n    this.client = createLakehouseWorkloadClient({\r\n      localeProvider: async () => extensionSettings.currentLanguageLocale,\r\n      tokenProvider: this.extensionClient.auth,\r\n      clientId: extensionSettings.instanceId,\r\n      featureSwitchProvider: (name: string) =>\r\n        extensionSettings.featureSwitches[name],\r\n    });\r\n\r\n    return this.client;\r\n  }\r\n\r\n  private async getServiceConfig(): Promise<ServiceClientConfig> {\r\n    getLogger().info(MODULE_NAME, 'Fetching service config');\r\n    const settings = await this.extensionClient.settings.get();\r\n    return {\r\n      baseUrl: settings?.sharedBackendUri,\r\n      extensionHostOrigin: settings?.extensionHostOrigin,\r\n      tokenProvider: () =>\r\n        this.extensionClient.getAccessToken().then(({ token }) => {\r\n          return token;\r\n        }),\r\n    };\r\n  }\r\n\r\n  private async makeExternalCall<T>(\r\n    targetFunction: () => Promise<T>,\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<T> {\r\n    let startTime;\r\n    let endTime;\r\n    let activityStatus: Status = Status.Failed; // Default to failed so we get alerted if anything unexpected happens\r\n    let activityAttributes: Record<string, string> | undefined;\r\n    let resultCode = undefined;\r\n    let result;\r\n    try {\r\n      startTime = new Date();\r\n\r\n      result = await targetFunction();\r\n\r\n      activityStatus = Status.Succeeded;\r\n    } catch (e) {\r\n      if (logConfig) {\r\n        resultCode = e.status;\r\n        activityAttributes = {\r\n          errorMessage: getTridentAPIErrorMessage(e),\r\n        };\r\n\r\n        if (e.result?.error?.errorCode == 'LakehouseOperationCancelled') {\r\n          activityStatus = Status.Cancelled;\r\n        }\r\n      }\r\n      throw e;\r\n    } finally {\r\n      endTime = new Date();\r\n      getLogger().logStandardizedCertifiedEvent({\r\n        ...logConfig,\r\n        activityStatus,\r\n        resultCode,\r\n        activityAttributes,\r\n        operationStartTime: startTime?.toISOString(),\r\n        operationEndTime: endTime?.toISOString(),\r\n      });\r\n    }\r\n    return result;\r\n  }\r\n  // #endregion\r\n}\r\n","import { FeatureEvent } from '@trident/certified-events';\r\nimport {\r\n  ArtifactInfoInput,\r\n  LakehouseTable,\r\n  LakehouseTableOperationInput,\r\n  TableColumn,\r\n  TablePreviewData,\r\n} from '@lakehouse-ux/clients';\r\n\r\nexport interface ILakehouse extends ArtifactInfoInput {\r\n  displayName: string;\r\n}\r\n\r\nexport interface GetTablePreviewArgs extends ArtifactInfoInput {\r\n  tableName: string;\r\n  schemaName?: string | undefined;\r\n  /** providing this field will avoid a network call. Provide it if the ListTables API has already been called and we have the table data */\r\n  isDeltaTable?: boolean;\r\n  /** providing this will skip a data call to fetch the schema. Provide it if the TableDetails API was already called and we have the column data */\r\n  schema?: TableColumn[];\r\n}\r\n\r\nexport interface ILakehouseClient {\r\n  /** get the lakehouse artifact details */\r\n  getLakehouse(\r\n    objectId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<ILakehouse>;\r\n  /** enumerate lakehouse artifacts in the given workspace */\r\n  listLakehouses(\r\n    workspaceObjectId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<ILakehouse[]>;\r\n  /**\r\n   * (Async) Retrieves the list of tables in a lakehouse.\r\n   * @param lakehouse @see {@link IArtifactInfoInput} object to retrieve tables for.\r\n   * @returns List of @see {@link Table} objects.\r\n   * @throws TODO\r\n   */\r\n  listTables(\r\n    lakehouse: ArtifactInfoInput,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<LakehouseTable[]>;\r\n  /**\r\n   * Get table details.\r\n   * @param table Table to query.\r\n   * @throws TODO\r\n   */\r\n  getTableDetails(\r\n    lakehouseTableInfo: LakehouseTableOperationInput,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<TableColumn[]>;\r\n  /**\r\n   * (Async) Retrieves the list of tables in a lakehouse.\r\n   * @param tableInfo @see {@link ILakehouseTableOperationInput} object to retrieve tables for.\r\n   * @param tableSchema TODO\r\n   * @param maxRows Maximum number of rows to retrieve.\r\n   * @throws TODO\r\n   */\r\n  getTablePreview(\r\n    previewArgs: GetTablePreviewArgs,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<TablePreviewData>;\r\n}\r\n","export * from '../LakehouseClient/LakehouseClient';\r\nexport * from '../LakehouseClient/LakehouseClient.mock';\r\nexport * from '../LakehouseClient/LakehouseClient.types';\r\nexport {\r\n  ArtifactInfoInput,\r\n  initLogger as initLakehouseLogger,\r\n  LakehouseTable,\r\n  LakehouseTableOperationInput,\r\n  LakehouseTablePreviewOperationInput,\r\n  TableColumn,\r\n  TablePreviewData,\r\n  TableType,\r\n} from '@lakehouse-ux/clients';\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport {\r\n  API_VERSION,\r\n  BaseClient,\r\n  LogConfigEvent,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport {\r\n  CreateMappingJobResponse,\r\n  DeleteMappingJobResponse,\r\n  GetMappingJobResponse,\r\n  GetMappingJobsResponse,\r\n  IMappingClient,\r\n  MappingJobInput,\r\n  MappingJobRun,\r\n  RunMappingJobResponse,\r\n  GetMappingJobsHistoryResponse,\r\n  UpdateMappingJobResponse,\r\n} from './MappingClient.types';\r\nimport {\r\n  fromMappingJobInput,\r\n  toMappingJob,\r\n  toMappingJobRun,\r\n} from './MappingClient.utils';\r\n\r\nexport class MappingClient extends BaseClient implements IMappingClient {\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n\r\n  getMappingJobsHistory = async (): Promise<GetMappingJobsHistoryResponse> => {\r\n    const client = await this.getClient();\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/transformationJobHistory',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get();\r\n\r\n    // handle errors\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status,\r\n        errorMessage: response.body.message,\r\n      };\r\n    }\r\n\r\n    // handle success\r\n    const result = response.body.runs;\r\n    return {\r\n      state: 'success',\r\n      data: result.map(toMappingJobRun),\r\n    };\r\n  };\r\n\r\n  getMappingJobs = async (\r\n    logConfig: LogConfigEvent,\r\n    continuationToken?: string,\r\n  ): Promise<GetMappingJobsResponse> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/transformations',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get({\r\n        queryParameters: {\r\n          continuationToken,\r\n        },\r\n      });\r\n\r\n    // handle errors\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status,\r\n        errorMessage: response.body.message,\r\n      };\r\n    }\r\n\r\n    // handle success\r\n    const result = response.body;\r\n    return {\r\n      state: 'success',\r\n      data: {\r\n        continuationToken: result.continuationToken,\r\n        data: result.value.map(toMappingJob),\r\n      },\r\n    };\r\n  };\r\n\r\n  createMappingJob = async (\r\n    input: MappingJobInput,\r\n    logConfig: LogConfigEvent,\r\n  ): Promise<CreateMappingJobResponse> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/transformations',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        body: fromMappingJobInput(input),\r\n      });\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status,\r\n        errorMessage: response.body.message,\r\n      };\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: toMappingJob(response.body),\r\n    };\r\n  };\r\n\r\n  updateMappingJob = async (\r\n    jobId: string,\r\n    mappingJob: MappingJobInput,\r\n    logConfig: LogConfigEvent,\r\n  ): Promise<UpdateMappingJobResponse> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/transformations/{transformationId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        jobId,\r\n      )\r\n      .patch({\r\n        body: fromMappingJobInput(mappingJob),\r\n      });\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status,\r\n        errorMessage: response.body.message,\r\n      };\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: toMappingJob(response.body),\r\n    };\r\n  };\r\n\r\n  getMappingJob = async (\r\n    transformationId: string,\r\n  ): Promise<GetMappingJobResponse> => {\r\n    const client = await this.getClient();\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/transformations/{transformationId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        transformationId,\r\n      )\r\n      .get();\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status,\r\n        errorMessage: response.body.message,\r\n      };\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: toMappingJob(response.body),\r\n    };\r\n  };\r\n\r\n  deleteMappingJob = async (\r\n    transformationId: string,\r\n    logConfig: LogConfigEvent,\r\n  ): Promise<DeleteMappingJobResponse> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/transformations/{transformationId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        transformationId,\r\n      )\r\n      .delete();\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status,\r\n        errorMessage: response.body.message,\r\n      };\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: true,\r\n    };\r\n  };\r\n\r\n  runMappingJob = async (\r\n    transformationId: string,\r\n    logConfig: LogConfigEvent,\r\n  ): Promise<RunMappingJobResponse> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      .path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/transformations/{transformationId}/run',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        transformationId,\r\n      )\r\n      .post({\r\n        body: {},\r\n      });\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response.status,\r\n        errorMessage: response.body.message,\r\n      };\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: response.body as MappingJobRun,\r\n    };\r\n  };\r\n}\r\n","import {\r\n  ActivitiesMappingConfig,\r\n  ActivitiesMappingConfigOutput,\r\n  MappingConfigOutputParent,\r\n  MappingConfigParent,\r\n  MappingJobConfigurationOutput,\r\n  MappingJobSchedulingConfig,\r\n  MappingJobSchedulingConfigOutput,\r\n  SourceColumnDefinition,\r\n  TransformationRunOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport { DataResponse } from '../../models';\r\nimport { WithContinuationToken } from '../Clients.types';\r\nimport { LogConfigEvent } from '../DigitalOperationsClients/BaseClient';\r\n\r\n/** Response typings */\r\n\r\nexport type MappingJobList = WithContinuationToken<MappingJob[]>;\r\nexport type CreateMappingJobResponse = DataResponse<MappingJob>;\r\nexport type UpdateMappingJobResponse = GetMappingJobResponse;\r\nexport type GetMappingJobResponse = DataResponse<MappingJob>;\r\nexport type GetMappingJobsResponse = DataResponse<MappingJobList>;\r\nexport type GetMappingJobsHistoryResponse = DataResponse<MappingJobRun[]>;\r\nexport type DeleteMappingJobResponse = DataResponse<boolean>;\r\nexport type RunMappingJobResponse = DataResponse<MappingJobRun>;\r\n\r\nexport interface IMappingClient {\r\n  getMappingJobsHistory(): Promise<GetMappingJobsHistoryResponse>;\r\n\r\n  getMappingJobs(\r\n    logConfig: LogConfigEvent,\r\n    continuationToken?: string,\r\n  ): Promise<GetMappingJobsResponse>;\r\n\r\n  createMappingJob(\r\n    input: MappingJobInput,\r\n    logConfig: LogConfigEvent,\r\n  ): Promise<CreateMappingJobResponse>;\r\n\r\n  updateMappingJob(\r\n    jobId: string,\r\n    mappingJob: MappingJobInput,\r\n    logConfig: LogConfigEvent,\r\n  ): Promise<UpdateMappingJobResponse>;\r\n\r\n  getMappingJob(transformationId: string): Promise<GetMappingJobResponse>;\r\n\r\n  deleteMappingJob(\r\n    transformationId: string,\r\n    logConfig: LogConfigEvent,\r\n  ): Promise<DeleteMappingJobResponse>;\r\n\r\n  runMappingJob(\r\n    transformationId: string,\r\n    logConfig: LogConfigEvent,\r\n  ): Promise<RunMappingJobResponse>;\r\n}\r\n\r\n/** Common typings */\r\n\r\nexport const enum MappingSparkJobSchedulingType {\r\n  Daily = 'Daily',\r\n  Minutes = 'Minutes',\r\n  Hourly = 'Hourly',\r\n  Weekly = 'Weekly',\r\n  None = 'None',\r\n}\r\n\r\nexport enum MappingDataCategory {\r\n  Hierarchy = 'Hierarchy',\r\n  Tags = 'Tags',\r\n  TimeSeries = 'TimeSeries',\r\n  Activities = 'Activities',\r\n  Events = 'Events',\r\n}\r\n\r\nexport type Mapping = SourceColumnDefinition;\r\n\r\n/** Input typings */\r\n\r\n/**\r\n * The parent-level typing used for inputting\r\n * a MappingJob (create or update) that the UX\r\n * will provide to the backend.\r\n */\r\nexport type MappingJobInput = {\r\n  configuration: MappingConfigurationInput;\r\n};\r\n\r\ntype MappingConfigurationInputBase = Pick<\r\n  MappingConfigParent,\r\n  'name' | 'lakehouseArtifactId' | 'lakehouseWorkspaceId'\r\n> & {\r\n  tableName: string;\r\n  fullAbfsPath: string;\r\n  dataCategory: MappingDataCategory;\r\n  mappings: Record<string, Mapping>;\r\n  sparkJob: {\r\n    schedulingConfiguration: MappingSparkJobSchedulingConfigurationInput;\r\n  };\r\n};\r\n\r\nexport type MappingSparkJobSchedulingConfigurationInput = Omit<\r\n  MappingJobSchedulingConfig,\r\n  'scheduleType' | 'startTimeUtc' | 'endTimeUtc'\r\n> & {\r\n  startTimeUtc?: string;\r\n  endTimeUtc?: string;\r\n  scheduleType: MappingSparkJobSchedulingType;\r\n};\r\n\r\nexport type MappingConfigurationInput =\r\n  | ActivitiesMappingConfigurationInput\r\n  | EventsMappingConfigurationInput\r\n  | HierarchyMappingConfigurationInput\r\n  | TimeSeriesMappingConfigurationInput\r\n  | TagsMappingConfigurationInput;\r\n\r\nexport type ActivitiesMappingConfigurationInput =\r\n  MappingConfigurationInputBase &\r\n    Pick<ActivitiesMappingConfig, 'activityTypeLabel'> & {\r\n      dataCategory: MappingDataCategory.Activities;\r\n      /** Additional metadata or attributes related to the activity. */\r\n      properties: Mapping[];\r\n    };\r\n\r\nexport interface EventsMappingConfigurationInput\r\n  extends MappingConfigurationInputBase {\r\n  dataCategory: MappingDataCategory.Events;\r\n  /** Enables the mapping jobs to only process (new or updated) data from a specific time window. */\r\n  incrementalMappings: boolean;\r\n}\r\n\r\nexport interface HierarchyMappingConfigurationInput\r\n  extends MappingConfigurationInputBase {\r\n  dataCategory: MappingDataCategory.Hierarchy;\r\n  /** Additional metadata or attributes related to the hierarchy. */\r\n  properties: Mapping[];\r\n  /** Character or a sequence of characters that separates levels of the hierarchy. */\r\n  pathDelimiter: string;\r\n}\r\n\r\nexport interface TimeSeriesMappingConfigurationInput\r\n  extends MappingConfigurationInputBase {\r\n  dataCategory: MappingDataCategory.TimeSeries;\r\n  /** Enables the mapping jobs to only process (new or updated) data from a specific time window. */\r\n  incrementalMappings: boolean;\r\n}\r\n\r\nexport interface TagsMappingConfigurationInput\r\n  extends MappingConfigurationInputBase {\r\n  dataCategory: MappingDataCategory.Tags;\r\n}\r\n\r\n/** Output typings */\r\n\r\n/**\r\n * The parent-level typing used for providing\r\n * the response typings for a MappingJob from\r\n * the backend (e.g. gets and lists).\r\n */\r\n\r\nexport type MappingJob = {\r\n  /**\r\n   * The ID of the Transformation/Mapping Job.\r\n   * This will be the same value as the job's `sparkJobArtifactId`.\r\n   */\r\n  id: string;\r\n  configuration: MappingConfiguration;\r\n  readonly runs?: MappingJobRun[];\r\n};\r\n\r\nexport type MappingJobRun = Omit<TransformationRunOutput, 'status'> & {\r\n  status: MappingSparkJobStatus;\r\n};\r\n\r\nexport type MappingConfiguration =\r\n  | ActivitiesMappingConfiguration\r\n  | EventsMappingConfiguration\r\n  | HierarchyMappingConfiguration\r\n  | TimeSeriesMappingConfiguration\r\n  | TagsMappingConfiguration;\r\n\r\nexport type ActivitiesMappingConfiguration = MappingConfigurationBase &\r\n  Pick<ActivitiesMappingConfigOutput, 'activityTypeLabel'> & {\r\n    dataCategory: MappingDataCategory.Activities;\r\n    /** Additional metadata or attributes related to the activity. */\r\n    properties: Mapping[];\r\n  };\r\n\r\nexport interface EventsMappingConfiguration extends MappingConfigurationBase {\r\n  dataCategory: MappingDataCategory.Events;\r\n  /** Enables the mapping jobs to only process (new or updated) data from a specific time window. */\r\n  incrementalMappings: boolean;\r\n}\r\n\r\nexport interface HierarchyMappingConfiguration\r\n  extends MappingConfigurationBase {\r\n  dataCategory: MappingDataCategory.Hierarchy;\r\n  /** Additional metadata or attributes related to the hierarchy. */\r\n  properties: Mapping[];\r\n  /** Character or a sequence of characters that separates levels of the hierarchy. */\r\n  pathDelimiter: string;\r\n}\r\n\r\nexport interface TimeSeriesMappingConfiguration\r\n  extends MappingConfigurationBase {\r\n  dataCategory: MappingDataCategory.TimeSeries;\r\n  /** Enables the mapping jobs to only process (new or updated) data from a specific time window. */\r\n  incrementalMappings: boolean;\r\n}\r\n\r\nexport interface TagsMappingConfiguration extends MappingConfigurationBase {\r\n  dataCategory: MappingDataCategory.Tags;\r\n}\r\n\r\nexport type MappingConfigurationBase = Pick<\r\n  MappingConfigOutputParent,\r\n  'name' | 'lakehouseArtifactId' | 'lakehouseWorkspaceId'\r\n> & {\r\n  tableName: string;\r\n  fullAbfsPath: string;\r\n  dataCategory: MappingDataCategory;\r\n  mappings: Record<string, Mapping>;\r\n  sparkJob: MappingSparkJob;\r\n};\r\n\r\nexport type MappingSparkJobSchedulingConfiguration = Omit<\r\n  MappingJobSchedulingConfigOutput,\r\n  'scheduleType'\r\n> & {\r\n  scheduleType: MappingSparkJobSchedulingType;\r\n};\r\n\r\nexport type MappingSparkJob = Pick<\r\n  // `Required` is needed here since the SDK typing is incorrect.\r\n  // these fields are always defined, but are marked as optional in the SDK.\r\n  Required<MappingJobConfigurationOutput>,\r\n  'sparkJobWorkspaceId' | 'sparkJobArtifactId'\r\n> &\r\n  Pick<MappingJobConfigurationOutput, 'lastRun'> & {\r\n    status: MappingSparkJobStatus;\r\n    schedulingConfiguration: MappingSparkJobSchedulingConfiguration;\r\n  };\r\n\r\nexport const enum MappingSparkJobStatus {\r\n  Succeeded = 'Succeeded',\r\n  InProgress = 'InProgress',\r\n  Queued = 'Queued',\r\n  Canceled = 'Canceled',\r\n  Failed = 'Failed',\r\n  NotStarted = 'NotStarted',\r\n  OwnerUserMissing = 'OwnerUserMissing',\r\n  Unknown = 'Unknown',\r\n}\r\n","import {\r\n  TransformationOutput,\r\n  Transformation,\r\n  TransformationRunOutput,\r\n  MappingJobSchedulingConfigOutput as TransformationJobSchedulingConfigOutput,\r\n  MappingConfigParent as TransformationConfigParent,\r\n  MappingJobConfiguration as TransformationJobConfiguration,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport {\r\n  MappingJob,\r\n  MappingDataCategory,\r\n  MappingSparkJobSchedulingConfiguration,\r\n  MappingSparkJobSchedulingType,\r\n  MappingSparkJobStatus,\r\n  MappingJobInput,\r\n  MappingJobRun,\r\n  MappingConfigurationInput,\r\n  MappingSparkJobSchedulingConfigurationInput,\r\n} from './MappingClient.types';\r\n\r\nexport function fromMappingJobInput(job: MappingJobInput): Transformation {\r\n  const mappingConfig = job.configuration;\r\n  const baseConfig: TransformationConfigParent = {\r\n    dataCategory: mappingConfig.dataCategory,\r\n    name: mappingConfig.name,\r\n    lakehouseWorkspaceId: mappingConfig.lakehouseWorkspaceId,\r\n    lakehouseArtifactId: mappingConfig.lakehouseArtifactId,\r\n    sourceTable: mappingConfig.tableName,\r\n    stagingLakehouseABFSPath: mappingConfig.fullAbfsPath,\r\n    mappings: fromMappingJobInputMappings(mappingConfig.mappings),\r\n    mappingJobConfiguration: fromMappingJobInputSchedulingConfiguration(\r\n      mappingConfig.sparkJob.schedulingConfiguration,\r\n    ),\r\n  };\r\n\r\n  switch (mappingConfig.dataCategory) {\r\n    case MappingDataCategory.Activities:\r\n      return {\r\n        mappingConfig: {\r\n          ...baseConfig,\r\n          dataCategory: 'Activities',\r\n          activityTypeLabel: mappingConfig.activityTypeLabel,\r\n          properties: mappingConfig.properties,\r\n        },\r\n      };\r\n    case MappingDataCategory.Events:\r\n      return {\r\n        mappingConfig: {\r\n          ...baseConfig,\r\n          dataCategory: 'Events',\r\n          incrementalProcessing: mappingConfig.incrementalMappings,\r\n        },\r\n      };\r\n    case MappingDataCategory.Hierarchy:\r\n      return {\r\n        mappingConfig: {\r\n          ...baseConfig,\r\n          dataCategory: 'Hierarchy',\r\n          properties: mappingConfig.properties,\r\n          pathDelimiter: mappingConfig.pathDelimiter,\r\n        },\r\n      };\r\n    case MappingDataCategory.TimeSeries:\r\n      return {\r\n        mappingConfig: {\r\n          ...baseConfig,\r\n          dataCategory: 'TimeSeries',\r\n          incrementalProcessing: mappingConfig.incrementalMappings,\r\n        },\r\n      };\r\n    case MappingDataCategory.Tags:\r\n      return {\r\n        mappingConfig: {\r\n          ...baseConfig,\r\n          dataCategory: 'Tags',\r\n        },\r\n      };\r\n  }\r\n}\r\n\r\nexport function fromMappingJobInputMappings(\r\n  mappings: MappingConfigurationInput['mappings'],\r\n): TransformationConfigParent['mappings'] {\r\n  const definedMappings: TransformationConfigParent['mappings'] = {};\r\n  for (const key in mappings) {\r\n    // only include mappings that have a source column defined:\r\n    // the `sourceColumn` will be an empty string if the mapping was never set,\r\n    // and will be `undefined` if the mapping was set and then cleared.\r\n    if (mappings[key].sourceColumn) {\r\n      definedMappings[key] = mappings[key];\r\n    }\r\n  }\r\n\r\n  return definedMappings;\r\n}\r\n\r\nexport function fromMappingJobInputSchedulingConfiguration(\r\n  config: MappingSparkJobSchedulingConfigurationInput,\r\n): TransformationJobConfiguration {\r\n  return {\r\n    mappingJobSchedulingConfig: {\r\n      scheduled: config.scheduled,\r\n      repeatIntervalDurationInMinutes: config.repeatIntervalDurationInMinutes,\r\n      localTimeZoneId: config.localTimeZoneId,\r\n      scheduleType: config.scheduleType,\r\n      scheduleWeekdays: config.scheduleWeekdays,\r\n      // the fields below may be cleared out in the UX, resulting in an empty value.\r\n      // if so, we need to ensure that they are undefined when sent to the server.\r\n      startTimeUtc: config.startTimeUtc || undefined,\r\n      endTimeUtc: config.endTimeUtc || undefined,\r\n      scheduleHours:\r\n        config.scheduleHours === '[]' ? undefined : config.scheduleHours,\r\n    },\r\n  };\r\n}\r\n\r\nexport function toMappingJob(job: TransformationOutput): MappingJob {\r\n  const mappingConfig = job.mappingConfig;\r\n  const mappingJobConfig = mappingConfig.mappingJobConfiguration;\r\n  const mappingJobSchedulingConfig =\r\n    mappingJobConfig.mappingJobSchedulingConfig;\r\n\r\n  const baseConfig = {\r\n    name: mappingConfig.name,\r\n    lakehouseWorkspaceId: mappingConfig.lakehouseWorkspaceId,\r\n    lakehouseArtifactId: mappingConfig.lakehouseArtifactId,\r\n    tableName: mappingConfig.sourceTable,\r\n    // have to add these checks to allow typings to pass since these are incorrectly defined as optional in SDK.\r\n    // these fields will be defined in the response output types.\r\n    fullAbfsPath: mappingConfig.stagingLakehouseABFSPath || '',\r\n    mappings: mappingConfig.mappings,\r\n    dataCategory: undefined,\r\n    sparkJob: {\r\n      status: toMappingSparkJobStatus(mappingJobConfig.status),\r\n      lastRun: mappingJobConfig.lastRun,\r\n      sparkJobWorkspaceId: mappingJobConfig.sparkJobWorkspaceId || '',\r\n      sparkJobArtifactId: mappingJobConfig.sparkJobArtifactId || '',\r\n      schedulingConfiguration: toMappingJobSchedulingConfig(\r\n        mappingJobSchedulingConfig,\r\n      ),\r\n    },\r\n  };\r\n  const runs = job.runs?.map(toMappingJobRun);\r\n  switch (mappingConfig.dataCategory) {\r\n    case 'Activities':\r\n      return {\r\n        id: baseConfig.sparkJob.sparkJobArtifactId,\r\n        runs,\r\n        configuration: {\r\n          ...baseConfig,\r\n          dataCategory: MappingDataCategory.Activities,\r\n          properties: mappingConfig.properties,\r\n          activityTypeLabel: mappingConfig.activityTypeLabel,\r\n        },\r\n      };\r\n    case 'Events':\r\n      return {\r\n        id: baseConfig.sparkJob.sparkJobArtifactId,\r\n        runs,\r\n        configuration: {\r\n          ...baseConfig,\r\n          dataCategory: MappingDataCategory.Events,\r\n          incrementalMappings: mappingConfig.incrementalProcessing,\r\n        },\r\n      };\r\n    case 'Hierarchy':\r\n      return {\r\n        id: baseConfig.sparkJob.sparkJobArtifactId,\r\n        runs,\r\n        configuration: {\r\n          ...baseConfig,\r\n          dataCategory: MappingDataCategory.Hierarchy,\r\n          properties: mappingConfig.properties,\r\n          pathDelimiter: mappingConfig.pathDelimiter,\r\n        },\r\n      };\r\n    case 'TimeSeries':\r\n      return {\r\n        id: baseConfig.sparkJob.sparkJobArtifactId,\r\n        runs,\r\n        configuration: {\r\n          ...baseConfig,\r\n          dataCategory: MappingDataCategory.TimeSeries,\r\n          incrementalMappings: mappingConfig.incrementalProcessing,\r\n        },\r\n      };\r\n    case 'Tags':\r\n      return {\r\n        id: baseConfig.sparkJob.sparkJobArtifactId,\r\n        runs,\r\n        configuration: {\r\n          ...baseConfig,\r\n          dataCategory: MappingDataCategory.Tags,\r\n        },\r\n      };\r\n  }\r\n}\r\n\r\nexport function toMappingJobSchedulingConfig(\r\n  config: TransformationJobSchedulingConfigOutput,\r\n): MappingSparkJobSchedulingConfiguration {\r\n  let scheduleType: MappingSparkJobSchedulingType;\r\n  switch (config.scheduleType) {\r\n    case 'Daily':\r\n      scheduleType = MappingSparkJobSchedulingType.Daily;\r\n      break;\r\n    case 'Minutes':\r\n      scheduleType = MappingSparkJobSchedulingType.Minutes;\r\n      break;\r\n    case 'Hourly':\r\n      scheduleType = MappingSparkJobSchedulingType.Hourly;\r\n      break;\r\n    case 'Weekly':\r\n      scheduleType = MappingSparkJobSchedulingType.Weekly;\r\n      break;\r\n    case 'None':\r\n    default:\r\n      scheduleType = MappingSparkJobSchedulingType.None;\r\n      break;\r\n  }\r\n\r\n  return {\r\n    ...config,\r\n    scheduleType,\r\n  };\r\n}\r\n\r\nexport function toMappingJobRun(run: TransformationRunOutput): MappingJobRun {\r\n  return {\r\n    ...run,\r\n    status: toMappingSparkJobStatus(run.status),\r\n  };\r\n}\r\n\r\nexport function toMappingSparkJobStatus(\r\n  status: string | undefined,\r\n): MappingSparkJobStatus {\r\n  switch (status) {\r\n    case 'Succeeded':\r\n      return MappingSparkJobStatus.Succeeded;\r\n    case 'InProgress':\r\n      return MappingSparkJobStatus.InProgress;\r\n    case 'Queued':\r\n      return MappingSparkJobStatus.Queued;\r\n    case 'Canceled':\r\n    case 'Duplicate':\r\n      return MappingSparkJobStatus.Canceled;\r\n    case 'Failed':\r\n      return MappingSparkJobStatus.Failed;\r\n    case 'NotStarted':\r\n      return MappingSparkJobStatus.NotStarted;\r\n    case 'OwnerUserMissing':\r\n      return MappingSparkJobStatus.OwnerUserMissing;\r\n    case 'DeadLettered':\r\n    case 'Unknown':\r\n    default:\r\n      return MappingSparkJobStatus.Unknown;\r\n  }\r\n}\r\n","import {\r\n  CreateMappingJobResponse,\r\n  DeleteMappingJobResponse,\r\n  GetMappingJobResponse,\r\n  GetMappingJobsResponse,\r\n  IMappingClient,\r\n  MappingDataCategory,\r\n  MappingJob,\r\n  MappingJobInput,\r\n  MappingJobRun,\r\n  MappingSparkJobSchedulingType,\r\n  MappingSparkJobStatus,\r\n  RunMappingJobResponse,\r\n  GetMappingJobsHistoryResponse,\r\n  UpdateMappingJobResponse,\r\n} from '../MappingClient.types';\r\nimport { LogConfigEvent } from '../../DigitalOperationsClients/BaseClient';\r\n\r\nexport const MOCK_MAPPING_JOB: MappingJob = {\r\n  id: 'mock-job-1',\r\n  configuration: {\r\n    name: 'mock-job-1',\r\n    lakehouseWorkspaceId: 'mock-workspace-1',\r\n    lakehouseArtifactId: 'mock-lakehouse-1',\r\n    tableName: 'mock-table-1',\r\n    fullAbfsPath: 'abfs//mock-workspace-1/mock-lakehouse-1/mock-table-1',\r\n    dataCategory: MappingDataCategory.Events,\r\n    incrementalMappings: true,\r\n    mappings: {\r\n      attributes1: {\r\n        sourceColumn: 'mock-source-column-1',\r\n      },\r\n      attributes2: {\r\n        sourceColumn: 'mock-source-column-2',\r\n      },\r\n    },\r\n    sparkJob: {\r\n      status: MappingSparkJobStatus.Succeeded,\r\n      lastRun: '2021-01-01T00:00:00Z',\r\n      sparkJobWorkspaceId: 'mock-job-workspace-1',\r\n      sparkJobArtifactId: 'mock-job-artifact-1',\r\n      schedulingConfiguration: {\r\n        jobDefinitionObjectId: 'mock-job-definition-object-id-1',\r\n        scheduled: true,\r\n        repeatIntervalDurationInMinutes: 5000,\r\n        scheduleType: MappingSparkJobSchedulingType.Weekly,\r\n        startTimeUtc: '2021-01-01T00:00:00Z',\r\n        endTimeUtc: '2022-01-01T00:00:00Z',\r\n      },\r\n    },\r\n  },\r\n  runs: [],\r\n};\r\n\r\nexport const MOCK_MAPPING_JOB_RUN: MappingJobRun = {\r\n  runId: 'mock-job-id-1-run-1',\r\n  sparkJobArtifactId: 'mock-job-artifact-1',\r\n  name: 'mock-job-1-run-1',\r\n  duration: '1000',\r\n  startTimeUtc: '2021-01-01T00:00:00Z',\r\n  endTimeUtc: '2021-01-01T00:00:00Z',\r\n  status: MappingSparkJobStatus.Succeeded,\r\n  livyId: 'mock-job-livy-id-1',\r\n};\r\n\r\nexport const MOCK_MAPPING_JOBS: MappingJob[] = [\r\n  MOCK_MAPPING_JOB,\r\n  {\r\n    id: 'mock-job-2',\r\n    configuration: {\r\n      name: 'mock-job-2',\r\n      lakehouseWorkspaceId: 'mock-workspace-2',\r\n      lakehouseArtifactId: 'mock-lakehouse-2',\r\n      tableName: 'mock-table-2',\r\n      fullAbfsPath: 'abfs//mock-workspace-2/mock-lakehouse-2/mock-table-2',\r\n      dataCategory: MappingDataCategory.Hierarchy,\r\n      pathDelimiter: '/foo/bar/baz',\r\n      properties: [\r\n        {\r\n          sourceColumn: 'mock-source-column-1',\r\n        },\r\n        {\r\n          sourceColumn: 'mock-source-column-2',\r\n        },\r\n      ],\r\n      mappings: {\r\n        attributes1: {\r\n          sourceColumn: 'mock-source-column-1',\r\n        },\r\n        attributes2: {\r\n          sourceColumn: 'mock-source-column-2',\r\n        },\r\n      },\r\n      sparkJob: {\r\n        status: MappingSparkJobStatus.Failed,\r\n        lastRun: '2021-01-01T00:00:00Z',\r\n        sparkJobWorkspaceId: 'mock-job-workspace-2',\r\n        sparkJobArtifactId: 'mock-job-artifact-2',\r\n        schedulingConfiguration: {\r\n          jobDefinitionObjectId: 'mock-job-definition-object-id-2',\r\n          scheduled: true,\r\n          repeatIntervalDurationInMinutes: 5000,\r\n          scheduleType: MappingSparkJobSchedulingType.Daily,\r\n          startTimeUtc: '2021-01-01T00:00:00Z',\r\n          endTimeUtc: '2022-01-01T00:00:00Z',\r\n        },\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nexport class MockMappingClient implements IMappingClient {\r\n  getMappingJobsHistory(): Promise<GetMappingJobsHistoryResponse> {\r\n    return Promise.resolve<GetMappingJobsHistoryResponse>({\r\n      state: 'success',\r\n      data: [\r\n        MOCK_MAPPING_JOB_RUN,\r\n        {\r\n          runId: 'mock-job-id-2-run-1',\r\n          sparkJobArtifactId: 'mock-job-artifact-2',\r\n          name: 'mock-job-2-run-2',\r\n          duration: '1000',\r\n          startTimeUtc: '2021-01-01T00:00:00Z',\r\n          endTimeUtc: '2021-01-01T00:00:00Z',\r\n          status: MappingSparkJobStatus.Failed,\r\n          errorCode: '500',\r\n          errorMessages: 'Mock error message: the job failed.',\r\n        },\r\n      ],\r\n    });\r\n  }\r\n  getMappingJobs(\r\n    _logConfig: LogConfigEvent,\r\n    _continuationToken?: string | undefined,\r\n  ): Promise<GetMappingJobsResponse> {\r\n    return Promise.resolve<GetMappingJobsResponse>({\r\n      state: 'success',\r\n      data: {\r\n        continuationToken: undefined,\r\n        data: MOCK_MAPPING_JOBS,\r\n      },\r\n    });\r\n  }\r\n\r\n  getMappingJob(_transformationId: string): Promise<GetMappingJobResponse> {\r\n    return Promise.resolve<GetMappingJobResponse>({\r\n      state: 'success',\r\n      data: MOCK_MAPPING_JOB,\r\n    });\r\n  }\r\n\r\n  createMappingJob(\r\n    input: MappingJobInput,\r\n    _logConfig: LogConfigEvent,\r\n  ): Promise<CreateMappingJobResponse> {\r\n    MOCK_MAPPING_JOBS.push(input as MappingJob);\r\n    return Promise.resolve<GetMappingJobResponse>({\r\n      state: 'success',\r\n      data: input as MappingJob,\r\n    });\r\n  }\r\n\r\n  async updateMappingJob(\r\n    _jobId: string,\r\n    _mappingJobInput: MappingJob,\r\n    _logConfig: LogConfigEvent,\r\n  ): Promise<UpdateMappingJobResponse> {\r\n    return Promise.resolve<UpdateMappingJobResponse>({\r\n      state: 'success',\r\n      data: MOCK_MAPPING_JOB,\r\n    });\r\n  }\r\n\r\n  deleteMappingJob(\r\n    _transformationId: string,\r\n    _logConfig: LogConfigEvent,\r\n  ): Promise<DeleteMappingJobResponse> {\r\n    return Promise.resolve<DeleteMappingJobResponse>({\r\n      state: 'success',\r\n      data: true,\r\n    });\r\n  }\r\n\r\n  runMappingJob(\r\n    _transformationId: string,\r\n    _logConfig: LogConfigEvent,\r\n  ): Promise<RunMappingJobResponse> {\r\n    return Promise.resolve<RunMappingJobResponse>({\r\n      state: 'success',\r\n      data: MOCK_MAPPING_JOB_RUN,\r\n    });\r\n  }\r\n}\r\n","export * from './MappingClient.types';\r\nexport * from './MappingClient';\r\nexport * from './__mocks__/MappingClient.mock';\r\n","import {\r\n  ModelDetails,\r\n  ModelDetailsClientType,\r\n} from './ModelDetailsClient.types';\r\nimport { DataResponse } from '@do/core';\r\nimport { mockModelDetails } from './__mocks__/MockModelDetails';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nexport class MockModelDetailsClient implements ModelDetailsClientType {\r\n  constructor(_workspaceId?: string, _artifactId?: string) {\r\n    // There is nothing to implement on the mock. Just need to pass the ids used by real client.\r\n  }\r\n\r\n  getModelDetails(\r\n    modelId: string,\r\n    _logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<ModelDetails | undefined>> {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: mockModelDetails.find((m) => m.modelId === modelId),\r\n    });\r\n  }\r\n\r\n  updateModelName(\r\n    modelId: string,\r\n    modelName: string,\r\n    _logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<ModelDetails | undefined>> {\r\n    const modelDetails = mockModelDetails.find((m) => m.modelId === modelId);\r\n    if (modelDetails) {\r\n      modelDetails.modelName = modelName;\r\n    }\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: mockModelDetails.find((m) => m.modelId === modelId),\r\n    });\r\n  }\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport {\r\n  API_VERSION,\r\n  BaseClient,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport {\r\n  ModelDetails,\r\n  ModelDetailsClientType,\r\n} from './ModelDetailsClient.types';\r\nimport { ModelOutput } from '@microsoft/digital-operations.sdk';\r\nimport { DataResponse } from '@do/core';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport class ModelDetailsClient\r\n  extends BaseClient\r\n  implements ModelDetailsClientType\r\n{\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n\r\n  serviceModelDetailsToClientModelDetails = (\r\n    model: ModelOutput,\r\n  ): ModelDetails => ({\r\n    modelName: model.modelName,\r\n    modelId: model.modelId,\r\n    timeseriesDataPoints: model.timeseriesDataPoints,\r\n    attributes: model.attributes,\r\n  });\r\n\r\n  getModelDetails = async (\r\n    modelId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<ModelDetails>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/models/{modelId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        modelId,\r\n      )\r\n      .get();\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status || '500',\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    const modelDetails: ModelOutput = response.body as ModelOutput;\r\n    const results = this.serviceModelDetailsToClientModelDetails(modelDetails);\r\n\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n\r\n  updateModelName = async (\r\n    modelId: string,\r\n    modelName: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<ModelDetails>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/models/{modelId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        modelId,\r\n      )\r\n      .patch({\r\n        body: {\r\n          modelId,\r\n          modelName,\r\n        },\r\n      });\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status || '500',\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    const modelDetails: ModelOutput = response.body as ModelOutput;\r\n    const results = this.serviceModelDetailsToClientModelDetails(modelDetails);\r\n\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n}\r\n","import { DataResponse } from '@do/core';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport type ModelDetails = {\r\n  modelName: string;\r\n  modelId: string;\r\n  timeseriesDataPoints: ModelTimeseriesDataPoint[];\r\n  attributes: ModelAttribute[];\r\n};\r\n\r\nexport type ModelAttribute = {\r\n  name: string;\r\n  displayName?: string;\r\n  valueType: string;\r\n};\r\n\r\nexport type ModelTimeseriesDataPoint = {\r\n  timeSeriesDataPointId: string;\r\n  displayName?: string;\r\n  description?: string;\r\n  valueType: string;\r\n};\r\n\r\nexport type ModelDetailsClientType = {\r\n  getModelDetails(\r\n    modelId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<ModelDetails | undefined>>;\r\n  updateModelName(\r\n    modelName: string,\r\n    modelId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<ModelDetails | undefined>>;\r\n};\r\n","import { ModelDetails } from '../ModelDetailsClient.types';\r\n\r\nexport const mockModelDetails: ModelDetails[] = [\r\n  {\r\n    modelName: 'Mixer',\r\n    modelId: 'Mixer_Model_1',\r\n    timeseriesDataPoints: [\r\n      {\r\n        timeSeriesDataPointId: '1234',\r\n        displayName: 'Manufacturer',\r\n        description: 'Manufacturer of the product',\r\n        valueType: 'string',\r\n      },\r\n      {\r\n        timeSeriesDataPointId: '12345',\r\n        displayName: 'SoftwareVersion',\r\n        description: 'SoftwareVersion of the OS',\r\n        valueType: 'double',\r\n      },\r\n    ],\r\n    attributes: [\r\n      {\r\n        name: 'Temperature',\r\n        displayName: 'Temperature',\r\n        valueType: 'double',\r\n      },\r\n      {\r\n        name: 'Pressure',\r\n        displayName: 'Pressure',\r\n        valueType: 'double',\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    modelName: 'Pump',\r\n    modelId: 'Pump_Model_2',\r\n    timeseriesDataPoints: [\r\n      {\r\n        timeSeriesDataPointId: '1234',\r\n        displayName: 'Manufacturer',\r\n        description: 'Manufacturer of the product',\r\n        valueType: 'string',\r\n      },\r\n      {\r\n        timeSeriesDataPointId: '12345',\r\n        displayName: 'SoftwareVersion',\r\n        description: 'SoftwareVersion of the OS',\r\n        valueType: 'double',\r\n      },\r\n    ],\r\n    attributes: [\r\n      {\r\n        name: 'Temperature',\r\n        displayName: 'Temperature',\r\n        valueType: 'double',\r\n      },\r\n      {\r\n        name: 'Pressure',\r\n        displayName: 'Pressure',\r\n        valueType: 'double',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","export * from './ModelDetailsClient.types';\r\nexport * from './ModelDetailsClient.mock';\r\nexport * from './ModelDetailsClient';\r\n","import { TwinPageFilters } from '@do/prepare/components/ModelManager/TwinsPage/TwinsPage.types';\r\nimport { mockModelGenerationTwinInformation } from './_mocks_/MockModelGenerationTwinInformation';\r\nimport {\r\n  ModelGenerationTwinInformation,\r\n  ModelGenerationTwinInformationClientType,\r\n} from './ModelGenerationTwinInformationClient.types';\r\nimport { DataResponse } from '@do/core';\r\n\r\nexport class MockModelGenerationTwinInformationClient\r\n  implements ModelGenerationTwinInformationClientType\r\n{\r\n  constructor(_workspaceId?: string, _artifactId?: string) {\r\n    // There is nothing to implement on the mock. Just need to pass the ids used by real client.\r\n  }\r\n\r\n  getTwins(\r\n    filters?: TwinPageFilters,\r\n  ): Promise<DataResponse<ModelGenerationTwinInformation[]>> {\r\n    if (!filters) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: mockModelGenerationTwinInformation,\r\n      });\r\n    }\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: mockModelGenerationTwinInformation.filter((mockTwinInfo) =>\r\n        filters.twinName\r\n          ? mockTwinInfo.displayName?.includes(filters.twinName)\r\n          : true,\r\n      ),\r\n    });\r\n  }\r\n\r\n  getTwinById(\r\n    id: string,\r\n  ): Promise<DataResponse<ModelGenerationTwinInformation | undefined>> {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: mockModelGenerationTwinInformation.find(\r\n        (mockTwinInfo) => mockTwinInfo.twinId === id,\r\n      ),\r\n    });\r\n  }\r\n}\r\n","import { TwinPageFilters } from '@do/prepare/components/ModelManager/TwinsPage/TwinsPage.types';\r\nimport { DataResponse } from '@do/core';\r\n\r\n/**\r\n * Model generation Twin information displayed in the select twins page.\r\n */\r\nexport type ModelGenerationTwinInformation = {\r\n  twinId: string;\r\n  displayName: string;\r\n  existingModel: string;\r\n  createdDate: Date;\r\n};\r\n\r\nexport interface ModelGenerationTwinInformationClientType {\r\n  getTwins(\r\n    filters?: TwinPageFilters,\r\n  ): Promise<DataResponse<ModelGenerationTwinInformation[]>>;\r\n  getTwinById(\r\n    id: string,\r\n  ): Promise<DataResponse<ModelGenerationTwinInformation | undefined>>;\r\n}\r\n","import { ModelGenerationTwinInformation } from '../ModelGenerationTwinInformationClient.types';\r\n\r\n/**\r\n * Twin filter information displayed in the select twins page.\r\n */\r\nexport const mockModelGenerationTwinInformation: ModelGenerationTwinInformation[] =\r\n  [\r\n    {\r\n      twinId: 'Pump1',\r\n      displayName: 'Pump 1',\r\n      existingModel: 'Pump',\r\n      createdDate: new Date('2023-10-16T19:16:33Z'),\r\n    },\r\n\r\n    {\r\n      twinId: 'Oven1',\r\n      displayName: 'Oven 1',\r\n      existingModel: 'Oven',\r\n      createdDate: new Date('2023-10-16T19:16:33Z'),\r\n    },\r\n  ];\r\n","export * from './ModelGenerationTwinInformationClient.types';\r\nexport * from './ModelGenerationTwinInformationClient.mock';\r\n","import { ModelPageFilters } from '@do/prepare/components/ModelManager/ModelsPage/ModelsPage.types';\r\nimport {\r\n  ModelInformation,\r\n  ModelInformationClientType,\r\n} from './ModelInformationClient.types';\r\nimport { mockModelInformation } from './__mocks__/MockModelInformation';\r\nimport { DataResponse, WithContinuationToken } from '@do/core';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nexport class MockModelInformationClient implements ModelInformationClientType {\r\n  constructor(_workspaceId?: string, _artifactId?: string) {\r\n    // There is nothing to implement on the mock. Just need to pass the ids used by real client.\r\n  }\r\n\r\n  getModels(\r\n    _logConfig: Partial<FeatureEvent>,\r\n    filters?: ModelPageFilters,\r\n    _continuationToken?: string,\r\n  ): Promise<DataResponse<WithContinuationToken<ModelInformation[]>>> {\r\n    if (!filters) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          data: mockModelInformation,\r\n          continuationToken: undefined,\r\n        },\r\n      });\r\n    }\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        data: mockModelInformation.filter((mockModelInfo) =>\r\n          filters.modelName\r\n            ? mockModelInfo.modelName?.includes(filters.modelName)\r\n            : true,\r\n        ),\r\n        continuationToken: undefined,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport {\r\n  API_VERSION,\r\n  BaseClient,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport {\r\n  ModelInformation,\r\n  ModelInformationClientType,\r\n} from './ModelInformationClient.types';\r\nimport { DataResponse, WithContinuationToken } from '@do/core';\r\nimport { ModelPageFilters } from '@do/prepare/components/ModelManager/ModelsPage/ModelsPage.types';\r\nimport {\r\n  ModelGenerationModelInformationOutput,\r\n  ModelGenerationModelInformationPagedCollectionOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport class ModelInformationClient\r\n  extends BaseClient\r\n  implements ModelInformationClientType\r\n{\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n\r\n  serviceModelToClientModel = (\r\n    model: ModelGenerationModelInformationOutput,\r\n  ): ModelInformation => ({\r\n    modelId: model.modelId,\r\n    modelName: model.modelName,\r\n    createdDate: model.createdTimestampUtc\r\n      ? new Date(model.createdTimestampUtc)\r\n      : undefined,\r\n  });\r\n\r\n  getModels = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    filters?: ModelPageFilters,\r\n    continuationToken?: string,\r\n  ): Promise<DataResponse<WithContinuationToken<ModelInformation[]>>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/modelGenerationJobs/models',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        queryParameters: {\r\n          ...(continuationToken ? { continuationToken } : {}),\r\n        },\r\n        body: {\r\n          modelName: filters?.modelName || '',\r\n        },\r\n      });\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status || '500',\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n    const models: ModelGenerationModelInformationPagedCollectionOutput =\r\n      response.body as ModelGenerationModelInformationPagedCollectionOutput;\r\n    const results = models?.value.map(this.serviceModelToClientModel);\r\n\r\n    return {\r\n      state: 'success',\r\n      data: {\r\n        data: results,\r\n        continuationToken: response.body.continuationToken,\r\n      },\r\n    };\r\n  };\r\n}\r\n","import { DataResponse, WithContinuationToken } from '@do/core';\r\nimport { ModelPageFilters } from '@do/prepare/components/ModelManager/ModelsPage/ModelsPage.types';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\n/**\r\n * Model generation Models information\r\n */\r\nexport type ModelInformation = {\r\n  modelId: string;\r\n  modelName: string;\r\n  createdDate?: Date;\r\n};\r\n\r\nexport interface ModelInformationClientType {\r\n  getModels(\r\n    logConfig: Partial<FeatureEvent>,\r\n    filters?: ModelPageFilters,\r\n    continuationToken?: string,\r\n  ): Promise<DataResponse<WithContinuationToken<ModelInformation[]>>>;\r\n}\r\n","import { ModelInformation } from '../ModelInformationClient.types';\r\n\r\n/**\r\n * Model results within view Models page\r\n */\r\nexport const mockModelInformation: ModelInformation[] = [\r\n  {\r\n    modelId: 'Mixer_Model_1',\r\n    modelName: 'Mixer',\r\n    createdDate: new Date('2023-10-16T19:16:33Z'),\r\n  },\r\n\r\n  {\r\n    modelId: 'Pump_Model_2',\r\n    modelName: 'Pump',\r\n    createdDate: new Date('2023-12-16T19:16:33Z'),\r\n  },\r\n];\r\n","export * from './ModelInformationClient.types';\r\nexport * from './ModelInformationClient.mock';\r\nexport * from './ModelInformationClient';\r\n","import { mockModelingJobs } from './__mocks__/MockModelingJobs';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport {\r\n  ModelingJobs,\r\n  ModelingJobsClientType,\r\n} from './ModelingJobsClient.types';\r\nimport { DataResponse } from '@do/core';\r\n\r\nexport class MockModelingJobsClient implements ModelingJobsClientType {\r\n  constructor(_workspaceId?: string, _artifactId?: string) {\r\n    // There is nothing to implement on the mock. Just need to pass the ids used by real client.\r\n  }\r\n\r\n  getJobs(\r\n    _logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<ModelingJobs[]>> {\r\n    return Promise.resolve({ state: 'success', data: mockModelingJobs });\r\n  }\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport {\r\n  API_VERSION,\r\n  BaseClient,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport {\r\n  ModelGenerationJobOutput,\r\n  ModelGenerationJobPagedCollectionOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport {\r\n  ModelingJobs,\r\n  ModelingJobsClientType,\r\n} from './ModelingJobsClient.types';\r\nimport { DataResponse } from '@do/core';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport class ModelingJobsClient\r\n  extends BaseClient\r\n  implements ModelingJobsClientType\r\n{\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n\r\n  serviceJobToClientJob = (job: ModelGenerationJobOutput): ModelingJobs => ({\r\n    jobName: job.jobName,\r\n    startTime: job.createdTimestampUtc\r\n      ? new Date(job.createdTimestampUtc)\r\n      : undefined,\r\n    lastRun: job.jobRuns\r\n      ? new Date(job.jobRuns[job.jobRuns.length - 1].runStartTimeUtc)\r\n      : undefined,\r\n    status: job.jobRuns\r\n      ? job.jobRuns[job.jobRuns.length - 1].runStatus\r\n      : 'Unknown',\r\n  });\r\n\r\n  getJobs = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<ModelingJobs[]>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/modelGenerationJobs',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get({ queryParameters: {} });\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status || '500',\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n    const jobs: ModelGenerationJobPagedCollectionOutput =\r\n      response.body as ModelGenerationJobPagedCollectionOutput;\r\n    const results = jobs?.value.map(this.serviceJobToClientJob);\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n}\r\n","import { DataResponse } from '@do/core';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n/**\r\n * Model generation Job information displayed in the jobs view page.\r\n */\r\nexport type ModelingJobs = {\r\n  jobName: string;\r\n  startTime?: Date;\r\n  lastRun?: Date;\r\n  status: string;\r\n};\r\n\r\nexport interface ModelingJobsClientType {\r\n  getJobs(\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<ModelingJobs[]>>;\r\n}\r\n","import { ModelingJobs } from '../ModelingJobsClient.types';\r\n\r\nexport const mockModelingJobs: ModelingJobs[] = [\r\n  {\r\n    jobName: 'Modeling Job1',\r\n    startTime: new Date('2023-10-16T19:16:33Z'),\r\n    lastRun: new Date('2023-10-16T21:16:33Z'),\r\n    status: 'Completed',\r\n  },\r\n\r\n  {\r\n    jobName: 'Modeling Job2',\r\n    startTime: new Date('2023-12-16T19:16:33Z'),\r\n    lastRun: new Date('2023-12-16T21:16:33Z'),\r\n    status: 'Completed',\r\n  },\r\n];\r\n","export * from './ModelingJobsClient.types';\r\nexport * from './ModelingJobsClient.mock';\r\nexport * from './ModelingJobsClient';\r\n","import { TwinPageFilters } from '@do/prepare/components/ModelManager/TwinsPage/TwinsPage.types';\r\nimport {\r\n  PredictedModelTwinInformation,\r\n  PredictedModelTwinInformationClientType,\r\n} from './PredictedModelTwinInformationClient.types';\r\nimport { mockPredictedModelTwinInformation } from './__mocks__/MockPredictedModelTwinInformation';\r\nimport { DataResponse, WithContinuationToken } from '@do/core';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nexport class MockPredictedModelTwinInformationClient\r\n  implements PredictedModelTwinInformationClientType\r\n{\r\n  constructor(_workspaceId?: string, _artifactId?: string) {\r\n    // There is nothing to implement on the mock. Just need to pass the ids used by real client.\r\n  }\r\n\r\n  getTwins(\r\n    _logConfig: Partial<FeatureEvent>,\r\n    filters?: TwinPageFilters,\r\n    _continuationToken?: string,\r\n  ): Promise<\r\n    DataResponse<WithContinuationToken<PredictedModelTwinInformation[]>>\r\n  > {\r\n    if (!filters) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: {\r\n          data: mockPredictedModelTwinInformation,\r\n          continuationToken: undefined,\r\n        },\r\n      });\r\n    }\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        data: mockPredictedModelTwinInformation.filter((mockTwinInfo) =>\r\n          filters.twinName\r\n            ? mockTwinInfo.displayName?.includes(filters.twinName)\r\n            : true,\r\n        ),\r\n        continuationToken: undefined,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport {\r\n  API_VERSION,\r\n  BaseClient,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport {\r\n  PredictedModelTwinInformation,\r\n  PredictedModelTwinInformationClientType,\r\n} from './PredictedModelTwinInformationClient.types';\r\nimport { TwinPageFilters } from '@do/prepare/components/ModelManager/TwinsPage/TwinsPage.types';\r\nimport { DataResponse, WithContinuationToken } from '@do/core';\r\nimport {\r\n  ModelGenerationTwinInformationOutput,\r\n  ModelGenerationTwinInformationPagedCollectionOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport class PredictedModelTwinInformationClient\r\n  extends BaseClient\r\n  implements PredictedModelTwinInformationClientType\r\n{\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n\r\n  serviceTwinToClientTwin = (\r\n    twin: ModelGenerationTwinInformationOutput,\r\n  ): PredictedModelTwinInformation => ({\r\n    twinId: twin.twinId,\r\n    displayName: twin.displayName,\r\n    model: twin.approvedModel,\r\n  });\r\n\r\n  getTwins = async (\r\n    logConfig: Partial<FeatureEvent>,\r\n    filters?: TwinPageFilters,\r\n    continuationToken?: string,\r\n  ): Promise<\r\n    DataResponse<WithContinuationToken<PredictedModelTwinInformation[]>>\r\n  > => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/modelGenerationJobs/twins',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        queryParameters: {\r\n          ...(continuationToken ? { continuationToken } : {}),\r\n        },\r\n        body: {\r\n          twinNamePrefix: filters?.twinName || '',\r\n        },\r\n      });\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status || '500',\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n    const twins: ModelGenerationTwinInformationPagedCollectionOutput =\r\n      response.body as ModelGenerationTwinInformationPagedCollectionOutput;\r\n    const results = twins?.value.map(this.serviceTwinToClientTwin);\r\n    return {\r\n      state: 'success',\r\n      data: {\r\n        data: results,\r\n        continuationToken: response.body.continuationToken,\r\n      },\r\n    };\r\n  };\r\n}\r\n","import { TwinPageFilters } from '@do/prepare/components/ModelManager/TwinsPage/TwinsPage.types';\r\nimport { DataResponse, WithContinuationToken } from '@do/core';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\n/**\r\n * Twin information displayed in list  twins with Predicted Model view.\r\n */\r\nexport type PredictedModelTwinInformation = {\r\n  twinId: string;\r\n  displayName?: string;\r\n  model?: string;\r\n};\r\n\r\nexport interface PredictedModelTwinInformationClientType {\r\n  getTwins: (\r\n    logConfig: Partial<FeatureEvent>,\r\n    filters?: TwinPageFilters,\r\n    continuationToken?: string,\r\n  ) => Promise<\r\n    DataResponse<WithContinuationToken<PredictedModelTwinInformation[]>>\r\n  >;\r\n}\r\n","import { PredictedModelTwinInformation } from '../PredictedModelTwinInformationClient.types';\r\n\r\n/**\r\n * Twin information displayed in the twins view page.\r\n */\r\nexport const mockPredictedModelTwinInformation: PredictedModelTwinInformation[] =\r\n  [\r\n    {\r\n      twinId: 'Pump1',\r\n      displayName: 'Pump 1',\r\n      model: 'Pump',\r\n    },\r\n\r\n    {\r\n      twinId: 'Oven1',\r\n      displayName: 'Oven 1',\r\n      model: 'Oven',\r\n    },\r\n  ];\r\n","export * from './PredictedModelTwinInformationClient.types';\r\nexport * from './PredictedModelTwinInformationClient.mock';\r\nexport * from './PredictedModelTwinInformationClient';\r\n","import { generateMockTimeSeriesData } from '@do/explorer/components/TimeSeriesChart/__mocks__/TimeseriesMockUtils';\r\nimport { DataResponse } from '../../models';\r\nimport {\r\n  TimeSeries,\r\n  TimeSeriesClientType,\r\n  TimeSeriesControlsParameters,\r\n  TimeSeriesPointData,\r\n} from './TimeSeriesClient.types';\r\nimport { timeSeries } from './__mocks__/MockTimeSeries';\r\nimport { WithContinuationToken } from '../Clients.types';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport class MockTimeSeriesClient implements TimeSeriesClientType {\r\n  getTimeSeriesByTwinId(\r\n    twinId: string,\r\n    _logConfig: Partial<FeatureEvent>,\r\n    _continuationToken?: string,\r\n  ): Promise<DataResponse<WithContinuationToken<TimeSeries[]>>> {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        data: timeSeries.filter((ts) => ts.twinId === twinId),\r\n        continuationToken: undefined,\r\n      },\r\n    });\r\n  }\r\n\r\n  getTimeSeriesPointData(\r\n    _twinId: string,\r\n    _timeSeriesId: string,\r\n    _logConfig: Partial<FeatureEvent>,\r\n    options: TimeSeriesControlsParameters,\r\n  ): Promise<DataResponse<WithContinuationToken<TimeSeriesPointData[]>>> {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        data: generateMockTimeSeriesData(options),\r\n        continuationToken: undefined,\r\n      },\r\n    });\r\n  }\r\n\r\n  queryTimeSeries(_queryObj?: any): Promise<DataResponse<TimeSeries[]>> {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: timeSeries,\r\n    });\r\n  }\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport {\r\n  TimeSeriesDataPointQueryResourceOutput,\r\n  TimeSeriesDataPointQueryResourcePagedCollectionOutput,\r\n  TimeSeriesPointOutput,\r\n  TwinTimeSeriesDataPointOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport { DataResponse } from '../../models';\r\nimport {\r\n  API_VERSION,\r\n  BaseClient,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport {\r\n  TimeSeries,\r\n  TimeSeriesClientType,\r\n  TimeSeriesControlsParameters,\r\n  TimeSeriesPointData,\r\n} from './TimeSeriesClient.types';\r\nimport {\r\n  serviceDataPointToClientDataPoint,\r\n  serviceTimeSeriesToClientTimeSeries,\r\n} from './TimeSeriesClient.utils';\r\nimport { WithContinuationToken } from '../Clients.types';\r\n\r\nexport class TimeSeriesClient\r\n  extends BaseClient\r\n  implements TimeSeriesClientType\r\n{\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n  getTimeSeriesByTwinId = async (\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n    continuationToken?: string,\r\n  ): Promise<DataResponse<WithContinuationToken<TimeSeries[]>>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/twins/{twinId}/timeSeriesDataPoints',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n      )\r\n      .get(continuationToken ? { queryParameters: { continuationToken } } : {});\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n    const timeSeries = response.body.value.map(\r\n      (ts: TwinTimeSeriesDataPointOutput) =>\r\n        serviceTimeSeriesToClientTimeSeries(ts),\r\n    );\r\n    return {\r\n      state: 'success',\r\n      data: {\r\n        data: timeSeries,\r\n        continuationToken: response.body.continuationToken,\r\n      },\r\n    };\r\n  };\r\n\r\n  getTimeSeriesPointData = async (\r\n    twinId: string,\r\n    timeSeriesId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n    options: TimeSeriesControlsParameters,\r\n  ): Promise<DataResponse<WithContinuationToken<TimeSeriesPointData[]>>> => {\r\n    const client = await this.getClient(logConfig);\r\n    if (options.dateTimeEnd && options.dateTimeStart) {\r\n      const response = await client\r\n        ?.path(\r\n          '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/twins/{twinId}/timeSeriesDataPoints/{timeSeriesDataPointId}/timeSeries',\r\n          API_VERSION,\r\n          this.workspaceId,\r\n          this.artifactId,\r\n          twinId,\r\n          timeSeriesId,\r\n        )\r\n        .get({\r\n          queryParameters: {\r\n            ...options,\r\n            // Need explicit options here because spread doesn't take null check into account\r\n            dateTimeEnd: options.dateTimeEnd,\r\n            dateTimeStart: options.dateTimeStart,\r\n          },\r\n        });\r\n      if (this.isErrorResponse(response)) {\r\n        return {\r\n          state: 'error',\r\n          errorCode: response?.status,\r\n          errorMessage: response?.body?.message || 'Unknown error',\r\n        };\r\n      }\r\n      const timeSeries = response.body;\r\n      const result = timeSeries.value.map(\r\n        (dataPoint: TimeSeriesPointOutput) => {\r\n          return serviceDataPointToClientDataPoint(dataPoint);\r\n        },\r\n      );\r\n      return {\r\n        state: 'success',\r\n        data: {\r\n          data: result,\r\n          continuationToken: timeSeries.continuationToken,\r\n        },\r\n      };\r\n    } else {\r\n      return {\r\n        state: 'error',\r\n        errorCode: '400',\r\n        errorMessage: 'Start and end time need to be present.',\r\n      };\r\n    }\r\n  };\r\n\r\n  queryTimeSeries = async (\r\n    queryObj?: any,\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TimeSeries[]>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const body = { ...queryObj };\r\n    if (body.query && !body.query.pageSize) {\r\n      // Design decision to display 100 results at a time in list view\r\n      body.query.pageSize = 100;\r\n    }\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/query/timeSeriesDataPoints',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        body: queryObj,\r\n      });\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status ?? 500,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    const timeSeries: TimeSeriesDataPointQueryResourcePagedCollectionOutput =\r\n      response.body as TimeSeriesDataPointQueryResourcePagedCollectionOutput;\r\n    const results = timeSeries.value.map(\r\n      (ts: TimeSeriesDataPointQueryResourceOutput) => {\r\n        return serviceTimeSeriesToClientTimeSeries(ts);\r\n      },\r\n    );\r\n\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n}\r\n","import { FeatureEvent } from '@trident/certified-events';\r\nimport { DataResponse } from '../../models';\r\nimport { WithContinuationToken } from '../Clients.types';\r\n\r\nexport enum TimeSeriesSourceType {\r\n  External = 'External',\r\n  Calculated = 'Calculated',\r\n}\r\n\r\nexport enum TimeSeriesValueType {\r\n  Int = 'Int',\r\n  Double = 'Double',\r\n  String = 'String',\r\n  Bool = 'Bool',\r\n  DateTime = 'DateTime',\r\n  TimeSpan = 'TimeSpan',\r\n  Complex = 'Complex',\r\n}\r\n\r\nexport enum TimeSeriesStateType {\r\n  Active = 'Active',\r\n  Deleted = 'Deleted',\r\n}\r\n/**\r\n * Time series information displayed in the time series list view.\r\n */\r\nexport type TimeSeries = {\r\n  timeSeriesDataPointId: string;\r\n  source: TimeSeriesSourceType;\r\n  valueType: TimeSeriesValueType;\r\n  timeSeriesName?: string;\r\n  uom?: string;\r\n  displayName?: string;\r\n  description?: string;\r\n  functionId?: string;\r\n  twinId?: string;\r\n  state?: TimeSeriesStateType;\r\n  createdTime?: Date;\r\n  updatedTime?: Date;\r\n};\r\n\r\nexport type TimeSeriesPointData = {\r\n  timestamp: number;\r\n  value: number;\r\n};\r\n\r\nexport type TimeSeriesControlsParameters = {\r\n  /** The timestamp at which the returned time series should start. Default: the first timestamp in the time series. */\r\n  dateTimeStart: Date | string | undefined;\r\n  /** The timestamp at which the returned time series should end. Default: the last timestamp in the time series. */\r\n  dateTimeEnd: Date | string | undefined;\r\n  /** The method to use for aggregating data within a bin. Default: none. */\r\n  binWidth?: number;\r\n  /** The number of seconds to use as the bin width for aggregating the time series. Default: no aggregation. */\r\n  aggType?: string;\r\n  /** The continuation token for the next page of results. */\r\n  continuationToken?: string;\r\n};\r\n\r\nexport interface TimeSeriesClientType {\r\n  getTimeSeriesByTwinId(\r\n    id: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n    continuationToken?: string,\r\n  ): Promise<DataResponse<WithContinuationToken<TimeSeries[]>>>;\r\n  getTimeSeriesPointData(\r\n    twinId: string,\r\n    timeSeriesId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n    options: TimeSeriesControlsParameters,\r\n  ): Promise<DataResponse<WithContinuationToken<TimeSeriesPointData[]>>>;\r\n  queryTimeSeries(\r\n    queryObj?: any,\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TimeSeries[]>>;\r\n}\r\n","import {\r\n  TimeSeriesDataPointQueryResourceOutput,\r\n  TimeSeriesPointOutput,\r\n  TwinTimeSeriesDataPointOutput,\r\n  TimeSeriesDataPointBaseOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport {\r\n  TimeSeries,\r\n  TimeSeriesPointData,\r\n  TimeSeriesSourceType,\r\n  TimeSeriesStateType,\r\n  TimeSeriesValueType,\r\n} from './TimeSeriesClient.types';\r\n\r\n// Temp solution to convert timestamp from .NET to JS\r\n// Plan is to do conversion server side\r\n// 1970 * 2 - 1 = 3939 -> .NET Datetieme starts at 1/1/0001 -> JS Date starts at 1/1/1970\r\n// Find equivalent to 1970 years to substract from the timestamp\r\nconst JS_DATE_OFFSET = new Date(3939, 0, 1).getTime();\r\n\r\nexport const serviceDataPointToClientDataPoint = (\r\n  point: TimeSeriesPointOutput,\r\n): TimeSeriesPointData => {\r\n  return {\r\n    timestamp: point.timestamp / 10000 - JS_DATE_OFFSET,\r\n    value: point.value,\r\n  };\r\n};\r\n\r\nexport const valueTypeStringToEnum = (\r\n  valueType: string,\r\n): TimeSeriesValueType => {\r\n  switch (valueType) {\r\n    case 'Int':\r\n      return TimeSeriesValueType.Int;\r\n    case 'Double':\r\n      return TimeSeriesValueType.Double;\r\n    case 'String':\r\n      return TimeSeriesValueType.String;\r\n    case 'Bool':\r\n      return TimeSeriesValueType.Bool;\r\n    case 'DateTime':\r\n      return TimeSeriesValueType.DateTime;\r\n    case 'TimeSpan':\r\n      return TimeSeriesValueType.TimeSpan;\r\n    case 'Complex':\r\n      return TimeSeriesValueType.Complex;\r\n    default:\r\n      return TimeSeriesValueType.Double;\r\n  }\r\n};\r\n\r\nexport const serviceTimeSeriesToClientTimeSeries = (\r\n  timeseries:\r\n    | TwinTimeSeriesDataPointOutput\r\n    | TimeSeriesDataPointQueryResourceOutput\r\n    | TimeSeriesDataPointBaseOutput,\r\n): TimeSeries => {\r\n  return {\r\n    timeSeriesName: timeseries.displayName,\r\n    timeSeriesDataPointId: timeseries.timeSeriesDataPointId,\r\n    source:\r\n      timeseries.dataPointSource === 'External'\r\n        ? TimeSeriesSourceType.External\r\n        : TimeSeriesSourceType.Calculated,\r\n    valueType: valueTypeStringToEnum(timeseries.valueType),\r\n    uom: timeseries.valueUOM,\r\n    displayName: timeseries.displayName,\r\n    description: timeseries.description,\r\n    twinId: timeseries.twinId,\r\n    createdTime: timeseries.createdTimestampUtc\r\n      ? new Date(timeseries.createdTimestampUtc)\r\n      : undefined,\r\n    updatedTime: timeseries.updatedTimestampUtc\r\n      ? new Date(timeseries.updatedTimestampUtc)\r\n      : undefined,\r\n    state:\r\n      timeseries.state === 'Active'\r\n        ? TimeSeriesStateType.Active\r\n        : TimeSeriesStateType.Deleted,\r\n  };\r\n};\r\n","import {\r\n  TimeSeries,\r\n  TimeSeriesSourceType,\r\n  TimeSeriesValueType,\r\n} from '../TimeSeriesClient.types';\r\n\r\nexport const timeSeries: TimeSeries[] = [\r\n  {\r\n    timeSeriesName: 'Temperature',\r\n    timeSeriesDataPointId: 'TS01',\r\n    description: 'The temperature of the oven',\r\n    uom: 'Celsius',\r\n    source: TimeSeriesSourceType.External,\r\n    valueType: TimeSeriesValueType.Double,\r\n    displayName: 'Sensor Temperature',\r\n    twinId: 'Oven-0',\r\n  },\r\n  {\r\n    timeSeriesDataPointId: 'TS02',\r\n    source: TimeSeriesSourceType.External,\r\n    valueType: TimeSeriesValueType.Double,\r\n  },\r\n  {\r\n    timeSeriesName: 'Pressure',\r\n    timeSeriesDataPointId: 'TS03',\r\n    description: 'The pressure of the oven',\r\n    uom: 'Pascal',\r\n    source: TimeSeriesSourceType.External,\r\n    valueType: TimeSeriesValueType.Double,\r\n    displayName: 'Sensor Pressure',\r\n    twinId: 'Oven-0',\r\n  },\r\n  {\r\n    timeSeriesName: 'Temperature',\r\n    timeSeriesDataPointId: 'TS04',\r\n    twinId: 'Oven-0',\r\n    description: 'The temperature of the oven',\r\n    uom: 'Celsius',\r\n    source: TimeSeriesSourceType.External,\r\n    valueType: TimeSeriesValueType.Double,\r\n    displayName: 'Sensor Temperature',\r\n  },\r\n  {\r\n    timeSeriesName: 'Pressure',\r\n    timeSeriesDataPointId: 'TS05',\r\n    twinId: 'Oven-0',\r\n    description: 'The pressure of the oven',\r\n    uom: 'Pascal',\r\n    source: TimeSeriesSourceType.External,\r\n    valueType: TimeSeriesValueType.Double,\r\n    displayName: 'Sensor Pressure',\r\n  },\r\n  {\r\n    timeSeriesName: 'Temperature',\r\n    timeSeriesDataPointId: 'TS06',\r\n    twinId: 'Oven-0.1.0',\r\n    description: 'The temperature of the oven',\r\n    uom: 'Celsius',\r\n    source: TimeSeriesSourceType.Calculated,\r\n    valueType: TimeSeriesValueType.Double,\r\n    displayName: 'Sensor Temperature',\r\n  },\r\n  {\r\n    timeSeriesName: 'Pressure',\r\n    timeSeriesDataPointId: 'TS07',\r\n    twinId: '1',\r\n    description: 'The pressure of the oven',\r\n    uom: 'Pascal',\r\n    source: TimeSeriesSourceType.External,\r\n    valueType: TimeSeriesValueType.Double,\r\n    displayName: 'Sensor Pressure',\r\n  },\r\n  {\r\n    timeSeriesName: 'Temperature',\r\n    timeSeriesDataPointId: 'TS08',\r\n    twinId: '1',\r\n    description: 'The temperature of the oven',\r\n    uom: 'Celsius',\r\n    source: TimeSeriesSourceType.Calculated,\r\n    valueType: TimeSeriesValueType.Double,\r\n  },\r\n];\r\n","export * from './TimeSeriesClient.mock';\r\nexport * from './TimeSeriesClient.types';\r\nexport * from './TimeSeriesClient';\r\n","export * from './mock/ExtensionClientMock';\r\n","import {\r\n  AccessToken,\r\n  ArtifactActionAPI,\r\n  ArtifactAPI,\r\n  ArtifactSharingDialogConfig,\r\n  ArtifactStatusAPI,\r\n  ArtifactUpdateConfig,\r\n  ArtifactUpdateHandler,\r\n  AuthAPI,\r\n  CESAPI,\r\n  CheckArtifactSharingEnabledInput,\r\n  CheckArtifactSharingEnabledResult,\r\n  CheckPermissionsOfArtifactInput,\r\n  CheckPermissionsOfArtifactResult,\r\n  CheckPermissionsOfWorkspaceInput,\r\n  CheckPermissionsOfWorkspaceResult,\r\n  CloseUIConfig,\r\n  CloseUIResult,\r\n  CreateShortcutParams,\r\n  DatahubSelectorDialogConfig,\r\n  DatahubSelectorDialogResult,\r\n  ExtensionAction,\r\n  ExtensionActionResult,\r\n  ExtensionClientAPI,\r\n  ExtensionLifecycleEvent,\r\n  ExtensionNavigation,\r\n  ExtensionRoute,\r\n  ExtensionSettings,\r\n  FabricSurveyFeedbackResponse,\r\n  FailureResponse,\r\n  GetArtifactTypeShareablePermissionsInput,\r\n  GetArtifactTypeShareablePermissionsResult,\r\n  GetInformationProtectionLabelsResult,\r\n  GetInformationProtectionUserPolicySettingsResult,\r\n  GetLabelByArtifactObjectIdConfig,\r\n  GetLabelByArtifactObjectIdResult,\r\n  GetPermissionsOfArtifactInput,\r\n  GetPermissionsOfArtifactResult,\r\n  GetPermissionsOfWorkspaceInput,\r\n  GetPermissionsOfWorkspaceResult,\r\n  HandleInvalidRouteConfig,\r\n  HandleRequestFailureResult,\r\n  HelpPaneAPI,\r\n  HelpPaneDataProvider,\r\n  HideNotificationConfig,\r\n  InformationProtectionAPI,\r\n  InteractionAPI,\r\n  MultitaskingAPI,\r\n  MWCToken,\r\n  NavigationResult,\r\n  NotificationAPI,\r\n  OnCloseArtifactSettingsContext,\r\n  OpenArtifactRecentRunsConfig,\r\n  OpenArtifactSettingsConfig,\r\n  OpenNotificationConfig,\r\n  OpenNotificationResult,\r\n  OpenPageConfig,\r\n  OpenPanelConfig,\r\n  OpenUIResult,\r\n  PostDOMEventConfig,\r\n  RatingFeedbackConfig,\r\n  ShortcutAPI,\r\n  ShortcutContext,\r\n  ShortcutType,\r\n  ShouldShowInformationProtectionCreateComponentResult,\r\n  TelemetryAPI,\r\n  UniversalSecurityAPI,\r\n  UniversalSecurityConfig,\r\n  UniversalSecurityResult,\r\n  Unsubscribable,\r\n  UpdateActivityStatusInput,\r\n  UpdateSelectedArtifactStateConfig,\r\n  UpdateTabConfig,\r\n  UserAPI,\r\n  UserProfile,\r\n  WorkloadClaimsContext,\r\n  WorkloadClaimsContextV2,\r\n} from '@trident/extension-client';\r\nimport { ThemeConfiguration } from '@trident/theme';\r\n// import { defaultTheme } from \"@trident/ux-react\";\r\nimport { v4 as createGuid } from 'uuid';\r\nimport { FeatureSwitchName } from '../../../models/FeatureSwitches';\r\nimport { StandAloneFrames } from '../../../constants/routing';\r\nimport {\r\n  ActionAPI,\r\n  AfterNavigateAwayData,\r\n  ArtifactRecentRunsAPI,\r\n  BeforeNavigateAwayData,\r\n  BeforeNavigateAwayResult,\r\n  DialogAPI,\r\n  ErrorHandlingAPI,\r\n  NavigationAPI,\r\n  NavigationHostRoute,\r\n  PageAPI,\r\n  PanelAPI,\r\n  PermissionAPI,\r\n  SettingsAPI,\r\n  StateAPI,\r\n  SubfolderAPI,\r\n  ThemeAPI,\r\n} from '@trident/extension-client-common';\r\n\r\n/* eslint-disable */\r\n\r\nconst MESSAGE_CLOSE_PANEL = 'CLOSE_PANEL';\r\nconst MESSAGE_CLOSE_DIALOG = 'CLOSE_DIALOG';\r\n\r\n/**\r\n * Mock Extension client API implementation. Used for testing in stand-alone mode.\r\n */\r\nexport class ExtensionClientMock implements ExtensionClientAPI {\r\n  shortcutCallback: ((shortcutResult: ShortcutContext) => void) | undefined =\r\n    undefined;\r\n\r\n  onActionCallback:\r\n    | ((action: ExtensionAction<unknown>) => Promise<unknown>)\r\n    | undefined = undefined;\r\n\r\n  constructor() {\r\n    window.addEventListener('message', (event) => {\r\n      this.onMessage(event.data as string);\r\n    });\r\n  }\r\n  ces: CESAPI = {\r\n    sendRatingFeedback: (config: RatingFeedbackConfig) => {\r\n      alert(JSON.stringify(config));\r\n      return Promise.resolve({\r\n        feedbackId: 'mock',\r\n      } as FabricSurveyFeedbackResponse);\r\n    },\r\n  } as any;\r\n  subfolder: SubfolderAPI = {\r\n    openSubfolderPickerDialog: (config: unknown) => {\r\n      alert(JSON.stringify(config));\r\n      return Promise.resolve({\r\n        selectedItems: ['mock'],\r\n      } as any);\r\n    },\r\n  } as any;\r\n  gitIntegration: any;\r\n  workspaceSettings: any;\r\n  event: any;\r\n  artifact: ArtifactAPI = {} as any;\r\n  artifactAction: ArtifactActionAPI = {} as any;\r\n  artifactSettings = {} as any;\r\n  artifactStatus: ArtifactStatusAPI = {} as any;\r\n  auth: AuthAPI = {} as any;\r\n  datahub = {} as any;\r\n  helpPane: HelpPaneAPI = {\r\n    registerDataProvider: this.registerHelpPaneDataProvider,\r\n  } as any;\r\n  informationProtection: InformationProtectionAPI = {} as any;\r\n  interaction: InteractionAPI = {} as any;\r\n  multitasking: MultitaskingAPI = {\r\n    updateTab: this.updateTab,\r\n  } as any;\r\n  notification: NotificationAPI = {\r\n    open: this.openNotification,\r\n  } as any;\r\n  shortcut: ShortcutAPI = {} as any;\r\n  telemetry: TelemetryAPI = {\r\n    logEvent: function () {},\r\n    startActivity: function () {},\r\n    updateActivityStatus: function () {},\r\n  } as any;\r\n  universalSecurity: UniversalSecurityAPI = {} as any;\r\n  user: UserAPI = {} as any;\r\n  action: ActionAPI = {} as any;\r\n  artifactRecentRuns: ArtifactRecentRunsAPI = {} as any;\r\n  dialog: DialogAPI = {\r\n    open: this.openDialog,\r\n    close: this.closeDialog,\r\n  } as any;\r\n  errorHandling: ErrorHandlingAPI = {} as any;\r\n  navigation: NavigationAPI = {\r\n    navigate: this.navigate,\r\n    navigateAsync: this.navigateAsync,\r\n  } as any;\r\n  page: PageAPI = {\r\n    open: this.openPage,\r\n  } as any;\r\n  panel: PanelAPI = {\r\n    open: this.openPanel,\r\n    close: this.closePanel,\r\n  } as any;\r\n  permission: PermissionAPI = {} as any;\r\n  settings: SettingsAPI = {} as any;\r\n  state: StateAPI = {} as any;\r\n  theme: ThemeAPI = {} as any;\r\n  openUniversalSecurity(\r\n    universalSecurityConfig: UniversalSecurityConfig,\r\n  ): Promise<UniversalSecurityResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  updateActivityStatus(config: UpdateActivityStatusInput): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  postDOMEvent(config: PostDOMEventConfig): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  onLeaveEnd(\r\n    callback: (leaveEndData: AfterNavigateAwayData) => Promise<unknown>,\r\n  ): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  openArtifactRecentRuns(\r\n    config: OpenArtifactRecentRunsConfig,\r\n  ): Promise<OpenUIResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  openArtifactSharingDialog(config: ArtifactSharingDialogConfig): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  checkPermissionsOfArtifact(\r\n    input: CheckPermissionsOfArtifactInput,\r\n  ): Promise<CheckPermissionsOfArtifactResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  checkPermissionsOfWorkspace(\r\n    input: CheckPermissionsOfWorkspaceInput,\r\n  ): Promise<CheckPermissionsOfWorkspaceResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getPermissionsOfArtifact(\r\n    input: GetPermissionsOfArtifactInput,\r\n  ): Promise<GetPermissionsOfArtifactResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getPermissionsOfWorkspace(\r\n    input: GetPermissionsOfWorkspaceInput,\r\n  ): Promise<GetPermissionsOfWorkspaceResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  checkArtifactSharingEnabled(\r\n    input: CheckArtifactSharingEnabledInput,\r\n  ): Promise<CheckArtifactSharingEnabledResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getArtifactTypeShareablePermissions(\r\n    input: GetArtifactTypeShareablePermissionsInput,\r\n  ): Promise<GetArtifactTypeShareablePermissionsResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getTheme(): Promise<ThemeConfiguration> {\r\n    throw new Error('Method not implemented');\r\n  }\r\n  getLabelByArtifactObjectId(\r\n    config: GetLabelByArtifactObjectIdConfig,\r\n  ): Promise<GetLabelByArtifactObjectIdResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  onThemeChange(callback: (theme: ThemeConfiguration) => void): void {\r\n    return;\r\n  }\r\n  navigateAsync(route: NavigationHostRoute): Promise<NavigationResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  updateTab(config: UpdateTabConfig): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  onArtifactUpdate(\r\n    config: ArtifactUpdateConfig,\r\n    handler: ArtifactUpdateHandler,\r\n  ): Promise<Unsubscribable> {\r\n    return Promise.resolve({} as Unsubscribable);\r\n  }\r\n  onCloseArtifactSettings(\r\n    handler: (onArtifactClosed: OnCloseArtifactSettingsContext) => void,\r\n  ): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  postArtifactOpenEvent() {\r\n    throw Error('Method not implemented');\r\n  }\r\n\r\n  getInformationProtectionLabels(): Promise<GetInformationProtectionLabelsResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getInformationProtectionUserPolicySettings(): Promise<GetInformationProtectionUserPolicySettingsResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  registerArtifactActionProvider(handler: any): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  registerArtifactJobActionProvider(handler: any): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  logEvent(_event: any): void {}\r\n  openError(config: any): Promise<OpenUIResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  get sharedState(): Record<string, any> {\r\n    return {};\r\n  }\r\n  onAction(\r\n    callback: (action: ExtensionAction<unknown>) => Promise<unknown>,\r\n  ): void {\r\n    this.onActionCallback = callback;\r\n  }\r\n  navigate(route: NavigationHostRoute): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  onNavigate(_callback: (navigation: ExtensionNavigation) => void): void {}\r\n  getAccessToken(scopes?: string[]): Promise<AccessToken> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getMWCToken<T extends WorkloadClaimsContext>(\r\n    claimsContext: T,\r\n  ): Promise<MWCToken> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getMWCTokenV2<T extends WorkloadClaimsContextV2>(\r\n    claimsContext: T,\r\n  ): Promise<MWCToken> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  getSettings(): Promise<ExtensionSettings> {\r\n    const imdxFeatures: Record<FeatureSwitchName, boolean> = {\r\n      useMockData: true,\r\n    };\r\n    return Promise.resolve({\r\n      currentLanguageLocale: 'en-US',\r\n      featureSwitches: imdxFeatures,\r\n      sessionId: 'fake-id-for-standalone-test',\r\n    } as ExtensionSettings);\r\n  }\r\n  getUserProfile(): Promise<UserProfile> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  onSettingsChange(callback: (settings: ExtensionSettings) => void): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  postLifecycleEvent(event: ExtensionLifecycleEvent): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  async openNotification(\r\n    config: OpenNotificationConfig,\r\n  ): Promise<OpenNotificationResult> {\r\n    alert(JSON.stringify(config));\r\n    return { notificationId: createGuid() };\r\n  }\r\n  hideNotification(config: HideNotificationConfig): void {}\r\n\r\n  openPage(config: OpenPageConfig): Promise<OpenUIResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  openDialog(config: any): Promise<any> {\r\n    this.showIframe(\r\n      'dialog',\r\n      config.route,\r\n      config.options?.width,\r\n      config.options?.height,\r\n    );\r\n    return Promise.resolve({});\r\n  }\r\n\r\n  async openCreateShortcut(\r\n    createShortcutConfig: CreateShortcutParams,\r\n  ): Promise<OpenUIResult> {\r\n    // await delay(2000);\r\n    const sourceFolderPath = createShortcutConfig.shortcutSubFolderPath;\r\n    const splits = sourceFolderPath.split('/');\r\n    const asyncId = createGuid();\r\n\r\n    if (this.shortcutCallback) {\r\n      console.log('Invoking shortcut callback');\r\n\r\n      this.shortcutCallback({\r\n        isOperationComplete: true,\r\n        isOperationCancelledByUser: false,\r\n        result: {\r\n          shortcutDestinationPath: 'dummy',\r\n          shortcutName: `dummy_shortcut_${splits[splits.length - 1]}`,\r\n          shortcutSubFolderPath: 'dummy',\r\n          shortcutType: ShortcutType.ADLS,\r\n        },\r\n        asyncId: asyncId,\r\n      });\r\n    }\r\n    return { value: asyncId };\r\n  }\r\n\r\n  onShortcutWizardClosed(\r\n    callback: (shortcutResult: ShortcutContext) => void,\r\n  ): void {\r\n    this.shortcutCallback = callback;\r\n  }\r\n  async closeDialog(config?: CloseUIConfig): Promise<CloseUIResult> {\r\n    window.parent.postMessage(MESSAGE_CLOSE_PANEL, '*');\r\n    this.hideIframe('dialog');\r\n    return Promise.resolve({ success: true });\r\n  }\r\n  openPanel(config: OpenPanelConfig): Promise<OpenUIResult> {\r\n    this.showIframe('panel', config.route);\r\n    return Promise.resolve({});\r\n  }\r\n  onLeave(\r\n    callback: (\r\n      leaveData: BeforeNavigateAwayData,\r\n    ) => Promise<BeforeNavigateAwayResult>,\r\n  ): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  closePanel(config?: CloseUIConfig): Promise<CloseUIResult> {\r\n    window.parent.postMessage(MESSAGE_CLOSE_PANEL, '*');\r\n    this.hideIframe('panel');\r\n    return Promise.resolve({ success: true });\r\n  }\r\n  setRoute(route: ExtensionRoute): void {\r\n    window.location.href = `${route.path}`;\r\n  }\r\n  setExtensionIframeDimensions(config: {\r\n    iframeHeight: string;\r\n    artifactId: string;\r\n  }): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  async executeAction<TData, TResult>(\r\n    action: ExtensionAction<TData>,\r\n  ): Promise<ExtensionActionResult<TResult>> {\r\n    if (!this.onActionCallback) throw 'not registered';\r\n\r\n    return { result: (await this.onActionCallback(action)) as TResult };\r\n  }\r\n\r\n  registerHelpPaneDataProvider(handler: HelpPaneDataProvider): void {}\r\n\r\n  openArtifactSettings(\r\n    config: OpenArtifactSettingsConfig,\r\n  ): Promise<OpenUIResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  handleInvalidRoute(config?: HandleInvalidRouteConfig): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  updateSelectedArtifactState(config: UpdateSelectedArtifactStateConfig): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  handleRequestFailure(\r\n    response: FailureResponse,\r\n  ): Promise<HandleRequestFailureResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  openDatahubDialog(\r\n    config: DatahubSelectorDialogConfig,\r\n  ): Promise<DatahubSelectorDialogResult> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  async shouldShowInformationProtectionCreateComponent(): Promise<ShouldShowInformationProtectionCreateComponentResult> {\r\n    return { show: true };\r\n  }\r\n\r\n  private showIframe(\r\n    type: 'panel' | 'dialog',\r\n    route: ExtensionRoute,\r\n    width?: number | string,\r\n    height?: number | string,\r\n  ) {\r\n    const id =\r\n      type === 'panel' ? StandAloneFrames.panelId : StandAloneFrames.dialogId;\r\n    const frame = document.getElementById(id) as HTMLIFrameElement;\r\n\r\n    frame.style.display = 'block';\r\n    let queryParams = '';\r\n    if (route.queryParams) {\r\n      for (const key in route.queryParams) {\r\n        queryParams += `${key}=${route.queryParams[key]}&`;\r\n      }\r\n    }\r\n    frame.src = `${route.path}?${queryParams}`;\r\n    if (width) {\r\n      frame.width = `${width}px`;\r\n    }\r\n    if (height) {\r\n      frame.height = `${height}px`;\r\n    }\r\n  }\r\n\r\n  private hideIframe(type: 'panel' | 'dialog') {\r\n    const id =\r\n      type === 'panel' ? StandAloneFrames.panelId : StandAloneFrames.dialogId;\r\n    const frame = document.getElementById(id) as HTMLIFrameElement;\r\n    if (!frame) return;\r\n    frame.style.display = 'none';\r\n  }\r\n\r\n  private onMessage(message: string) {\r\n    switch (message) {\r\n      case MESSAGE_CLOSE_DIALOG:\r\n        console.log(\r\n          `Received message ${message} by frame ${window.location.href}`,\r\n        );\r\n        this.hideIframe('dialog');\r\n        break;\r\n      case MESSAGE_CLOSE_PANEL:\r\n        console.log(\r\n          `Received message ${message} by frame ${window.location.href}`,\r\n        );\r\n        this.hideIframe('panel');\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n}\r\n","import { delay } from '@azure/core-http';\r\nimport { DataResponse } from '../../models';\r\nimport {\r\n  TwinClientType,\r\n  Twin,\r\n  TimeSeriesDataPointSuggestion,\r\n} from './TwinClient.types';\r\nimport {\r\n  attributeSuggestions,\r\n  timeSeriesDataPointSuggestions,\r\n  twins,\r\n  twinsWithAttributesAndTimeSeriesDataPoints,\r\n} from './__mocks__/MockTwins';\r\nimport { AttributeSuggestionQueryResourceOutput } from '@microsoft/digital-operations.sdk';\r\n\r\nexport class MockTwinClient implements TwinClientType {\r\n  constructor(_workspaceId?: string, _artifactId?: string) {\r\n    // There is nothing to implement on the mock. Just need to pass the ids used by real client.\r\n  }\r\n\r\n  getTwins(searchString?: string): Promise<DataResponse<Twin[]>> {\r\n    if (!searchString) {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: twins,\r\n      });\r\n    }\r\n\r\n    const filteredTwins = twins.filter(\r\n      (twin) =>\r\n        twin.twinId?.toLowerCase().includes(searchString.toLowerCase()) ||\r\n        twin.displayName?.toLowerCase().includes(searchString.toLowerCase()) ||\r\n        twin.description?.toLowerCase().includes(searchString.toLowerCase()),\r\n    );\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: filteredTwins,\r\n    });\r\n  }\r\n\r\n  getTwinById(id: string): Promise<DataResponse<Twin | undefined>> {\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: twins.find((twin) => twin.twinId === id),\r\n    });\r\n  }\r\n\r\n  queryTwins(_queryObj?: any): Promise<DataResponse<Twin[]>> {\r\n    // TODO: Think about how to implement the mock for this\r\n    return delay(500).then(() => {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: twins,\r\n      });\r\n    });\r\n  }\r\n\r\n  queryTwinsWithAttributesAndTimeSeriesDataPoints(\r\n    _queryObj?: any,\r\n  ): Promise<DataResponse<Twin[]>> {\r\n    return delay(500).then(() => {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: twinsWithAttributesAndTimeSeriesDataPoints,\r\n      });\r\n    });\r\n  }\r\n\r\n  queryAttributeSuggestions(): Promise<\r\n    DataResponse<AttributeSuggestionQueryResourceOutput[]>\r\n  > {\r\n    return delay(500).then(() => {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: attributeSuggestions,\r\n      });\r\n    });\r\n  }\r\n\r\n  queryTimeSeriesDataPointSuggestions(): Promise<\r\n    DataResponse<TimeSeriesDataPointSuggestion[]>\r\n  > {\r\n    return delay(500).then(() => {\r\n      return Promise.resolve({\r\n        state: 'success',\r\n        data: timeSeriesDataPointSuggestions,\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport {\r\n  BaseClient,\r\n  API_VERSION,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport {\r\n  AttributeSuggestionQueryResourceOutput,\r\n  AttributeSuggestionQueryResourcePagedCollectionOutput,\r\n  TimeSeriesDataPointSuggestionQueryResourceOutput,\r\n  TimeSeriesDataPointSuggestionQueryResourcePagedCollectionOutput,\r\n  TwinQueryResourceOutput,\r\n  TwinQueryResourcePagedCollectionOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport {\r\n  TwinClientType,\r\n  Twin,\r\n  AttributeSuggestion,\r\n  TimeSeriesDataPointSuggestion,\r\n} from './TwinClient.types';\r\nimport { DataResponse } from '../../models';\r\nimport { serviceTimeSeriesToClientTimeSeries } from '../TimeSeriesClient/TimeSeriesClient.utils';\r\n\r\nexport class TwinClient extends BaseClient implements TwinClientType {\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n\r\n  serviceTwinToClientTwin = (twin: TwinQueryResourceOutput): Twin => ({\r\n    twinId: twin.twinId,\r\n    description: twin.description ?? '',\r\n    displayName: twin.displayName ?? '',\r\n    createdTime: twin.createdTimestampUtc\r\n      ? new Date(twin.createdTimestampUtc)\r\n      : undefined,\r\n    modelId: twin.modelId,\r\n    updatedTime: twin.updatedTimestampUtc\r\n      ? new Date(twin.updatedTimestampUtc)\r\n      : undefined,\r\n    state: twin.state,\r\n    attributes: twin.attributes?.map((attr) => ({\r\n      createdTimestampUtc: attr.createdTimestampUtc,\r\n      updatedTimestampUtc: attr.updatedTimestampUtc,\r\n      name: attr.name,\r\n      displayName: attr.displayName,\r\n      valueType: attr.valueType,\r\n      twinId: attr.twinId,\r\n      value: attr.value,\r\n    })),\r\n    timeseriesdatapoints:\r\n      twin.timeSeriesDataPoints?.map(serviceTimeSeriesToClientTimeSeries) ??\r\n      undefined,\r\n  });\r\n\r\n  serviceAttributeSuggestionToClientAttributeSuggestion = (\r\n    attributeSuggestion: AttributeSuggestionQueryResourceOutput,\r\n  ): AttributeSuggestion => ({\r\n    identifier: attributeSuggestion.identifier,\r\n    valueType: attributeSuggestion.valueType,\r\n  });\r\n\r\n  serviceTimeSeriesDataPointSuggestionToClientAttributeSuggestion = (\r\n    timeSeriesDataPointSuggestion: TimeSeriesDataPointSuggestionQueryResourceOutput,\r\n  ): TimeSeriesDataPointSuggestion => ({\r\n    identifier: timeSeriesDataPointSuggestion.identifier,\r\n    valueType: timeSeriesDataPointSuggestion.valueType,\r\n  });\r\n\r\n  getTwins = async (_searchString: string): Promise<DataResponse<Twin[]>> => {\r\n    // TODO: implement this\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: [],\r\n    });\r\n  };\r\n\r\n  getTwinById = async (\r\n    _id: string,\r\n  ): Promise<DataResponse<Twin | undefined>> => {\r\n    // TODO: implement this\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: undefined,\r\n    });\r\n  };\r\n\r\n  queryTwins = async (\r\n    queryObj?: any,\r\n    extend?: string[],\r\n    logConfig?: Partial<FeatureEvent>,\r\n    continuationToken?: string,\r\n  ): Promise<DataResponse<Twin[]>> => {\r\n    const body = { ...queryObj };\r\n    if (body.query && !body.query.pageSize) {\r\n      // Design decision to display 100 results at a time in list view\r\n      body.query.pageSize = 100;\r\n    }\r\n\r\n    const client = await this.getClient(logConfig);\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/query/twins',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        queryParameters: {\r\n          extend,\r\n          continuationToken,\r\n        },\r\n        body,\r\n      });\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status ?? 500,\r\n        errorMessage: response?.body?.message || 'Unknown error',\r\n      };\r\n    }\r\n\r\n    const twins: TwinQueryResourcePagedCollectionOutput =\r\n      response.body as TwinQueryResourcePagedCollectionOutput;\r\n    const results = twins.value.map(this.serviceTwinToClientTwin);\r\n\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n\r\n  queryTwinsWithAttributesAndTimeSeriesDataPoints = async (\r\n    queryObj?: any,\r\n  ): Promise<DataResponse<Twin[]>> => {\r\n    const client = await this.getClient();\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/query/twins',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .post({\r\n        queryParameters: {\r\n          extend: ['attributes', 'timeseriesdatapoints'],\r\n        },\r\n        body: queryObj,\r\n      });\r\n\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status ?? 500,\r\n        errorMessage: response?.body?.message ?? 'Unknown error',\r\n      };\r\n    }\r\n    const twins: TwinQueryResourcePagedCollectionOutput =\r\n      response.body as TwinQueryResourcePagedCollectionOutput;\r\n    const results = twins.value.map(this.serviceTwinToClientTwin);\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n\r\n  queryAttributeSuggestions = async (): Promise<\r\n    DataResponse<AttributeSuggestion[]>\r\n  > => {\r\n    const client = await this.getClient();\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/query/attributeSuggestion',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get();\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status ?? 500,\r\n        errorMessage: response?.body?.message ?? 'Unknown error',\r\n      };\r\n    }\r\n    const suggestions: AttributeSuggestionQueryResourcePagedCollectionOutput =\r\n      response.body as AttributeSuggestionQueryResourcePagedCollectionOutput;\r\n    const results = suggestions.value.map(\r\n      this.serviceAttributeSuggestionToClientAttributeSuggestion,\r\n    );\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n\r\n  queryTimeSeriesDataPointSuggestions = async (): Promise<\r\n    DataResponse<TimeSeriesDataPointSuggestion[]>\r\n  > => {\r\n    const client = await this.getClient();\r\n    const response = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/query/timeSeriesDataPointSuggestion',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n      )\r\n      .get();\r\n    if (this.isErrorResponse(response)) {\r\n      return {\r\n        state: 'error',\r\n        errorCode: response?.status ?? 500,\r\n        errorMessage: response?.body?.message ?? 'Unknown error',\r\n      };\r\n    }\r\n    const suggestions: TimeSeriesDataPointSuggestionQueryResourcePagedCollectionOutput =\r\n      response.body as TimeSeriesDataPointSuggestionQueryResourcePagedCollectionOutput;\r\n    const results = suggestions.value.map(\r\n      this.serviceTimeSeriesDataPointSuggestionToClientAttributeSuggestion,\r\n    );\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: results,\r\n    });\r\n  };\r\n}\r\n","import { FeatureEvent } from '@trident/certified-events';\r\nimport { DataResponse } from '@do/core';\r\nimport { TimeSeries } from '../TimeSeriesClient/TimeSeriesClient.types';\r\n\r\n/**\r\n * Twin information displayed in the twin list view.\r\n */\r\nexport type Twin = {\r\n  displayName: string;\r\n  twinId: string;\r\n  description: string;\r\n  createdTime?: Date;\r\n  updatedTime?: Date;\r\n  modelId?: string;\r\n  state?: string;\r\n  attributes?: TwinAttributes[];\r\n  timeseriesdatapoints?: TimeSeries[];\r\n};\r\n\r\nexport type AttributeSuggestion = {\r\n  identifier: string;\r\n  valueType: string;\r\n};\r\n\r\nexport type TimeSeriesDataPointSuggestion = {\r\n  identifier: string;\r\n  valueType: string;\r\n};\r\n\r\nexport type TwinAttributes = {\r\n  /** The time and date the resource was created. */\r\n  readonly createdTimestampUtc?: string;\r\n  /** The time and date the resource was last updated. */\r\n  readonly updatedTimestampUtc?: string;\r\n  /** The name of the attribute. */\r\n  name: string;\r\n  /** The display name of the attribute. */\r\n  displayName?: string;\r\n  /**\r\n   * The data type of the attribute.\r\n   *\r\n   * Possible values: Int, Double, String, Bool, DateTime, TimeSpan, Complex\r\n   */\r\n  valueType: string;\r\n  /** The unique identifier of the twin that the attribute is associated with. */\r\n  twinId: string;\r\n  /** The value of the attribute. */\r\n  value: any;\r\n};\r\nexport interface TwinClientType {\r\n  getTwins(searchString?: string): Promise<DataResponse<Twin[]>>;\r\n  getTwinById(id: string): Promise<DataResponse<Twin | undefined>>;\r\n  queryTwins(\r\n    queryObj?: any,\r\n    extend?: string[],\r\n    logConfig?: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<Twin[]>>;\r\n  queryAttributeSuggestions(\r\n    queryObj?: any,\r\n  ): Promise<DataResponse<AttributeSuggestion[]>>;\r\n  queryTimeSeriesDataPointSuggestions(\r\n    queryObj?: any,\r\n  ): Promise<DataResponse<TimeSeriesDataPointSuggestion[]>>;\r\n  queryTwinsWithAttributesAndTimeSeriesDataPoints(\r\n    queryObj?: any,\r\n  ): Promise<DataResponse<Twin[]>>;\r\n}\r\n","import {\r\n  TimeSeriesSourceType,\r\n  TimeSeriesValueType,\r\n} from '../../TimeSeriesClient';\r\nimport {\r\n  AttributeSuggestionQueryResourceOutput,\r\n  TimeSeriesDataPointSuggestionQueryResourceOutput,\r\n} from '@microsoft/digital-operations.sdk';\r\nimport { Twin } from '../TwinClient.types';\r\n\r\nexport const attributeSuggestions: AttributeSuggestionQueryResourceOutput[] = [\r\n  { identifier: 'hello', valueType: 'String' },\r\n  { identifier: 'hey', valueType: 'Int' },\r\n];\r\n\r\nexport const timeSeriesDataPointSuggestions: TimeSeriesDataPointSuggestionQueryResourceOutput[] =\r\n  [\r\n    { identifier: 'Speed', valueType: 'Double' },\r\n    { identifier: 'Volume', valueType: 'Int' },\r\n  ];\r\n\r\nexport const twins: Twin[] = [\r\n  {\r\n    displayName: 'Oven 1',\r\n    twinId: 'Oven1',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 2',\r\n    twinId: 'Oven2',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 3',\r\n    twinId: 'Oven3',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 4',\r\n    twinId: 'Oven4',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 5',\r\n    twinId: 'Oven5',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 6',\r\n    twinId: 'Oven6',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 7',\r\n    twinId: 'Oven7',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 8',\r\n    twinId: 'Oven8',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 9',\r\n    twinId: 'Oven9',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 10',\r\n    twinId: 'Oven10',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 11',\r\n    twinId: 'Oven11',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Oven 12',\r\n    twinId: 'Oven12',\r\n    description: 'The oven used',\r\n  },\r\n  {\r\n    displayName: 'Mixer 1',\r\n    twinId: 'Mixer_1',\r\n    description: 'The mixer for the goods',\r\n  },\r\n  {\r\n    displayName: 'Cooler',\r\n    twinId: 'Cooler1',\r\n    description: 'The cooler for the foods',\r\n    createdTime: new Date('2021-01-01'),\r\n    updatedTime: new Date('2021-01-02'),\r\n    attributes: [\r\n      {\r\n        name: 'attribute1',\r\n        valueType: 'Int',\r\n        value: '10',\r\n        twinId: 'Cooler1',\r\n      },\r\n      {\r\n        name: 'attribute2',\r\n        valueType: 'Boolean',\r\n        value: false,\r\n        twinId: 'Cooler1',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const twinsWithAttributesAndTimeSeriesDataPoints: Twin[] = [\r\n  {\r\n    displayName: 'Oven 1',\r\n    twinId: 'Oven1',\r\n    description: 'The oven used',\r\n    attributes: [\r\n      {\r\n        name: 'Attribute1',\r\n        valueType: 'Int',\r\n        value: '10',\r\n        twinId: 'Oven1',\r\n      },\r\n      {\r\n        name: 'Attribute2',\r\n        valueType: 'Double',\r\n        value: '20.5',\r\n        twinId: 'Oven1',\r\n      },\r\n      {\r\n        name: 'Attribute3',\r\n        valueType: 'String',\r\n        value: 'Oven1',\r\n        twinId: 'Oven1',\r\n      },\r\n    ],\r\n    timeseriesdatapoints: [\r\n      {\r\n        timeSeriesDataPointId: 'DataPoint1',\r\n        source: 'External' as TimeSeriesSourceType,\r\n        valueType: 'Int' as TimeSeriesValueType,\r\n        timeSeriesName: 'Temperature',\r\n        uom: 'Degrees',\r\n        displayName: 'Data Point 1',\r\n        description: 'Data point description',\r\n        functionId: 'Function1',\r\n        twinId: 'Oven1',\r\n      },\r\n      {\r\n        timeSeriesDataPointId: 'DataPoint2',\r\n        source: 'Internal' as TimeSeriesSourceType,\r\n        valueType: 'Double' as TimeSeriesValueType,\r\n        timeSeriesName: 'Pressure',\r\n        uom: 'Pascal',\r\n        displayName: 'Data Point 2',\r\n        description: 'Data point description',\r\n        functionId: 'Function2',\r\n        twinId: 'Oven1',\r\n      },\r\n      {\r\n        timeSeriesDataPointId: 'DataPoint3',\r\n        source: 'External' as TimeSeriesSourceType,\r\n        valueType: 'String' as TimeSeriesValueType,\r\n        timeSeriesName: 'Status',\r\n        uom: 'N/A',\r\n        displayName: 'Data Point 3',\r\n        description: 'Data point description',\r\n        functionId: 'Function3',\r\n        twinId: 'Oven1',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    displayName: 'Mixer 1',\r\n    twinId: 'Mixer1',\r\n    description: 'The mixer used',\r\n    attributes: [\r\n      {\r\n        name: 'Attribute1',\r\n        valueType: 'Int',\r\n        value: '10',\r\n        twinId: 'Mixer1',\r\n      },\r\n      {\r\n        name: 'Attribute2',\r\n        valueType: 'Double',\r\n        value: '20.5',\r\n        twinId: 'Mixer1',\r\n      },\r\n      {\r\n        name: 'Attribute3',\r\n        valueType: 'String',\r\n        value: 'Mixer1',\r\n        twinId: 'Mixer1',\r\n      },\r\n    ],\r\n    timeseriesdatapoints: [\r\n      {\r\n        timeSeriesDataPointId: 'DataPoint1',\r\n        source: 'External' as TimeSeriesSourceType,\r\n        valueType: 'Int' as TimeSeriesValueType,\r\n        timeSeriesName: 'Temperature',\r\n        uom: 'Degrees',\r\n        displayName: 'Data Point 1',\r\n        description: 'Data point description',\r\n        functionId: 'Function1',\r\n        twinId: 'Mixer1',\r\n      },\r\n      {\r\n        timeSeriesDataPointId: 'DataPoint2',\r\n        source: 'Internal' as TimeSeriesSourceType,\r\n        valueType: 'Double' as TimeSeriesValueType,\r\n        timeSeriesName: 'Pressure',\r\n        uom: 'Pascal',\r\n        displayName: 'Data Point 2',\r\n        description: 'Data point description',\r\n        functionId: 'Function2',\r\n        twinId: 'Mixer1',\r\n      },\r\n      {\r\n        timeSeriesDataPointId: 'DataPoint3',\r\n        source: 'External' as TimeSeriesSourceType,\r\n        valueType: 'String' as TimeSeriesValueType,\r\n        timeSeriesName: 'Status',\r\n        uom: 'N/A',\r\n        displayName: 'Data Point 3',\r\n        description: 'Data point description',\r\n        functionId: 'Function3',\r\n        twinId: 'Mixer1',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    displayName: 'Toaster 1',\r\n    twinId: 'Toaster1',\r\n    description: 'The toaster used',\r\n    attributes: [\r\n      {\r\n        name: 'Attribute1',\r\n        valueType: 'Int',\r\n        value: '10',\r\n        twinId: 'Toaster1',\r\n      },\r\n      {\r\n        name: 'Attribute2',\r\n        valueType: 'Double',\r\n        value: '20.5',\r\n        twinId: 'Toaster1',\r\n      },\r\n      {\r\n        name: 'Attribute3',\r\n        valueType: 'String',\r\n        value: 'Toaster1',\r\n        twinId: 'Toaster1',\r\n      },\r\n    ],\r\n    timeseriesdatapoints: [\r\n      {\r\n        timeSeriesDataPointId: 'DataPoint1',\r\n        source: 'External' as TimeSeriesSourceType,\r\n        valueType: 'Int' as TimeSeriesValueType,\r\n        timeSeriesName: 'Temperature',\r\n        uom: 'Degrees',\r\n        displayName: 'Data Point 1',\r\n        description: 'Data point description',\r\n        functionId: 'Function1',\r\n        twinId: 'Toaster1',\r\n      },\r\n      {\r\n        timeSeriesDataPointId: 'DataPoint2',\r\n        source: 'Internal' as TimeSeriesSourceType,\r\n        valueType: 'Double' as TimeSeriesValueType,\r\n        timeSeriesName: 'Pressure',\r\n        uom: 'Pascal',\r\n        displayName: 'Data Point 2',\r\n        description: 'Data point description',\r\n        functionId: 'Function2',\r\n        twinId: 'Toaster1',\r\n      },\r\n      {\r\n        timeSeriesDataPointId: 'DataPoint3',\r\n        source: 'External' as TimeSeriesSourceType,\r\n        valueType: 'String' as TimeSeriesValueType,\r\n        timeSeriesName: 'Status',\r\n        uom: 'N/A',\r\n        displayName: 'Data Point 3',\r\n        description: 'Data point description',\r\n        functionId: 'Function3',\r\n        twinId: 'Toaster1',\r\n      },\r\n    ],\r\n  },\r\n  // ... more twins\r\n];\r\n","export * from './TwinClient.mock';\r\nexport * from './TwinClient.types';\r\nexport * from './TwinClient';\r\n","import { DataResponse } from '../../models';\r\nimport { delay } from '../../utilities/client.utils';\r\nimport {\r\n  TwinAttribute,\r\n  TwinRelationship,\r\n  TwinDetailsClientType,\r\n  TwinDetails,\r\n} from './TwinDetailsClient.types';\r\n\r\nexport class MockTwinDetailsClient implements TwinDetailsClientType {\r\n  getLabels = async (_twinId: string): Promise<DataResponse<string[]>> => {\r\n    await delay(1000); // Fake delay to view pending results in Fabric\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: [\r\n        'some really long label that should wrap the container',\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n        'Odio pellentesque diam volutpat commodo sed',\r\n        'In pellentesque massa placerat duis',\r\n        'Hac habitasse platea dictumst quisque',\r\n        'Velit dignissim sodales ut eu sem integer',\r\n      ],\r\n    });\r\n  };\r\n  getDetails = async (twinId: string): Promise<DataResponse<TwinDetails>> => {\r\n    await delay(500); // Fake delay to view pending results in Fabric\r\n\r\n    return Promise.resolve({\r\n      state: 'success',\r\n      data: {\r\n        name: 'Oven_1',\r\n        id: twinId,\r\n        labels: undefined,\r\n        description: 'Equipment from bread line',\r\n        created: new Date(Date.parse('2021-01-01')),\r\n        updated: new Date(Date.parse('2023-10-16 9:27:00-7')),\r\n      },\r\n    });\r\n  };\r\n\r\n  getAttributes = async (\r\n    _twinId: string,\r\n  ): Promise<DataResponse<TwinAttribute[]>> => {\r\n    await delay(1500); // Fake delay to view pending results in Fabric\r\n    return {\r\n      state: 'success',\r\n      data: [\r\n        {\r\n          name: 'Attribute 1',\r\n          value: '123456',\r\n          valueType: 'number',\r\n        },\r\n        {\r\n          name: 'Attribute 2',\r\n          value: '123456',\r\n          valueType: 'number',\r\n        },\r\n        {\r\n          name: 'Attribute 3',\r\n          value: '123456',\r\n          valueType: 'number',\r\n        },\r\n        {\r\n          name: 'Attribute 4',\r\n          value: '123456',\r\n          valueType: 'number',\r\n        },\r\n        {\r\n          name: 'Attribute 5',\r\n          value: '123456',\r\n          valueType: 'number',\r\n        },\r\n        {\r\n          name: 'Attribute 6',\r\n          value: '123456',\r\n          valueType: 'number',\r\n        },\r\n        { name: 'True Bool', valueType: 'Bool', value: true },\r\n        { name: 'False Bool', valueType: 'Bool', value: false },\r\n      ],\r\n    };\r\n  };\r\n\r\n  getRelationships = async (\r\n    _twinId: string,\r\n  ): Promise<DataResponse<TwinRelationship[]>> => {\r\n    await delay(500); // Fake delay to view pending results in Fabric\r\n    return {\r\n      state: 'success',\r\n      data: [\r\n        {\r\n          twinId: '1',\r\n          name: 'Bread Machine',\r\n          relationshipId: '1',\r\n          relationshipName: 'parentOf',\r\n          originDirection: 'target',\r\n        },\r\n        {\r\n          twinId: '2',\r\n          name: 'Oven thermostat',\r\n          relationshipId: '1',\r\n          relationshipName: 'parentOf',\r\n          originDirection: 'source',\r\n        },\r\n      ],\r\n    };\r\n  };\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport {\r\n  BaseClient,\r\n  API_VERSION,\r\n} from '../DigitalOperationsClients/BaseClient';\r\nimport { TwinOutput } from '@microsoft/digital-operations.sdk';\r\nimport {\r\n  TwinRelationship,\r\n  TwinDetailsClientType,\r\n  TwinDetails,\r\n  TwinAttribute,\r\n} from './TwinDetailsClient.types';\r\nimport { DataResponse } from '../../models';\r\n\r\nexport class TwinDetailsClient\r\n  extends BaseClient\r\n  implements TwinDetailsClientType\r\n{\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    workspaceId: string,\r\n    artifactId: string,\r\n    capacityId: string,\r\n  ) {\r\n    super(extensionClient, workspaceId, artifactId, capacityId);\r\n  }\r\n  getDetails = async (\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinDetails>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const result = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/twins/{twinId}',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n      )\r\n      .get();\r\n    // don't use result?.status here so you don't have to null check later\r\n    if (this.isErrorResponse(result)) {\r\n      return {\r\n        state: 'error',\r\n        errorMessage: result?.body?.message || 'Unknown error',\r\n        errorCode: result?.status || 'Unknown error',\r\n      };\r\n    }\r\n    const twin = result.body as TwinOutput;\r\n    return {\r\n      state: 'success',\r\n      data: {\r\n        name: twin.displayName ?? twinId,\r\n        id: twinId,\r\n        description: twin.description ?? twinId,\r\n        created: twin.createdTimestampUtc\r\n          ? new Date(Date.parse(twin.createdTimestampUtc))\r\n          : undefined,\r\n        updated: twin.updatedTimestampUtc\r\n          ? new Date(Date.parse(twin.updatedTimestampUtc))\r\n          : undefined,\r\n      },\r\n    };\r\n  };\r\n  /**\r\n   *\r\n   * @param twinId\r\n   * @returns List of all attributes for a given twin\r\n   */\r\n  getAttributes = async (\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinAttribute[]>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const result = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/twins/{twinId}/attributes',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n      )\r\n      .get();\r\n    if (this.isErrorResponse(result)) {\r\n      return {\r\n        state: 'error',\r\n        errorMessage: result?.body?.message || 'Unknown error',\r\n        errorCode: result?.status || 'Unknown error',\r\n      };\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: (result.body?.value as TwinAttribute[]) ?? [],\r\n    };\r\n  };\r\n  /**\r\n   *\r\n   * @param twinId\r\n   * @returns List of all attributes for a given twin\r\n   */\r\n  getLabels = async (\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<string[]>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const result = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/twins/{twinId}/labels',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n      )\r\n      .get();\r\n    if (this.isErrorResponse(result)) {\r\n      return {\r\n        state: 'error',\r\n        errorMessage: result?.body?.message || 'Unknown error',\r\n        errorCode: result?.status || 'Unknown error',\r\n      };\r\n    }\r\n    return {\r\n      state: 'success',\r\n      data: result.body?.value.map((label) => label.value) || [],\r\n    };\r\n  };\r\n  /**\r\n   *\r\n   * @param twinId\r\n   * @returns List of all relationships for a given twin\r\n   */\r\n  getRelationships = async (\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinRelationship[]>> => {\r\n    const client = await this.getClient(logConfig);\r\n    const result = await client\r\n      ?.path(\r\n        '/{apiVersion}/workspaces/{workspaceId}/DigitalOperationsOperationalInsights/{itemId}/twins/{twinId}/relationships',\r\n        API_VERSION,\r\n        this.workspaceId,\r\n        this.artifactId,\r\n        twinId,\r\n      )\r\n      .get();\r\n    if (this.isErrorResponse(result)) {\r\n      return {\r\n        state: 'error',\r\n        errorMessage: result?.body?.message || 'Unknown error',\r\n        errorCode: result?.status || 'Unknown error',\r\n      };\r\n    }\r\n    const twins = result.body?.twins;\r\n    return {\r\n      state: 'success',\r\n      data: result.body?.value?.map((relationship) => {\r\n        const relatedTwinId =\r\n          relationship.targetTwinId === twinId\r\n            ? relationship.sourceTwinId\r\n            : relationship.targetTwinId;\r\n        const relatedTwin = twins ? twins[relatedTwinId] : undefined;\r\n        return {\r\n          twinId: relatedTwinId,\r\n          name: relatedTwin?.displayName || relatedTwin?.twinId || '',\r\n          relationshipId: relationship.relationshipId,\r\n          relationshipName: relationship.name,\r\n          originDirection:\r\n            relationship.targetTwinId === twinId ? 'source' : 'target',\r\n        };\r\n      }),\r\n    };\r\n  };\r\n}\r\n","import { DataResponse } from '../../models';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\n\r\nexport interface TwinRelationship {\r\n  twinId: string;\r\n  name: string;\r\n  relationshipId: string;\r\n  relationshipName: string;\r\n  originDirection: RelationshipOrigin;\r\n}\r\n\r\nexport type RelationshipOrigin = 'source' | 'target';\r\n\r\nexport type TwinAttribute = {\r\n  name: string;\r\n  value: any;\r\n  valueType: string;\r\n};\r\n\r\nexport type TwinDetailsClientType = {\r\n  getDetails(\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinDetails>>;\r\n  getAttributes(\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinAttribute[]>>;\r\n  getRelationships(\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<TwinRelationship[]>>;\r\n  getLabels(\r\n    twinId: string,\r\n    logConfig: Partial<FeatureEvent>,\r\n  ): Promise<DataResponse<string[]>>;\r\n};\r\n\r\nexport type TwinDetails = {\r\n  name: string;\r\n  id: string;\r\n  description: string;\r\n  created?: Date;\r\n  updated?: Date;\r\n};\r\n\r\nexport type TwinLabel = {\r\n  labelKey: string;\r\n  labelValue: string;\r\n};\r\n","export * from './TwinDetailsClient';\r\nexport * from './TwinDetailsClient.types';\r\nexport * from './TwinDetailsClient.mock';\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { MWCToken } from '@trident/extension-client';\r\nimport { IMwcTokenProvider, TokenArtifact } from './MwcTokenProvider.types';\r\n\r\nexport class MockMwcTokenProvider implements IMwcTokenProvider {\r\n  getMWCToken(\r\n    lakehouse: TokenArtifact,\r\n    workloadType: 'Lakehouse',\r\n  ): Promise<MWCToken> {\r\n    return Promise.resolve({\r\n      token: 'mockToken',\r\n      targetUriHost: 'mockTargetUriHost',\r\n      capacityObjectId: 'mockCapacityObjectId',\r\n    });\r\n  }\r\n}\r\n","import { MWCToken, ExtensionClientAPI } from '@trident/extension-client';\r\nimport jwt_decode from 'jwt-decode';\r\nimport {\r\n  IMwcTokenProvider,\r\n  TokenArtifact,\r\n  WorkloadType,\r\n} from './MwcTokenProvider.types';\r\n\r\nconst TOKEN_RENEWAL_OFFSET_SECONDS = 15 * 60;\r\n\r\ntype MWCTokenWithExpiry = MWCToken & { expiry?: Date };\r\n\r\nexport const getMwcTokenProvider = (\r\n  extensionClient: ExtensionClientAPI,\r\n): IMwcTokenProvider => {\r\n  return new MwcTokenProvider(extensionClient);\r\n};\r\n\r\nclass MwcTokenProvider implements IMwcTokenProvider {\r\n  private static tokenCache = new Map<string, MWCTokenWithExpiry>();\r\n  private readonly extensionClient: ExtensionClientAPI;\r\n\r\n  constructor(extensionClient: ExtensionClientAPI) {\r\n    this.extensionClient = extensionClient;\r\n  }\r\n  private static shouldRenewToken(token: MWCTokenWithExpiry): boolean {\r\n    if (!token.expiry) {\r\n      return true; // if there's no expiry, always renew.\r\n    }\r\n    const expiryTime = new Date(\r\n      token.expiry.getTime() - TOKEN_RENEWAL_OFFSET_SECONDS * 1000,\r\n    );\r\n\r\n    const nowTime = new Date();\r\n    const shouldRenew = expiryTime.getTime() < nowTime.getTime();\r\n    return shouldRenew;\r\n  }\r\n\r\n  private static addExpiryToToken(token: MWCToken): MWCTokenWithExpiry {\r\n    return { ...token, expiry: this.getExpiryFromToken(token.token) };\r\n  }\r\n  private static getExpiryFromToken(tokenValue: string): Date | undefined {\r\n    try {\r\n      const decoded = jwt_decode<{ exp: number | undefined }>(tokenValue);\r\n      if (!decoded.exp) {\r\n        return undefined;\r\n      }\r\n      return new Date(decoded.exp * 1000); // convert to miliseconds\r\n    } catch {\r\n      return undefined;\r\n    }\r\n  }\r\n  public async getMWCToken(\r\n    artifact: TokenArtifact,\r\n    workloadType: WorkloadType,\r\n  ): Promise<MWCToken> {\r\n    const cacheKey = `${artifact.artifactObjectId}-${workloadType}`;\r\n    const cachedToken = MwcTokenProvider.getCachedToken(cacheKey);\r\n\r\n    if (cachedToken && !MwcTokenProvider.shouldRenewToken(cachedToken)) {\r\n      return cachedToken;\r\n    }\r\n\r\n    const tokenPayload = {\r\n      workloadType,\r\n      workspaceObjectId: artifact.workspaceObjectId,\r\n      artifactObjectIds: [artifact.artifactObjectId],\r\n      capacityObjectId: artifact.capacityObjectId,\r\n    };\r\n    // Lakehouse requires the v1 token to use the existing lakehouse client\r\n    const token =\r\n      workloadType === 'Lakehouse'\r\n        ? await this.extensionClient.auth.getMWCToken(tokenPayload)\r\n        : await this.extensionClient.auth.getMWCTokenV2(tokenPayload);\r\n\r\n    // add the new token to cache.\r\n    MwcTokenProvider.tokenCache.set(\r\n      cacheKey,\r\n      MwcTokenProvider.addExpiryToToken(token),\r\n    );\r\n    return token;\r\n  }\r\n  private static getCachedToken(\r\n    cacheKey: string,\r\n  ): MWCTokenWithExpiry | undefined {\r\n    return this.tokenCache.get(cacheKey);\r\n  }\r\n}\r\n","import { MWCToken } from '@trident/extension-client';\r\n\r\nexport type WorkloadType = 'Lakehouse' | 'DO';\r\n\r\nexport interface TokenArtifact {\r\n  workspaceObjectId: string;\r\n  artifactObjectId: string;\r\n  capacityObjectId: string;\r\n}\r\n\r\nexport interface IMwcTokenProvider {\r\n  /**\r\n   * Retrieves the MWC Token for an Artifact.\r\n   * @param artifact\r\n   * @param workloadType\r\n   */\r\n  getMWCToken(\r\n    artifact: TokenArtifact,\r\n    workloadType: WorkloadType,\r\n  ): Promise<MWCToken>;\r\n}\r\n","export * from './MwcTokenProvider';\r\nexport * from './MwcTokenProvider.types';\r\nexport * from './MwcTokenProvider.mock';\r\n","export * from './common';\r\nexport * from './LakehouseClient';\r\nexport * from './TridentExtension';\r\nexport * from './HierarchyClient';\r\nexport * from './TwinDetailsClient';\r\nexport * from './EventClient';\r\nexport * from './TwinClient';\r\nexport * from './ModelGenerationTwinInformationClient';\r\nexport * from './PredictedModelTwinInformationClient';\r\nexport * from './ModelingJobsClient';\r\nexport * from './ModelInformationClient';\r\nexport * from './TimeSeriesClient';\r\nexport * from './CalculationClient';\r\nexport * from './EntityMatchingClient';\r\nexport * from './MappingClient';\r\nexport { WithContinuationToken } from './Clients.types';\r\nexport * from './ModelDetailsClient';\r\n","export const DEBUG_LOCAL_STORAGE_FLAG_KEY = 'imdx-debugLogging-global';\r\n","import { EnvironmentName } from '@trident/extension-client';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface EnvironmentSettings {}\r\n\r\nexport type Environments = {\r\n  [key in EnvironmentName]?: EnvironmentSettings;\r\n};\r\n\r\nexport const environments: Environments = {\r\n  DEFAULT: {},\r\n};\r\n","export enum FeatureSwitches {\r\n  useMockData = 'useMockData',\r\n}\r\n","export * from './environments';\r\nexport * from './featureSwitches';\r\nexport * from './routing';\r\nexport * from './searchParams';\r\nexport * from './theme';\r\nexport * from './styles';\r\n","export enum EXTENSION_NAMES {\r\n  DataEngDataScience = 'de-ds',\r\n  DataFlow = 'dataflows',\r\n  DataPipeline = 'data-pipeline',\r\n  DigitalOperations = 'digital-operations',\r\n  Lakehouse = 'lakehouse',\r\n  SparkCore = 'sparkcore',\r\n}\r\n\r\nexport enum EXTENSION_ACTIONS {\r\n  OpenSparkMonitoringPage = 'open.spark-monitoring-page',\r\n}\r\n\r\nexport enum AppNames {\r\n  home = 'home',\r\n  prepare = 'prepare',\r\n  explorer = 'explorer',\r\n  insights = 'insights',\r\n  // other apps here\r\n}\r\n\r\n/**\r\n * Functions for extension routes.\r\n */\r\nexport const ExtensionRoutes = {\r\n  explorer: (artifactId: string) =>\r\n    getNestedPage(AppNames.explorer, artifactId),\r\n  home: (artifactId: string) => getNestedPage(AppNames.home, artifactId),\r\n\r\n  prepare: (artifactId: string) => getNestedPage(AppNames.prepare, artifactId),\r\n  insights: (artifactId: string) =>\r\n    getNestedPage(AppNames.insights, artifactId),\r\n  create: '/operational-insights/create',\r\n};\r\n\r\nexport const operationalInsightsRootPath = (artifactId: string) => {\r\n  return artifactId\r\n    ? `/operational-insights/${artifactId}`\r\n    : '/operational-insights';\r\n};\r\n\r\nexport function getNestedPage(page: string, artifactId: string) {\r\n  return `${operationalInsightsRootPath(artifactId)}/${page}`;\r\n}\r\n\r\n/**\r\n * Iframe IDs used in standalone mode.\r\n */\r\nexport const StandAloneFrames = {\r\n  panelId: 'standalone_panel',\r\n  dialogId: 'standalone_dialog',\r\n};\r\n","export enum SearchParams {\r\n  WORKSPACE_OBJECT_ID = 'workspaceObjectId',\r\n  ARTIFACT_OBJECT_ID = 'artifactObjectId',\r\n}\r\n","/** Style constants for dialogs */\r\nexport const DialogStyles = {\r\n  maxWidth: '50%',\r\n};\r\n\r\n/** constants for the non-themed colors, only use if you cannot use the theme vars (`tokens`) from @fluent-ui. This will NOT theme correctly. When we support more than light theme we need to figure out how to handle this */\r\nexport const NonThemedColors = {\r\n  /** the brand color (green in light theme) */\r\n  BrandColor: '#117865',\r\n};\r\n","import { Theme, webLightTheme } from '@fluentui/react-components';\r\n\r\nexport const colorTridentPrimary = '#117865';\r\nconst colorTidentPrimaryLight = '#9EE0CB';\r\n\r\nexport const customLightTheme: Theme = {\r\n  ...webLightTheme,\r\n  colorBrandBackground: colorTridentPrimary,\r\n  colorBrandBackgroundHover: colorTridentPrimary,\r\n  colorBrandStroke1: colorTridentPrimary, // Spinner\r\n  colorBrandStroke2: colorTidentPrimaryLight, // Spinner\r\n  colorCompoundBrandBackground: colorTridentPrimary,\r\n  colorCompoundBrandBackgroundHover: colorTridentPrimary,\r\n  colorCompoundBrandBackgroundPressed: colorTridentPrimary,\r\n  colorCompoundBrandForeground1: colorTridentPrimary,\r\n  colorCompoundBrandForeground1Hover: colorTridentPrimary,\r\n  colorCompoundBrandStroke: colorTridentPrimary,\r\n  colorCompoundBrandStrokeHover: colorTridentPrimary,\r\n  colorNeutralForeground2BrandHover: colorTridentPrimary,\r\n};\r\n","import React, { createContext, useContext, memo } from 'react';\r\nimport { IEnvironmentContext } from './EnvironmentContext.types';\r\n\r\nexport const EnvironmentContext = createContext<IEnvironmentContext>({\r\n  environmentName: 'DEFAULT',\r\n});\r\nexport const useEnvironmentContext = () => useContext(EnvironmentContext);\r\n\r\n/**\r\n * This context is for holding which environment the app is running in (OneBox, INT, DAILY, PROD, etc). Dogfood/EDog is TEST\r\n */\r\nexport const EnvironmentContextProvider = memo(\r\n  ({\r\n    environmentName,\r\n    children,\r\n  }: React.PropsWithChildren<IEnvironmentContext>) => {\r\n    return (\r\n      <EnvironmentContext.Provider value={{ environmentName }}>\r\n        {children}\r\n      </EnvironmentContext.Provider>\r\n    );\r\n  },\r\n);\r\n","import { EnvironmentName } from '@trident/extension-client';\r\n\r\nexport interface IEnvironmentContext {\r\n  environmentName: EnvironmentName;\r\n}\r\nexport interface IEnvironmentContextProviderProps {\r\n  environmentName: EnvironmentName;\r\n}\r\n","export * from './EnvironmentContext';\r\nexport * from './EnvironmentContext.types';\r\n","/**\r\n * This context is for managing which features are enabled in the app\r\n */\r\nimport React, { ReactNode, useContext, useMemo } from 'react';\r\nimport {\r\n  IFeatureSwitchContext,\r\n  IFeatureSwitchContextProviderProps,\r\n} from './FeatureSwitchContext.types';\r\nimport { getFeatureSwitches } from './FeatureSwitchContext.utils';\r\nimport { getLogger } from '../../telemetry';\r\nimport { useEnvironmentSettings } from '../../hooks/useEnvironmentSettings';\r\n\r\n/**\r\n * Constants for logging.\r\n */\r\nconst MODULE_NAME = 'FeatureSwitchContext';\r\nconst debugLogging = false;\r\n\r\nexport const FeatureSwitchContext = React.createContext<IFeatureSwitchContext>({\r\n  features: {},\r\n});\r\nexport const useFeatureSwitchContext = () => useContext(FeatureSwitchContext);\r\n\r\nexport const FeatureSwitchContextProvider = React.memo(\r\n  (props: IFeatureSwitchContextProviderProps & { children?: ReactNode }) => {\r\n    const { children, settings } = props;\r\n\r\n    const { getSetting } = useEnvironmentSettings();\r\n    const providerProps: IFeatureSwitchContext = useMemo(() => {\r\n      const featureSwitches = getFeatureSwitches(settings.featureSwitches);\r\n\r\n      // if an environment is configured and the feature is not, use the environment setting\r\n      Object.keys(featureSwitches).forEach((key) => {\r\n        if (featureSwitches[key] === undefined) {\r\n          const setting = getSetting(key);\r\n          featureSwitches[key] = setting;\r\n        }\r\n      });\r\n      return {\r\n        features: featureSwitches,\r\n      };\r\n    }, [getSetting, settings.featureSwitches]);\r\n\r\n    debugLogging &&\r\n      getLogger().debug(MODULE_NAME, 'Mount FeatureSwitchContextProvider.');\r\n    return (\r\n      <FeatureSwitchContext.Provider value={providerProps}>\r\n        {children}\r\n      </FeatureSwitchContext.Provider>\r\n    );\r\n  },\r\n);\r\n","import { ExtensionSettings } from '@trident/extension-client';\r\n\r\nexport interface IFeatureSwitchContextProviderProps {\r\n  settings: ExtensionSettings;\r\n}\r\n\r\n/**\r\n * A context used for capturing the current state of the app and restoring it to a new instance of the app\r\n */\r\nexport interface IFeatureSwitchContext {\r\n  features: Record<string, boolean>;\r\n}\r\n","import { FeatureSwitches } from '../../constants/featureSwitches';\r\n\r\nexport const getFeatureSwitches = (\r\n  featureSwitches: Record<string, boolean>,\r\n): Record<string, boolean> => {\r\n  const extensionFeatureSwitches: Record<string, boolean> = {};\r\n\r\n  Object.values(FeatureSwitches).forEach((featureFlag) => {\r\n    extensionFeatureSwitches[featureFlag] = featureSwitches[featureFlag];\r\n  });\r\n\r\n  return extensionFeatureSwitches;\r\n};\r\n","export * from './FeatureSwitchContext';\r\nexport * from './FeatureSwitchContext.types';\r\n","/**\r\n * This context is for managing the state and actions on the Ontology Authoring Tool page\r\n */\r\nimport { useEffect, useMemo, useState, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ISharedStateContext } from './SharedStateContext.types';\r\nimport { getLogger } from '../../telemetry';\r\nimport { SearchParams } from '../../constants/searchParams';\r\nimport { useArtifactClient, useExtensionClient } from '../../hooks';\r\nimport { ArtifactWithETag } from '@trident/data-access-artifact';\r\n\r\n/**\r\n * Constants for logging.\r\n */\r\nconst MODULE_NAME = 'SharedStateContext.State';\r\n\r\ninterface QueryStringParams {\r\n  [SearchParams.ARTIFACT_OBJECT_ID]: string;\r\n}\r\n\r\nexport const useContextState = (): ISharedStateContext => {\r\n  // hook\r\n  const params = useParams<QueryStringParams>();\r\n  const { getArtifact } = useArtifactClient();\r\n  const extensionClient = useExtensionClient();\r\n\r\n  // state\r\n  const artifactId = useMemo(() => {\r\n    return params?.[SearchParams.ARTIFACT_OBJECT_ID];\r\n  }, [params]);\r\n  const [storedArtifacts, setStoredArtifacts] = useState<\r\n    Record<string, ArtifactWithETag>\r\n  >({});\r\n\r\n  const [propertyBag, setPropertyBag] = useState<Record<string, unknown>>({});\r\n\r\n  // effects\r\n  const updateArtifactDetails = useCallback(\r\n    async (newArtifactId: string) => {\r\n      // don't fetch data if we don't have an artifact id\r\n      if (!newArtifactId) {\r\n        getLogger().warn(\r\n          MODULE_NAME,\r\n          'No artifact id found. Clearing global state. Things might not work right.',\r\n        );\r\n        return;\r\n      }\r\n      // refresh the global state based on the current artifact\r\n      getLogger().info(\r\n        MODULE_NAME,\r\n        `Artifact id changed (${newArtifactId}). Refreshing global artifact state.`,\r\n      );\r\n      const artifact = await getArtifact({\r\n        objectId: newArtifactId,\r\n      });\r\n      getLogger().info(MODULE_NAME, `End artifact refresh.`);\r\n      if (artifact.state === 'Complete' && artifact.data !== undefined) {\r\n        setStoredArtifacts((prev) => ({\r\n          ...prev,\r\n          [newArtifactId]: artifact.data,\r\n        }));\r\n      }\r\n    },\r\n    [getArtifact],\r\n  );\r\n\r\n  const artifact = useMemo(() => {\r\n    if (storedArtifacts[artifactId] === undefined) {\r\n      updateArtifactDetails(artifactId);\r\n      return undefined;\r\n    }\r\n    return storedArtifacts[artifactId];\r\n  }, [artifactId, storedArtifacts, updateArtifactDetails]);\r\n\r\n  // update state when QSP changes\r\n  useEffect(() => {\r\n    if (\r\n      extensionClient &&\r\n      artifact &&\r\n      artifactId !== '' &&\r\n      artifact.objectId === artifactId\r\n    ) {\r\n      extensionClient.multitasking.updateTab({\r\n        title: artifact.displayName || artifactId,\r\n        id: artifactId,\r\n      });\r\n    }\r\n  }, [extensionClient, artifact, artifactId]);\r\n  useEffect(() => {\r\n    if (artifactId !== '' && artifact?.objectId !== artifactId) {\r\n      updateArtifactDetails(artifactId);\r\n      getLogger().info(MODULE_NAME, `Stored updated artifact id.`, artifactId);\r\n    }\r\n  }, [artifactId, updateArtifactDetails, artifact?.objectId]);\r\n\r\n  // data\r\n  const providerProps: ISharedStateContext = useMemo(() => {\r\n    const addToBag = (key: string, value: unknown) => {\r\n      setPropertyBag((prev) => ({ ...prev, [key]: value }));\r\n    };\r\n    const removeFromBag = (key: string) => {\r\n      setPropertyBag((prev) => {\r\n        if (prev && key in prev) {\r\n          delete prev[key];\r\n        }\r\n        return prev;\r\n      });\r\n    };\r\n    return {\r\n      artifactId: artifact?.objectId || '',\r\n      workspaceId: artifact?.folderObjectId || '',\r\n      capacityId: artifact?.capacityObjectId || '',\r\n      propertyBag: propertyBag,\r\n      addToPropertyBag: addToBag,\r\n      updatePropertyBag: addToBag,\r\n      removeFromPropertyBag: removeFromBag,\r\n    };\r\n  }, [\r\n    artifact?.capacityObjectId,\r\n    artifact?.folderObjectId,\r\n    artifact?.objectId,\r\n    propertyBag,\r\n  ]);\r\n\r\n  return providerProps;\r\n};\r\n","/**\r\n * This context is for managing the top level state that is shared across the different apps\r\n */\r\nimport React, { ReactNode, useContext } from 'react';\r\nimport { ISharedStateContext } from './SharedStateContext.types';\r\nimport { getLogger } from '../../telemetry';\r\nimport { useContextState } from './SharedStateContext.state';\r\n\r\n/**\r\n * Constants for logging.\r\n */\r\nconst MODULE_NAME = 'SharedStateContext';\r\nconst debugLogging = true;\r\n\r\nconst defaultState: ISharedStateContext = {\r\n  artifactId: '',\r\n  workspaceId: '',\r\n  capacityId: '',\r\n  propertyBag: {},\r\n  addToPropertyBag: () => undefined,\r\n  updatePropertyBag: () => undefined,\r\n  removeFromPropertyBag: () => undefined,\r\n};\r\n\r\nexport const SharedStateContext =\r\n  React.createContext<ISharedStateContext>(defaultState);\r\nexport const useSharedState = () => {\r\n  const context = useContext(SharedStateContext);\r\n  if (!context) {\r\n    const message =\r\n      'useSharedStateContext must be used within a SharedStateContextProvider';\r\n    getLogger().error(MODULE_NAME, message);\r\n    throw new Error(message);\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SharedStateContextProvider = React.memo(\r\n  (props: { children?: ReactNode }) => {\r\n    const { children } = props;\r\n\r\n    const providerProps = useContextState();\r\n\r\n    debugLogging &&\r\n      getLogger().debug(\r\n        MODULE_NAME,\r\n        'Mount SharedStateContextProvider. {state}',\r\n        providerProps,\r\n      );\r\n    return (\r\n      <SharedStateContext.Provider value={providerProps}>\r\n        {children}\r\n      </SharedStateContext.Provider>\r\n    );\r\n  },\r\n);\r\n","export {\r\n  useSharedState,\r\n  SharedStateContextProvider,\r\n} from './SharedStateContext';\r\nexport { ISharedStateContext } from './SharedStateContext.types';\r\n","/**\r\n * This context is for managing the state and actions on the Ontology Authoring Tool page\r\n */\r\nimport React, { ReactNode, useContext, useMemo } from 'react';\r\nimport {\r\n  LakehouseClient,\r\n  MockLakehouseClient,\r\n} from '../../clients/LakehouseClient';\r\nimport { getLogger } from '../../telemetry';\r\nimport { useFeatureSwitchContext } from '../FeatureSwitchContext';\r\nimport {\r\n  ITridentContext,\r\n  ITridentContextProviderProps,\r\n} from './TridentContext.types';\r\n\r\n/**\r\n * Constants for logging.\r\n */\r\nconst MODULE_NAME = 'TridentContext';\r\nconst debugLogging = false;\r\n\r\nexport const TridentContext = React.createContext<ITridentContext | null>(null);\r\nexport const useTridentContext = () => useContext(TridentContext);\r\n\r\nexport const TridentContextProvider = React.memo(\r\n  (props: ITridentContextProviderProps & { children?: ReactNode }) => {\r\n    const { children, extensionClient } = props;\r\n    const { features } = useFeatureSwitchContext();\r\n    const { useMockData } = features;\r\n\r\n    const providerProps: ITridentContext = useMemo(() => {\r\n      if (useMockData) {\r\n        return {\r\n          useMockData,\r\n          extensionClient: extensionClient,\r\n          lakehouseClient: new MockLakehouseClient(),\r\n        };\r\n      } else {\r\n        return {\r\n          useMockData,\r\n          extensionClient: extensionClient,\r\n          lakehouseClient: new LakehouseClient(extensionClient),\r\n        };\r\n      }\r\n    }, [extensionClient, useMockData]);\r\n\r\n    debugLogging &&\r\n      getLogger().debug(MODULE_NAME, 'Mount TridentContextProvider');\r\n    return (\r\n      <TridentContext.Provider value={providerProps}>\r\n        {children}\r\n      </TridentContext.Provider>\r\n    );\r\n  },\r\n);\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { ILakehouseClient } from '../../clients/LakehouseClient/LakehouseClient.types';\r\n\r\nexport { NotificationType } from '@trident/extension-client';\r\n\r\nexport interface ITridentContextProviderProps {\r\n  extensionClient: ExtensionClientAPI;\r\n}\r\n\r\n/**\r\n * A context used for capturing the current state of the app and restoring it to a new instance of the app\r\n */\r\nexport interface ITridentContext {\r\n  useMockData: boolean;\r\n  lakehouseClient: ILakehouseClient | undefined;\r\n  extensionClient: ExtensionClientAPI;\r\n}\r\n","export * from './TridentContext';\r\nexport * from './TridentContext.types';\r\n","export * from './EnvironmentContext';\r\nexport * from './FeatureSwitchContext';\r\nexport * from './SharedStateContext';\r\nexport * from './TridentContext';\r\n","export * from './useDataPipelinesExtension';\r\n","import { OpenUIResult } from '@trident/extension-client';\r\nimport { getLogger } from '../../telemetry';\r\n\r\n/**\r\n * Extension name for pipeline - data-pipeline\r\n */\r\n// const PIPELINE_EXTENSION = EXTENSION_NAMES.DataPipeline;\r\n\r\n/**\r\n * Action name for create pipeline.\r\n */\r\n// const CREATE_PIPELINE_ACTION = 'create.pipeline';\r\n\r\n/**\r\n * Module name, for logging.\r\n */\r\nconst MODULE_NAME = 'useDataPipelinesExtension';\r\n\r\n/**\r\n * Opens a new pipeline in the current lakehouse context.\r\n * @param lakehouse Lakehouse context\r\n */\r\nasync function openInNewPipeline(): Promise<OpenUIResult> {\r\n  getLogger().warn(\r\n    `Mock pipeline invocation, not calling real module`,\r\n    MODULE_NAME,\r\n  );\r\n  // const extensionClient = useExtensionClient();\r\n  // const { workspaceId } = useSharedStateContext();\r\n\r\n  // return (\r\n  //   await extensionClient.action.execute<IPipelineCreatePayload, OpenUIResult>({\r\n  //     extensionName: PIPELINE_EXTENSION,\r\n  //     action: CREATE_PIPELINE_ACTION,\r\n  //     data: {\r\n  //       workspaceObjectId: workspaceId,\r\n  //       activity: {\r\n  //         activityType: 'copy',\r\n  //         flowType: 'wizard',\r\n  //         typeProperties: {\r\n  //           destinationType: 'Lakehouse',\r\n  //           destinationArtifactId: lakehouse.Id,\r\n  //         },\r\n  //       },\r\n  //     },\r\n  //   })\r\n  // ).result;\r\n  return Promise.resolve({});\r\n}\r\n\r\n/** methods for interacting with the Trident Data Pipelines extension */\r\nexport const useDataPipelinesExtension = () => {\r\n  return {\r\n    openPipeline: openInNewPipeline,\r\n  };\r\n};\r\n","export * from './externalExtensions';\r\nexport * from './useAppRouteProps';\r\nexport * from './useArtifactClient';\r\nexport * from './useCalculationClient';\r\nexport * from './useDebugLogging';\r\nexport * from './useEffectOnce';\r\nexport * from './useEntityMatchingClient';\r\nexport * from './useEntityMatchingClient';\r\nexport * from './useEnvironmentSettings';\r\nexport * from './useEventClient';\r\nexport * from './useEventClient';\r\nexport * from './useEventClient';\r\nexport * from './useExtensionClient';\r\nexport * from './useFeatureSwitches';\r\nexport * from './useHierarchyClient';\r\nexport * from './useLakehouseClient';\r\nexport * from './useNavigation';\r\nexport * from './useSettings';\r\nexport * from './useTimeSeriesClient';\r\nexport * from './useTwinClient';\r\nexport * from './useTwinDetailsClient';\r\nexport * from './useModelGenerationTwinInformationClient';\r\nexport * from './usePredictedModelTwinInformationClient';\r\nexport * from './useWorkspaceClient';\r\nexport * from './useMappingClient';\r\nexport * from './useModelingJobsClient';\r\n","import { IAppBaseRouteProps } from '../models';\r\nimport { AppNames } from '../constants';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport const useAppRouteProps = () => {\r\n  const location = getLocation();\r\n\r\n  const segments = location.pathname\r\n    .split('/')\r\n    .filter((segment) => segment && segment.length > 0);\r\n\r\n  const props: IAppBaseRouteProps = {\r\n    path: location.pathname,\r\n    segments,\r\n    artifactId: segments[1],\r\n    app: (segments[2] as AppNames) || AppNames.home,\r\n  };\r\n  return props;\r\n};\r\n\r\n/* this is so we can mock it easier */\r\n/* istanbul ignore next */\r\nexport const getLocation = () => {\r\n  return useLocation();\r\n};\r\n","import { useCallback, useMemo, useState } from 'react';\r\nimport { useExtensionClient } from './useExtensionClient';\r\nimport {\r\n  ArtifactClient,\r\n  CreateArtifactParams,\r\n  CreateArtifactResult,\r\n  DeleteArtifactParams,\r\n  GetArtifactParams,\r\n  GetArtifactResult,\r\n  ListArtifactParams,\r\n  ListArtifactResult,\r\n  ServiceClientConfig,\r\n  UpdateArtifactParams,\r\n  UpdateArtifactResult,\r\n} from '@trident/data-access-artifact';\r\nimport { DataState } from '../models/Types';\r\nimport { getTridentAPIErrorMessage } from '../utilities/shell.utils';\r\nimport { useSettings } from './useSettings';\r\n\r\n/**\r\n * Gets an artifact client for interacting with Artifacts in the Trident Shared platform\r\n * Exposes callbacks for performing various operations on artifacts.\r\n * Guidance is to use the callbacks by default unless you have a special case that requires using the client directly\r\n * @returns a collection of callbacks as well as the client itself if needed\r\n */\r\nexport const useArtifactClient = () => {\r\n  // hooks\r\n  const extensionClient = useExtensionClient();\r\n  const settings = useSettings();\r\n  // state\r\n  // state\r\n  const [artifactClient, setArtifactClient] = useState<\r\n    ArtifactClient | undefined\r\n  >(undefined);\r\n\r\n  // callbacks\r\n  const getInstance = useCallback(() => {\r\n    if (artifactClient) {\r\n      return Promise.resolve(artifactClient);\r\n    }\r\n\r\n    const execute = async () => {\r\n      if (artifactClient) {\r\n        return Promise.resolve(artifactClient);\r\n      }\r\n      const values = await settings.get();\r\n      const baseUrl = values.sharedBackendUri;\r\n      const extensionHostOrigin = values.extensionHostOrigin;\r\n      // if we can't resolve settings (because the Hook hasn't returned), we don't have a URL.\r\n      // No URL, no valid way to make an ArtifactClient and everything breaks.\r\n      if (!baseUrl || baseUrl === '')\r\n        return Promise.reject('No valid URL for ArtifactClient');\r\n\r\n      const serviceConfig: ServiceClientConfig = {\r\n        baseUrl,\r\n        extensionHostOrigin,\r\n        tokenProvider: () => {\r\n          if (extensionClient) {\r\n            return extensionClient.auth.getAccessToken().then(({ token }) => {\r\n              return token;\r\n            });\r\n          } else {\r\n            return Promise.reject('Extension client not initialized');\r\n          }\r\n        },\r\n      };\r\n      const client = new ArtifactClient(serviceConfig);\r\n      setArtifactClient(client);\r\n      return client;\r\n    };\r\n    return execute();\r\n  }, [artifactClient, extensionClient, settings]);\r\n\r\n  const getArtifact = useCallback(\r\n    async (args: GetArtifactParams): Promise<DataState<GetArtifactResult>> => {\r\n      const localClient = artifactClient ?? (await getInstance());\r\n      try {\r\n        const data = await localClient.getArtifact(args);\r\n        return {\r\n          data: data,\r\n          state: 'Complete',\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          error: getTridentAPIErrorMessage(error),\r\n          state: 'Error',\r\n        };\r\n      }\r\n    },\r\n    [artifactClient, getInstance],\r\n  );\r\n\r\n  const createArtifact = useCallback(\r\n    async (\r\n      args: CreateArtifactParams,\r\n    ): Promise<DataState<CreateArtifactResult>> => {\r\n      const localClient = artifactClient ?? (await getInstance());\r\n      if (!localClient) {\r\n        return Promise.reject('Artifact client not initialized');\r\n      }\r\n      try {\r\n        const result = await localClient.createArtifact(args);\r\n        return {\r\n          data: result,\r\n          state: 'Complete',\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          error: getTridentAPIErrorMessage(error),\r\n          state: 'Error',\r\n        };\r\n      }\r\n    },\r\n    [artifactClient, getInstance],\r\n  );\r\n\r\n  const updateArtifact = useCallback(\r\n    async (\r\n      args: UpdateArtifactParams,\r\n    ): Promise<DataState<UpdateArtifactResult>> => {\r\n      const localClient = artifactClient ?? (await getInstance());\r\n      if (!localClient) {\r\n        return Promise.reject('Artifact client not initialized');\r\n      }\r\n      try {\r\n        const result = await localClient.updateArtifact(args);\r\n        return {\r\n          data: result,\r\n          state: 'Complete',\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          error: getTridentAPIErrorMessage(error),\r\n          state: 'Error',\r\n        };\r\n      }\r\n    },\r\n    [artifactClient, getInstance],\r\n  );\r\n\r\n  const deleteArtifact = useCallback(\r\n    async (args: DeleteArtifactParams): Promise<DataState<void>> => {\r\n      const localClient = artifactClient ?? (await getInstance());\r\n      if (!localClient) {\r\n        return Promise.reject('Artifact client not initialized');\r\n      }\r\n      try {\r\n        const result = await localClient.deleteArtifact(args);\r\n        return {\r\n          data: result,\r\n          state: 'Complete',\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          error: getTridentAPIErrorMessage(error),\r\n          state: 'Error',\r\n        };\r\n      }\r\n    },\r\n    [artifactClient, getInstance],\r\n  );\r\n\r\n  const listArtifacts = useCallback(\r\n    async (\r\n      args: ListArtifactParams,\r\n    ): Promise<DataState<ListArtifactResult>> => {\r\n      const localClient = artifactClient ?? (await getInstance());\r\n      if (!localClient) {\r\n        return Promise.reject('Artifact client not initialized');\r\n      }\r\n      try {\r\n        const result = await localClient.listArtifacts(args);\r\n        return {\r\n          data: result,\r\n          state: 'Complete',\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          error: getTridentAPIErrorMessage(error),\r\n          state: 'Error',\r\n        };\r\n      }\r\n    },\r\n    [artifactClient, getInstance],\r\n  );\r\n\r\n  // side effects\r\n  return useMemo(() => {\r\n    return {\r\n      getInstance,\r\n      getArtifact,\r\n      createArtifact,\r\n      updateArtifact,\r\n      deleteArtifact,\r\n      listArtifacts,\r\n    };\r\n  }, [\r\n    createArtifact,\r\n    deleteArtifact,\r\n    getArtifact,\r\n    getInstance,\r\n    listArtifacts,\r\n    updateArtifact,\r\n  ]);\r\n};\r\n","import { getLogger, useSharedState, useTridentContext } from '@do/core';\r\nimport { useMemo } from 'react';\r\nimport {\r\n  CalculationClient,\r\n  CalculationClientType,\r\n  MockCalculationClient,\r\n} from '../clients/CalculationClient';\r\n\r\nconst MODULE_NAME = 'useCalculationClient';\r\n\r\nexport const useCalculationClient = () => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  const client: CalculationClientType | undefined = useMemo(() => {\r\n    if (tridentContext?.useMockData) {\r\n      getLogger().debug(MODULE_NAME, 'Creating mock calculation client');\r\n      return new MockCalculationClient();\r\n    }\r\n    if (\r\n      tridentContext?.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      getLogger().debug(MODULE_NAME, 'Creating calculation client');\r\n      return new CalculationClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    getLogger().warn(MODULE_NAME, 'Unable to create calculation client', {\r\n      artifactId,\r\n      workspaceId,\r\n      capacityId,\r\n    });\r\n    return undefined;\r\n  }, [\r\n    tridentContext?.useMockData,\r\n    tridentContext?.extensionClient,\r\n    workspaceId,\r\n    artifactId,\r\n    capacityId,\r\n  ]);\r\n\r\n  return client;\r\n};\r\n","import { useState } from 'react';\r\nimport { DEBUG_LOCAL_STORAGE_FLAG_KEY } from '../constants/debugging';\r\n\r\nexport const useDebugLogging = (enableLogger?: boolean): boolean => {\r\n  // Using state here to check localStorage only once\r\n  const [debugLogging] = useState(() => {\r\n    if (enableLogger) {\r\n      return true;\r\n    }\r\n\r\n    return isGlobalDebugLoggingEnabled();\r\n  });\r\n\r\n  return debugLogging;\r\n};\r\n\r\nexport const isGlobalDebugLoggingEnabled = (): boolean => {\r\n  const debugLogging = localStorage.getItem(DEBUG_LOCAL_STORAGE_FLAG_KEY);\r\n  return debugLogging === 'true';\r\n};\r\n","import { useEffect } from 'react';\r\n\r\n/**\r\n * A React hook that runs a setup action once on initial render, and an optional cleanup action when the component\r\n * is to be removed from the DOM.\r\n *\r\n * @param setupAction The setup action.\r\n * @param cleanupAction The cleanup action.\r\n */\r\nexport function useEffectOnce(\r\n  setupAction: () => void,\r\n  cleanupAction?: () => void,\r\n): void {\r\n  useEffect(() => {\r\n    setupAction();\r\n\r\n    return cleanupAction;\r\n\r\n    // We explicitly want the hook to run once.\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n}\r\n","import {\r\n  EntityMatchingClient,\r\n  EntityMatchingClientType,\r\n  MockEntityMatchingClient,\r\n  useSharedState,\r\n  useTridentContext,\r\n} from '@do/core';\r\nimport { useMemo } from 'react';\r\n\r\nexport const useEntityMatchingClient = ():\r\n  | EntityMatchingClientType\r\n  | undefined => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  return useMemo(() => {\r\n    if (tridentContext?.useMockData) {\r\n      return new MockEntityMatchingClient();\r\n    }\r\n    if (\r\n      tridentContext?.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new EntityMatchingClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [tridentContext, workspaceId, artifactId, capacityId]);\r\n};\r\n","import { useMemo } from 'react';\r\nimport { useEnvironmentContext } from '../contexts/EnvironmentContext';\r\nimport { environments } from '../constants/environments';\r\n\r\nconst DEFAULT_ENVIRONMENT_NAME = 'DEFAULT';\r\n\r\n/**\r\n *\r\n * @returns function to select a specific environment setting or undefined. An object containing all settings for the current environment.\r\n */\r\nexport const useEnvironmentSettings = () => {\r\n  const { environmentName } = useEnvironmentContext();\r\n  const results = useMemo(() => {\r\n    //If an environment isn't configured, use default\r\n    const settings =\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      environments[environmentName] || environments[DEFAULT_ENVIRONMENT_NAME]!;\r\n    const keys = Object.keys(settings);\r\n    const values = Object.values(settings);\r\n    const getSetting = (key: string) => {\r\n      if (!keys.includes(key)) {\r\n        return undefined;\r\n      }\r\n      return values[keys.indexOf(key)];\r\n    };\r\n\r\n    return {\r\n      getSetting,\r\n      settings: settings,\r\n    };\r\n  }, [environmentName]);\r\n\r\n  return results;\r\n};\r\n","import { useSharedState, useTridentContext } from '@do/core';\r\nimport { useMemo } from 'react';\r\nimport { EventClient, MockEventClient } from '@do/core';\r\n\r\nexport const useEventClient = (apiReady = true) => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  return useMemo(() => {\r\n    if (tridentContext?.useMockData || !apiReady) {\r\n      return new MockEventClient();\r\n    }\r\n    if (\r\n      tridentContext?.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new EventClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [tridentContext, workspaceId, artifactId, capacityId, apiReady]);\r\n};\r\n","import { useTridentContext } from '../contexts/TridentContext';\r\n\r\n/**\r\n * Gets the extension client from the trident context\r\n * @returns the extension client from the trident context\r\n */\r\nexport const useExtensionClient = () => {\r\n  const context = useTridentContext();\r\n  return context?.extensionClient;\r\n};\r\n","import { FeatureSwitches } from '../constants/featureSwitches';\r\nimport { useFeatureSwitchContext } from '../contexts/FeatureSwitchContext';\r\n\r\n/**\r\n * Gets the value of a feature switch from settings\r\n * @param featureSwitchName the feature switch name\r\n * @returns boolean indicating the state of the feature\r\n */\r\nexport function useFeatureSwitches(\r\n  featureSwitchName: FeatureSwitches,\r\n): boolean {\r\n  const featureSwitches = useFeatureSwitchContext()?.features ?? {};\r\n  return !!featureSwitches[featureSwitchName];\r\n}\r\n","import { useSharedState, useTridentContext } from '@do/core';\r\nimport { useMemo } from 'react';\r\nimport {\r\n  HierarchyClient,\r\n  MockHierarchyClient,\r\n} from '../clients/HierarchyClient';\r\n\r\nexport const useHierarchyClient = () => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  const client = useMemo(() => {\r\n    // useMockData in jest should always have a value\r\n    if (tridentContext?.useMockData) {\r\n      return new MockHierarchyClient();\r\n    }\r\n    if (\r\n      tridentContext?.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new HierarchyClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [tridentContext, workspaceId, artifactId, capacityId]);\r\n\r\n  return client;\r\n};\r\n","import { useTridentContext } from '../contexts/TridentContext';\r\n\r\n/**\r\n * Gets the lakehouse client from the trident context\r\n * @returns the lakehouse client from the trident context\r\n */\r\nexport const useLakehouseClient = () => {\r\n  const client = useTridentContext();\r\n  return client?.lakehouseClient;\r\n};\r\n","import { getLogger, useSharedState, useTridentContext } from '@do/core';\r\nimport { useMemo } from 'react';\r\nimport {\r\n  IMappingClient,\r\n  MappingClient,\r\n  MockMappingClient,\r\n} from '../clients/MappingClient';\r\n\r\nconst MODULE_NAME = 'useMappingClient';\r\n\r\nexport const useMappingClient = () => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  const client: IMappingClient | undefined = useMemo(() => {\r\n    if (tridentContext?.useMockData) {\r\n      getLogger().debug(MODULE_NAME, 'Creating mock mapping client');\r\n      return new MockMappingClient();\r\n    }\r\n    if (\r\n      tridentContext?.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      getLogger().debug(MODULE_NAME, 'Creating mapping client');\r\n      return new MappingClient(\r\n        tridentContext?.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    getLogger().warn(MODULE_NAME, 'Unable to create mapping client', {\r\n      artifactId,\r\n      workspaceId,\r\n      capacityId,\r\n    });\r\n    return undefined;\r\n  }, [\r\n    tridentContext?.useMockData,\r\n    tridentContext?.extensionClient,\r\n    workspaceId,\r\n    artifactId,\r\n    capacityId,\r\n  ]);\r\n\r\n  return client;\r\n};\r\n","import { useSharedState, useTridentContext } from '@do/core';\r\nimport { useMemo } from 'react';\r\nimport { MockModelGenerationTwinInformationClient } from '../clients/ModelGenerationTwinInformationClient/ModelGenerationTwinInformationClient.mock';\r\n\r\nconst API_READY = false;\r\n\r\nexport const useModelGenerationTwinInformationClient = () => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  return useMemo(() => {\r\n    // useMockData in jest should always have a value\r\n    if (tridentContext?.useMockData ?? !API_READY) {\r\n      return new MockModelGenerationTwinInformationClient();\r\n    }\r\n    if (\r\n      tridentContext &&\r\n      tridentContext.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new MockModelGenerationTwinInformationClient();\r\n    }\r\n    return undefined;\r\n  }, [tridentContext, workspaceId, artifactId, capacityId]);\r\n};\r\n","import {\r\n  MockModelingJobsClient,\r\n  ModelingJobsClient,\r\n  useSharedState,\r\n  useTridentContext,\r\n} from '@do/core';\r\nimport { useMemo } from 'react';\r\n\r\nexport const useModelingJobsClient = (apiReady = true) => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  return useMemo(() => {\r\n    // useMockData in jest should always have a value\r\n    if (tridentContext?.useMockData ?? !apiReady) {\r\n      return new MockModelingJobsClient();\r\n    }\r\n    if (\r\n      tridentContext &&\r\n      tridentContext.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new ModelingJobsClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [tridentContext, workspaceId, artifactId, capacityId, apiReady]);\r\n};\r\n","import { useCallback } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {\r\n  CloseUIConfig,\r\n  CloseUIResult,\r\n  DialogUIOptions,\r\n  OpenUIResult,\r\n} from '@trident/extension-client';\r\nimport {\r\n  EXTENSION_NAMES,\r\n  getLogger,\r\n  useExtensionClient,\r\n  useSettings,\r\n  useSharedState,\r\n} from '@do/core';\r\n\r\n/**\r\n * Module name, for logging.\r\n */\r\nconst MODULE_NAME = 'useNavigation';\r\n\r\ninterface NavigationParams {\r\n  path: string;\r\n  searchParams?: URLSearchParams;\r\n}\r\ninterface DialogParams {\r\n  path: string;\r\n  searchParams?: URLSearchParams;\r\n  options: DialogUIOptions;\r\n}\r\n\r\nexport interface NavigationState {\r\n  closeDialog: (params?: CloseUIConfig) => Promise<CloseUIResult> | undefined;\r\n  navigate: (params: NavigationParams) => Promise<OpenUIResult> | undefined;\r\n  openDialog: (params: DialogParams) => Promise<OpenUIResult>;\r\n  openNewTab: (path: string) => void;\r\n  duplicateTab: () => void;\r\n}\r\n\r\n/**\r\n * hook used for doing navigation between pages.\r\n * Execute the callback and provide any necessary parameters needed for that page.\r\n */\r\nexport const useNavigation = (): NavigationState | undefined => {\r\n  // context\r\n  const extensionClient = useExtensionClient();\r\n  const { get: getSettings } = useSettings();\r\n  const sharedState = useSharedState();\r\n  const { pathname, search } = useLocation();\r\n\r\n  // callbacks\r\n  const navigate = useCallback(\r\n    ({\r\n      path,\r\n      searchParams = new URLSearchParams(search),\r\n    }: NavigationParams) => {\r\n      const currentSearchParamsString = new URLSearchParams(search).toString();\r\n\r\n      // Avoid navigation to the same route. Otherwise extensionClient will throw error\r\n      if (\r\n        pathname === path &&\r\n        searchParams.toString() === currentSearchParamsString\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      getLogger().info(`Navigating to ${path}`, MODULE_NAME, {\r\n        path,\r\n        searchParams,\r\n      });\r\n      // Checking for null in the return\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      return extensionClient!.page.open({\r\n        extensionName: EXTENSION_NAMES.DigitalOperations,\r\n        route: {\r\n          path: path,\r\n          queryParams: Object.fromEntries(searchParams),\r\n        },\r\n      });\r\n    },\r\n    [extensionClient, pathname, search],\r\n  );\r\n\r\n  const openDialog = useCallback(\r\n    ({\r\n      path,\r\n      options,\r\n      searchParams = new URLSearchParams(search),\r\n    }: DialogParams) => {\r\n      getLogger().info(`Opening dialog {params}`, MODULE_NAME, {\r\n        path,\r\n        searchParams,\r\n      });\r\n      // Checking for null in the return\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      return extensionClient!.dialog?.open({\r\n        extensionName: EXTENSION_NAMES.DigitalOperations,\r\n        route: {\r\n          path: path,\r\n          queryParams: Object.fromEntries(searchParams),\r\n        },\r\n        options: options,\r\n      });\r\n    },\r\n    [extensionClient, search],\r\n  );\r\n\r\n  const closeDialog = useCallback(\r\n    (options?: CloseUIConfig) => {\r\n      // Checking for null in the return\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      return extensionClient!.dialog?.close(options);\r\n    },\r\n    [extensionClient],\r\n  );\r\n\r\n  const openNewTab = (path: string) => {\r\n    window.open(path, '_blank');\r\n  };\r\n  const duplicateTab = useCallback(() => {\r\n    const execute = async () => {\r\n      const settings = await getSettings();\r\n      if (\r\n        !settings ||\r\n        !sharedState?.workspaceId ||\r\n        sharedState.workspaceId === ''\r\n      )\r\n        return;\r\n      return openNewTab(\r\n        `${settings.extensionHostOrigin}/groups/${sharedState.workspaceId}${pathname}`,\r\n      );\r\n      //const currentRoute = extensionClient.page.getCurrentRoute();\r\n    };\r\n    execute();\r\n  }, [getSettings, pathname, sharedState.workspaceId]);\r\n\r\n  const navigationState: NavigationState = {\r\n    closeDialog,\r\n    navigate,\r\n    openDialog,\r\n    openNewTab,\r\n    duplicateTab,\r\n  };\r\n\r\n  return extensionClient ? navigationState : undefined;\r\n};\r\n","import {\r\n  MockPredictedModelTwinInformationClient,\r\n  PredictedModelTwinInformationClient,\r\n  PredictedModelTwinInformationClientType,\r\n  useSharedState,\r\n  useTridentContext,\r\n} from '@do/core';\r\nimport { useMemo } from 'react';\r\n\r\nexport const usePredictedModelTwinInformationClient = (\r\n  apiReady = true,\r\n): PredictedModelTwinInformationClientType | undefined => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  return useMemo(() => {\r\n    // useMockData in jest should always have a value\r\n    if (tridentContext?.useMockData ?? !apiReady) {\r\n      return new MockPredictedModelTwinInformationClient();\r\n    }\r\n    if (\r\n      tridentContext &&\r\n      tridentContext.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new PredictedModelTwinInformationClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [tridentContext, workspaceId, artifactId, capacityId, apiReady]);\r\n};\r\n","import {\r\n  ExtensionClientAPI,\r\n  ExtensionSettings,\r\n} from '@trident/extension-client';\r\nimport { useCallback, useState } from 'react';\r\nimport { useExtensionClient } from './useExtensionClient';\r\n\r\n/**\r\n * Gets the settings from the extension client\r\n * @returns the object of settings from the extension client\r\n */\r\nexport function useSettings() {\r\n  const [settings, setSettings] = useState<ExtensionSettings | undefined>(\r\n    undefined,\r\n  );\r\n  const client = useExtensionClient();\r\n\r\n  const getSettings = useCallback(() => {\r\n    if (settings) {\r\n      return Promise.resolve(settings);\r\n    }\r\n\r\n    const fetchSettings = async (extensionClient: ExtensionClientAPI) => {\r\n      const data = await extensionClient?.settings.get();\r\n      setSettings(data);\r\n      return data;\r\n    };\r\n    if (client) {\r\n      return fetchSettings(client);\r\n    } else {\r\n      return Promise.reject(\r\n        'Extension client not initialized. Failed to fetch settings',\r\n      );\r\n    }\r\n  }, [client, settings]);\r\n\r\n  return {\r\n    get: getSettings,\r\n  };\r\n}\r\n","import {\r\n  MockTimeSeriesClient,\r\n  TimeSeriesClient,\r\n  useSharedState,\r\n  useTridentContext,\r\n} from '@do/core';\r\nimport { useMemo } from 'react';\r\n\r\nexport const useTimeSeriesClient = (apiReady = true) => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  return useMemo(() => {\r\n    // useMockData in jest should always have a value\r\n    if (tridentContext?.useMockData || !apiReady) {\r\n      return new MockTimeSeriesClient();\r\n    }\r\n    if (\r\n      tridentContext?.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new TimeSeriesClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [\r\n    tridentContext?.useMockData,\r\n    tridentContext?.extensionClient,\r\n    apiReady,\r\n    workspaceId,\r\n    artifactId,\r\n    capacityId,\r\n  ]);\r\n};\r\n","import { useSharedState, useTridentContext } from '@do/core';\r\nimport { useMemo } from 'react';\r\nimport {\r\n  MockTwinClient,\r\n  TwinClient,\r\n  TwinClientType,\r\n} from '../clients/TwinClient';\r\n\r\nexport const useTwinClient = (apiReady = true): TwinClientType | undefined => {\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  const tridentContext = useTridentContext();\r\n\r\n  return useMemo(() => {\r\n    // useMockData in jest should always have a value\r\n    if (tridentContext?.useMockData || !apiReady) {\r\n      return new MockTwinClient();\r\n    }\r\n    if (\r\n      tridentContext?.extensionClient &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new TwinClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [\r\n    tridentContext?.useMockData,\r\n    tridentContext?.extensionClient,\r\n    apiReady,\r\n    workspaceId,\r\n    artifactId,\r\n    capacityId,\r\n  ]);\r\n};\r\n","import {\r\n  TwinDetailsClient,\r\n  useSharedState,\r\n  useTridentContext,\r\n  MockTwinDetailsClient,\r\n  TwinDetailsClientType,\r\n} from '@do/core';\r\nimport { useMemo } from 'react';\r\n\r\nexport const useTwinDetailsClient = (): TwinDetailsClientType | undefined => {\r\n  const tridentContext = useTridentContext();\r\n  const { artifactId, workspaceId, capacityId } = useSharedState();\r\n  return useMemo(() => {\r\n    // useMockData in jest should always have a value\r\n    if (tridentContext?.useMockData) {\r\n      return new MockTwinDetailsClient();\r\n    }\r\n    if (\r\n      tridentContext &&\r\n      !tridentContext.useMockData &&\r\n      workspaceId &&\r\n      artifactId &&\r\n      capacityId\r\n    ) {\r\n      return new TwinDetailsClient(\r\n        tridentContext.extensionClient,\r\n        workspaceId,\r\n        artifactId,\r\n        capacityId,\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [artifactId, capacityId, tridentContext, workspaceId]);\r\n};\r\n","import { useCallback, useState } from 'react';\r\nimport { useExtensionClient } from './useExtensionClient';\r\nimport {\r\n  ServiceClientConfig,\r\n  WorkspaceClient,\r\n} from '@trident/data-access-artifact';\r\nimport { useSettings } from './useSettings';\r\n\r\n/**\r\n * Gets an artifact client for interacting with Artifacts in the Trident Shared platform\r\n * @returns an instance of the artifact client\r\n */\r\nexport const useWorkspaceClient = () => {\r\n  // state\r\n  const [workspaceClient, setWorkspaceClient] = useState<\r\n    WorkspaceClient | undefined\r\n  >(undefined);\r\n\r\n  // hooks\r\n  const extensionClient = useExtensionClient();\r\n  const getSettings = useSettings();\r\n\r\n  const getInstance = useCallback(() => {\r\n    if (workspaceClient) {\r\n      return Promise.resolve(workspaceClient);\r\n    }\r\n\r\n    const execute = async () => {\r\n      const values = await getSettings.get();\r\n      const serviceConfig: ServiceClientConfig = {\r\n        baseUrl: values.sharedBackendUri,\r\n        extensionHostOrigin: values.extensionHostOrigin,\r\n        tokenProvider: () => {\r\n          if (extensionClient) {\r\n            return extensionClient.auth.getAccessToken().then(({ token }) => {\r\n              return token;\r\n            });\r\n          } else {\r\n            return Promise.reject('Extension client not initialized');\r\n          }\r\n        },\r\n      };\r\n      const client = new WorkspaceClient(serviceConfig);\r\n      setWorkspaceClient(client);\r\n      return client;\r\n    };\r\n    return execute();\r\n  }, [extensionClient, getSettings, workspaceClient]);\r\n\r\n  return { getClient: getInstance };\r\n};\r\n","export * from './clients';\r\nexport * from './constants';\r\nexport * from './contexts';\r\nexport * from './hooks';\r\nexport * from './models';\r\nexport * from './telemetry';\r\nexport * from './utilities';\r\nexport {\r\n  ArtifactClient,\r\n  ListArtifactResult,\r\n  ListWorkspaceResult,\r\n  Workspace,\r\n  WorkspaceClient,\r\n} from '@trident/data-access-artifact';\r\n","export interface ILakehouseRequestError {\r\n  errorCategory: string;\r\n  errorCode: string;\r\n  errorMessage: string;\r\n  errorSource: number;\r\n  isTransiet: boolean;\r\n}\r\n","export type CallState = 'NotCalled' | 'Loading' | 'Complete' | 'Error';\r\nexport type DataState<T, E = string> =\r\n  | {\r\n      state: 'Complete';\r\n      data: T;\r\n      error?: E;\r\n    }\r\n  | {\r\n      state: 'NotCalled' | 'Loading';\r\n      data?: never;\r\n      error?: never;\r\n    }\r\n  | {\r\n      state: 'Error';\r\n      data?: never;\r\n      error: E;\r\n    };\r\n","import { EnvironmentName } from '@trident/extension-client';\r\n\r\nexport type ImdxEnvironmentName =\r\n  | EnvironmentName\r\n  | '__internal_Standalone'\r\n  | 'UnitTest';\r\n/**\r\n * Helper function check if is non-prod environment given name\r\n * @param env environment name\r\n * @returns boolean true if it is\r\n */\r\nexport function isNonProdEnvironment(env: ImdxEnvironmentName): boolean {\r\n  return ['Onebox', 'INT', 'TEST', 'DAILY', '__internal_Standalone'].includes(\r\n    env,\r\n  );\r\n}\r\n","export * from './LakehouseTypes';\r\nexport * from './Types';\r\nexport * from './pathItem';\r\nexport * from './responses';\r\nexport * from './requests';\r\nexport * from './routeParams';\r\n","export interface IPathItem {\r\n  id: string;\r\n  name: string;\r\n}\r\n","import { DataResponse, ResponseState } from './responses';\r\n\r\nexport type RequestState = 'uncalled' | 'pending' | ResponseState;\r\ninterface BaseRequest {\r\n  state: RequestState;\r\n}\r\n\r\nexport interface UncalledDataRequest extends BaseRequest {\r\n  state: 'uncalled';\r\n}\r\n\r\nexport interface PendingDataRequest extends BaseRequest {\r\n  state: 'pending';\r\n}\r\n\r\n/**\r\n * model for representing a request for data in state.\r\n * @example { targetTableColumns: Map<string, DataRequest<ITableColumn[]>>; } is a map of keys that each point to a different request for data that is shaped like a column\r\n */\r\nexport type DataRequest<T> =\r\n  | UncalledDataRequest\r\n  | PendingDataRequest\r\n  | DataResponse<T>;\r\n","export type ResponseState = 'success' | 'error';\r\ninterface BaseDataResponse {\r\n  state: ResponseState;\r\n}\r\n\r\n/** a successful response that contains data */\r\nexport interface SuccessDataResponse<T> extends BaseDataResponse {\r\n  state: 'success';\r\n  data: T;\r\n}\r\n\r\n/** an error response that contains the error details */\r\nexport interface ErrorDataResponse extends BaseDataResponse {\r\n  state: 'error';\r\n  errorMessage: string;\r\n  errorCode: string;\r\n}\r\n\r\n/**\r\n * a response to a data fetch request that either contains the data of the call or the error message\r\n * @example getTargetTables(): Promise<Response<GetTargetTablesData>>;\r\n */\r\nexport type DataResponse<T> = SuccessDataResponse<T> | ErrorDataResponse;\r\n","import { AppNames } from '../constants';\r\n\r\nexport type IAppBaseRouteProps = {\r\n  path: string;\r\n  artifactId: string;\r\n  app: AppNames;\r\n  segments: string[];\r\n};\r\n","import { ValidatedRegexp } from './types';\r\nimport { tokenize } from './tokenizer';\r\nimport { validate as innerValidate } from './validator';\r\nimport { translate as innerTranslate } from './translator';\r\n\r\nexport { ValidatedRegexp, RegexpValidationError } from './types';\r\n\r\nexport const validate = (regexp: string): ValidatedRegexp => {\r\n  try {\r\n    const regexpObj = new RegExp(regexp);\r\n    regexpObj.test('');\r\n  } catch (e) {\r\n    if (e instanceof SyntaxError) {\r\n      return {\r\n        isValid: false,\r\n        errors: [\r\n          {\r\n            position: 0,\r\n            message: e.message,\r\n          },\r\n        ],\r\n        tokens: {\r\n          simpleTokens: [],\r\n          complexTokens: [],\r\n        },\r\n        regex: regexp,\r\n      };\r\n    }\r\n    throw e;\r\n  }\r\n\r\n  const { simpleTokens, complexTokens } = tokenize(regexp);\r\n  const errors = [\r\n    ...innerValidate(regexp, simpleTokens),\r\n    ...innerValidate(regexp, complexTokens),\r\n  ].sort((a, b) => a.position - b.position);\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n    tokens: {\r\n      simpleTokens,\r\n      complexTokens,\r\n    },\r\n    regex: regexp,\r\n  };\r\n};\r\n\r\nexport const translate = (regexp: ValidatedRegexp): string => {\r\n  if (!regexp.isValid) {\r\n    throw new Error('The provided regular expression is not valid');\r\n  }\r\n\r\n  const translatedTokens = innerTranslate(regexp);\r\n\r\n  return translatedTokens.map((token) => token.value).join('');\r\n};\r\n","import { partial } from 'lodash-es';\r\nimport { LanguageRule, Token, TokenKind } from './types';\r\nimport { tokenizeCharacterClasses } from './tokenizer';\r\n\r\nexport const getTokens = (\r\n  kind: TokenKind,\r\n  pattern: RegExp,\r\n  input: string,\r\n): [Token[], string] => {\r\n  const tokens: Token[] = [];\r\n  let result: RegExpExecArray | null;\r\n  const inputCopy = [...input];\r\n  while ((result = pattern.exec(input))) {\r\n    tokens.push({\r\n      kind,\r\n      value: result[0],\r\n      position: result.index,\r\n    });\r\n\r\n    inputCopy.fill(';', result.index, result.index + result[0].length);\r\n  }\r\n\r\n  return [tokens, inputCopy.join('')];\r\n};\r\n\r\n// this rule deals with character classes,\r\n// characters inside a character class take a different meaning than characters outside character classes\r\nexport const characterClassRule = (\r\n  input: string,\r\n  extractedTokens: Token[],\r\n): [Token[], string] => {\r\n  extractedTokens = extractedTokens.sort((a, b) => a.position - b.position);\r\n\r\n  const charClasses = tokenizeCharacterClasses(extractedTokens, input);\r\n  const inputCopy = [...input];\r\n\r\n  // there might be CharClassStart and/or CloseBracket tokens that are not delimiters of a char class,\r\n  // undo the recognition of those tokens so they can later be qualified as Text\r\n  extractedTokens\r\n    .map((token, index) => ({ token, index }))\r\n    .filter(\r\n      ({ token }) =>\r\n        (token.kind === TokenKind.CharClassStart ||\r\n          token.kind === TokenKind.CloseBracket) &&\r\n        !charClasses.some(\r\n          (charClass) =>\r\n            charClass.position === token.position ||\r\n            charClass.position + charClass.value.length - 1 === token.position,\r\n        ),\r\n    )\r\n    .reverse() // removing elements from extractedTokens, proceed in reverse order to avoid index shifting\r\n    .forEach(({ token, index }) => {\r\n      inputCopy[token.position] = token.value;\r\n      extractedTokens.splice(index, 1);\r\n    });\r\n\r\n  // convert the remaining non-tokenized text in each character class into Text tokens\r\n  const tokens: Token[] = [];\r\n  for (const charClass of charClasses) {\r\n    if (charClass.subTokens !== undefined) {\r\n      const sortedSubTokens = charClass.subTokens\r\n        .sort((a, b) => a.position - b.position)\r\n        .filter(\r\n          // filter needed also here, getting rid of CharClassStart and CloseBracket tokens inside the char class, those should be Text tokens\r\n          (token, index, self) =>\r\n            index === 0 ||\r\n            index === self.length - 1 ||\r\n            (token.kind !== TokenKind.CharClassStart &&\r\n              token.kind !== TokenKind.CloseBracket),\r\n        );\r\n\r\n      sortedSubTokens\r\n        .map((subToken, index) => [\r\n          subToken.position + subToken.value.length,\r\n          index + 1 < sortedSubTokens.length\r\n            ? sortedSubTokens[index + 1].position\r\n            : charClass.position + charClass.value.length,\r\n        ])\r\n        .filter(([start, end]) => start < end)\r\n        .forEach(([start, end]) => {\r\n          const content = inputCopy.slice(start, end).join('');\r\n          if (content.length > 0) {\r\n            tokens.push({\r\n              kind: TokenKind.Text,\r\n              value: content,\r\n              position: start,\r\n            });\r\n\r\n            inputCopy.fill(';', start, end);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  return [tokens, inputCopy.join('')];\r\n};\r\n\r\n// the definition of the language to tokenize, the order of the rules is important,\r\n// the first rule that matches a token will be the one to tokenize it\r\nexport const language: LanguageRule[] = [\r\n  {\r\n    getAll: partial(getTokens, TokenKind.HelperChar, /;/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.BackslashEscape, /\\\\\\\\/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.OpenSquareBracketEscape, /\\\\\\[/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.CharClassStart, /\\[/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.CloseBracketEscape, /\\\\\\]/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.CloseBracket, /\\]/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.OpenParenEscape, /\\\\\\(/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.CloseParenEscape, /\\\\\\)/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.OpenCurlyBraceEscape, /\\\\\\{/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.CloseCurlyBraceEscape, /\\\\\\}/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.StarEscape, /\\\\\\*/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.PlusEscape, /\\\\\\+/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.QuestionMarkEscape, /\\\\\\?/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.AnyCharEscape, /\\\\\\./g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.CaretEscape, /\\\\\\^/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.DollarEscape, /\\\\\\$/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.PipeEscape, /\\\\\\|/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.ForwardSlashEscape, /\\\\\\//g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.FormFeed, /\\\\f/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.NewLine, /\\\\n/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.CarriageReturn, /\\\\r/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.Tab, /\\\\t/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.VerticalTab, /\\\\v/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.ControlCharEscape, /\\\\c[A-Za-z]/g),\r\n  },\r\n  {\r\n    getAll: partial(\r\n      getTokens,\r\n      TokenKind.HexadecimalEscape,\r\n      /\\\\x[0-9a-fA-F]{2}/g,\r\n    ),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.UnicodeEscape, /\\\\u[0-9a-fA-F]{4}/g),\r\n  },\r\n  // {\r\n  //   getAll: partial(getTokens, TokenKind.OctalEscape, /\\\\[0-7]{1,3}/g),\r\n  // },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.WhiteSpaceClass, /\\\\s/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.NonWhiteSpaceClass, /\\\\S/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.DigitClass, /\\\\d/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.NonDigitClass, /\\\\D/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.WordClass, /\\\\w/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.NonWordClass, /\\\\W/g),\r\n  },\r\n  {\r\n    // NOTE: \\b inside a char class is not a word boundary but a backspace character, we want it here for our purpose of finding identity escapes though\r\n    getAll: partial(getTokens, TokenKind.WordBoundary, /\\\\b/g),\r\n  },\r\n  {\r\n    getAll: characterClassRule,\r\n  },\r\n  {\r\n    // \\B in a char class is an identity escape, same as B, by placing it here we can recognize it as a non-word boundary only outside char classes\r\n    getAll: partial(getTokens, TokenKind.NonWordBoundary, /\\\\B/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.LookAheadStart, /\\(\\?=/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.NegLookAheadStart, /\\(\\?!/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.LookBehindStart, /\\(\\?<=/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.NegLookBehindStart, /\\(\\?<!/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.NonCaptureGroupStart, /\\(\\?:/g),\r\n  },\r\n  {\r\n    getAll: partial(\r\n      getTokens,\r\n      TokenKind.NamedCaptureGroupStart,\r\n      /\\(\\?<[^>]+>/g,\r\n    ),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.CaptureGroupStart, /\\(/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.CloseParen, /\\)/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.NamedBackReference, /\\\\k<[^>]+>/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.BackReference, /\\\\[1-9]\\d*/g),\r\n  },\r\n  {\r\n    getAll: partial(\r\n      getTokens,\r\n      TokenKind.LazyVarRangeQuantifier,\r\n      /\\{\\d+(?:,(?:\\d+)?)?}\\?/g,\r\n    ),\r\n  },\r\n  {\r\n    getAll: partial(\r\n      getTokens,\r\n      TokenKind.GreedyVarRangeQuantifier,\r\n      /\\{\\d+(?:,(?:\\d+)?)?}/g,\r\n    ),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.LazyZeroOrMoreQuantifier, /\\*\\?/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.GreedyZeroOrMoreQuantifier, /\\*/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.LazyOneOrMoreQuantifier, /\\+\\?/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.GreedyOneOrMoreQuantifier, /\\+/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.LazyZeroOrOneQuantifier, /\\?\\?/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.GreedyZeroOrOneQuantifier, /\\?/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.DotClass, /\\./g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.StartOfString, /\\^/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.EndOfString, /\\$/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.Alternation, /\\|/g),\r\n  },\r\n  {\r\n    getAll: partial(getTokens, TokenKind.Text, /[^;]+/g),\r\n  },\r\n];\r\n","import { language } from './language';\r\nimport { LanguageRule, Token, TokenKind } from './types';\r\n\r\nexport const tokenizeSimpleTokens = (\r\n  input: string,\r\n  languageRules: LanguageRule[],\r\n): Token[] => {\r\n  const tokens: Token[] = [];\r\n  for (const languageRule of languageRules) {\r\n    const [partialTokens, newInput] = languageRule.getAll(input, tokens);\r\n    tokens.push(...partialTokens);\r\n    input = newInput;\r\n  }\r\n  return tokens.sort((a, b) => a.position - b.position);\r\n};\r\n\r\nexport const tokenizeCharacterClasses = (\r\n  tokenizeResults: Token[],\r\n  input: string,\r\n): Token[] => {\r\n  // every opening bracket must have a matching closing bracket unless it belongs to a char class - regex engine enforce this\r\n  // a closing bracket closes the least recent opening bracket that has not been closed (the farther one to the left)\r\n  // any opening parenthesis that has not been closed is considered one more character in the character class\r\n  const charClassTokens: Token[] = [];\r\n  for (let index = 0; index < tokenizeResults.length; index++) {\r\n    const [token, tokenIndex] = [tokenizeResults[index], index];\r\n    if (token.kind === TokenKind.CharClassStart) {\r\n      let closetBracketToken: Token = token;\r\n      while (\r\n        closetBracketToken.kind !== TokenKind.CloseBracket &&\r\n        ++index < tokenizeResults.length\r\n      ) {\r\n        closetBracketToken = tokenizeResults[index];\r\n      }\r\n      if (closetBracketToken.kind === TokenKind.CloseBracket) {\r\n        charClassTokens.push({\r\n          kind: TokenKind.CharClassContent,\r\n          value: input.slice(token.position, closetBracketToken.position + 1),\r\n          position: token.position,\r\n          subTokens: tokenizeResults.slice(tokenIndex, index + 1),\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return charClassTokens;\r\n};\r\n\r\nconst isOpenParenthesisSimpleToken = (tokenKind: TokenKind): boolean => {\r\n  return [\r\n    TokenKind.LookAheadStart,\r\n    TokenKind.NegLookAheadStart,\r\n    TokenKind.LookBehindStart,\r\n    TokenKind.NegLookBehindStart,\r\n    TokenKind.CaptureGroupStart,\r\n    TokenKind.NonCaptureGroupStart,\r\n    TokenKind.NamedCaptureGroupStart,\r\n  ].includes(tokenKind);\r\n};\r\n\r\nconst toOpenParenthesisComplexTokenType = (\r\n  openParenthesisSimpleTokenKind: TokenKind,\r\n): TokenKind => {\r\n  const openParenthesisSimpleTokenKinds: { [k in TokenKind]?: TokenKind } = {\r\n    [TokenKind.LookAheadStart]: TokenKind.LookAheadContent,\r\n    [TokenKind.NegLookAheadStart]: TokenKind.NegLookAheadContent,\r\n    [TokenKind.LookBehindStart]: TokenKind.LookBehindContent,\r\n    [TokenKind.NegLookBehindStart]: TokenKind.NegLookBehindContent,\r\n    [TokenKind.CaptureGroupStart]: TokenKind.CaptureGroupContent,\r\n    [TokenKind.NonCaptureGroupStart]: TokenKind.NonCaptureGroupContent,\r\n    [TokenKind.NamedCaptureGroupStart]: TokenKind.NamedCaptureGroupContent,\r\n  };\r\n\r\n  const result =\r\n    openParenthesisSimpleTokenKinds[openParenthesisSimpleTokenKind];\r\n\r\n  if (result) {\r\n    return result;\r\n  }\r\n\r\n  throw new Error(\r\n    'The provided token type does not represent an open parenthesis starting token',\r\n  );\r\n};\r\n\r\nexport const tokenizeGroupAndLookAroundConstructs = (\r\n  input: string,\r\n  tokenizeResults: Token[],\r\n): Token[] => {\r\n  const openParenTokens: [Token, number][] = [];\r\n  const complexTokens: Token[] = [];\r\n  for (let index = 0; index < tokenizeResults.length; index++) {\r\n    // match opening and closing parenthesis, assumes that they are balanced as regex engine enforce this\r\n    const token = tokenizeResults[index];\r\n    if (isOpenParenthesisSimpleToken(token.kind)) {\r\n      openParenTokens.push([token, index]);\r\n    } else {\r\n      if (token.kind === TokenKind.CloseParen) {\r\n        const indexedOpenParen = openParenTokens.pop();\r\n        // should always enter the next if given we rely on valid regex. If not, it's a bug in the regex engine\r\n        if (indexedOpenParen) {\r\n          const [openParen, openParenIndex] = indexedOpenParen;\r\n          complexTokens.push({\r\n            kind: toOpenParenthesisComplexTokenType(openParen.kind),\r\n            value: input.slice(openParen.position, token.position + 1),\r\n            position: openParen.position,\r\n            subTokens: tokenizeResults.slice(openParenIndex, index + 1),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return complexTokens;\r\n};\r\n\r\nexport const tokenizeComplexTokens = (\r\n  input: string,\r\n  simpleTokensResult: Token[],\r\n): Token[] => {\r\n  const charClasses = tokenizeCharacterClasses(simpleTokensResult, input);\r\n  const groupAndLookAroundConstructs = tokenizeGroupAndLookAroundConstructs(\r\n    input,\r\n    simpleTokensResult,\r\n  );\r\n\r\n  return [...charClasses, ...groupAndLookAroundConstructs].sort(\r\n    (a, b) => a.position - b.position,\r\n  );\r\n};\r\n\r\nexport const tokenize = (\r\n  input: string,\r\n): { simpleTokens: Token[]; complexTokens: Token[] } => {\r\n  if (!input) {\r\n    return {\r\n      simpleTokens: [],\r\n      complexTokens: [],\r\n    };\r\n  }\r\n\r\n  const simpleTokens = tokenizeSimpleTokens(input, language);\r\n  const complexTokens = tokenizeComplexTokens(input, simpleTokens);\r\n\r\n  return {\r\n    simpleTokens,\r\n    complexTokens,\r\n  };\r\n};\r\n","import { Token, TokenKind, TranslationRules, ValidatedRegexp } from './types';\r\n\r\n// Escape sequences that are not one of the standard become identity escapes in JS: they represent the character\r\n// that follows the backslash. For example, \\a represents the character a. This behavior limits the ability\r\n// to introduce new escape sequences without causing backward compatibility issues in JS; in Java regexp engine, it produces an error.\r\n// Support of the next corner cases is pending & the constructs are deprecated in JS (JAVA will probably throw or produce a different result):\r\n// /[\\c0]/.test(\"\\x10\"); // true\r\n// /[\\c_]/.test(\"\\x1f\"); // true\r\n// /[\\c*]/.test(\"\\\\\"); // true\r\n// /\\c/.test(\"\\\\c\"); // true\r\n// /\\c0/.test(\"\\\\c0\"); // true (the \\c0 syntax is only supported in character classes)\r\nconst translateTextToken = (token: Token): Token => {\r\n  return {\r\n    ...token,\r\n    value: token.value.replace(/\\\\/g, ''),\r\n  };\r\n};\r\n\r\n// translates \\v to \\x0B, in Java it's a shorthand class, in JS it's just vertical tab\r\nconst translateVerticalTab = (token: Token): Token => {\r\n  return {\r\n    ...token,\r\n    value: '\\x0B',\r\n  };\r\n};\r\n\r\n// translates shorthand class \\s, in JS it also includes unicode whitespaces\r\nconst translateWhiteSpaceClass = (\r\n  token: Token,\r\n  regexp: ValidatedRegexp,\r\n): Token => {\r\n  const charClassContainer = regexp.tokens.complexTokens\r\n    .filter((ct) => ct.kind === TokenKind.CharClassContent)\r\n    .find((ct) => ct.subTokens?.some((t) => t.position === token.position));\r\n\r\n  // check if the whitespace shorthand class token \\s belongs to a character class\r\n  if (charClassContainer !== undefined) {\r\n    const subClass = charClassContainer.subTokens\r\n      ?.filter((t) => t.position !== token.position) // remove the whitespace shorthand class\r\n      .join('');\r\n    // should always enter this if block\r\n    if (subClass !== undefined) {\r\n      const subclassMatches = [\r\n        ...'\\ufeff\\u2028\\u2029\\u0020\\u3000\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2008\\u2009\\u200A\\u205F\\u00A0\\u2007\\u202F'.matchAll(\r\n          new RegExp(subClass, 'g'),\r\n        ),\r\n      ].length;\r\n\r\n      return (charClassContainer.value.startsWith('[^') &&\r\n        subclassMatches !== 0) ||\r\n        (!charClassContainer.value.startsWith('[^') && subclassMatches !== 20)\r\n        ? {\r\n            ...token,\r\n            value:\r\n              '\\\\s\\ufeff\\u2028\\u2029\\u0020\\u3000\\u1680\\u2000-\\u2006\\u2008-\\u200A\\u205F\\u00A0\\u2007\\u202F',\r\n          }\r\n        : token;\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...token,\r\n    value:\r\n      '[\\\\s\\ufeff\\u2028\\u2029\\u0020\\u3000\\u1680\\u2000-\\u2006\\u2008-\\u200A\\u205F\\u00A0\\u2007\\u202F]',\r\n  };\r\n};\r\n\r\n// translates shorthand class \\S, in JS also excludes unicode whitespaces\r\nconst translateNonWhiteSpaceClass = (\r\n  token: Token,\r\n  regexp: ValidatedRegexp,\r\n): Token => {\r\n  // NOTE: When non-whitespace class \\S appears inside a character class,\r\n  // be it negated or not (ex.[\\S ...] or [^\\S ...]). It is not straightforward\r\n  // to determine the correct translation because it is not possible to exclude the\r\n  // unicode whitespaces from the non-negated class or include them in the negated class.\r\n  // We would need to translate the whole class (find the complement) which is a complex problem.\r\n  // For now we will not support this corner-case, [\\S ...] will recognize non whitespace chars in JS but also\r\n  // the unicode whitespaces in JAVA. [^\\S ...] will recognize whitespaces in JS, but not the unicode\r\n  // whitespaces in JAVA.\r\n  const charClassContainer = regexp.tokens.complexTokens\r\n    .filter((ct) => ct.kind === TokenKind.CharClassContent)\r\n    .find((ct) => ct.subTokens?.some((t) => t.position === token.position));\r\n\r\n  if (charClassContainer !== undefined) {\r\n    return token;\r\n  }\r\n\r\n  return {\r\n    ...token,\r\n    value:\r\n      '[^\\\\s\\ufeff\\u2028\\u2029\\u0020\\u3000\\u1680\\u2000-\\u2006\\u2008-\\u200A\\u205F\\u00A0\\u2007\\u202F]',\r\n  };\r\n};\r\n\r\n// translates control character escape sequences, ex. \\ca, in JAVA only \\cA is supported\r\nconst translateControlCharEscape = (token: Token): Token => {\r\n  return {\r\n    ...token,\r\n    value: token.value.slice(0, 2) + token.value.slice(2).toUpperCase(),\r\n  };\r\n};\r\n\r\nexport const TranslateRules: TranslationRules = {\r\n  [TokenKind.Text]: translateTextToken,\r\n  [TokenKind.VerticalTab]: translateVerticalTab,\r\n  [TokenKind.WhiteSpaceClass]: translateWhiteSpaceClass,\r\n  [TokenKind.NonWhiteSpaceClass]: translateNonWhiteSpaceClass,\r\n  [TokenKind.ControlCharEscape]: translateControlCharEscape,\r\n};\r\n\r\nexport const translate = (\r\n  regexp: ValidatedRegexp,\r\n  translationRules?: TranslationRules,\r\n): Token[] => {\r\n  if (!regexp.isValid) {\r\n    throw new SyntaxError('Cannot translate an invalid regexp');\r\n  }\r\n\r\n  const rules = translationRules ?? TranslateRules;\r\n  const tokens = regexp.tokens.simpleTokens;\r\n  return tokens.map((token) => {\r\n    const translationRule = rules[token.kind];\r\n    if (translationRule !== undefined) {\r\n      return translationRule(token, regexp);\r\n    }\r\n    return token;\r\n  });\r\n};\r\n","export type Token = {\r\n  kind: TokenKind;\r\n  value: string;\r\n  position: number;\r\n  subTokens?: Token[]; // for complex tokens\r\n};\r\n\r\nexport type LanguageRule = {\r\n  /**\r\n   * Definition of a rule of the language as a function.\r\n   *\r\n   * @param input - The string to tokenize.\r\n   * @param extractedTokens - The tokens already extracted.\r\n   * @returns The new tokens extracted from the input and the modified input to use going forward.\r\n   */\r\n  getAll: (input: string, extractedTokens: Token[]) => [Token[], string];\r\n};\r\n\r\nexport type RegexpValidationError = {\r\n  position: number;\r\n  message: string;\r\n};\r\n\r\nexport type ValidationRule = {\r\n  /**\r\n   * Definition of a rule to validate a regexp token.\r\n   *\r\n   * @param regexp - The JS regexp string.\r\n   * @param token - The token token to be validated.\r\n   * @returns A list of the errors resulting from the validation.\r\n   */\r\n  validate: (regexp: string, token: Token) => RegexpValidationError[];\r\n};\r\n\r\nexport type ValidatedRegexp = {\r\n  tokens: {\r\n    simpleTokens: Token[];\r\n    complexTokens: Token[];\r\n  };\r\n  errors: RegexpValidationError[];\r\n  isValid: boolean;\r\n  regex: string;\r\n};\r\n\r\nexport type TranslationRules = {\r\n  [k in TokenKind]?: (token: Token, regexp: ValidatedRegexp) => Token;\r\n};\r\n\r\nexport enum TokenKind {\r\n  //---------------------------------------------------------------------------------\r\n  // Simple token rules will represent the most basic building blocks of the language\r\n  //---------------------------------------------------------------------------------\r\n\r\n  //-----Helper Char-----\r\n  HelperChar, // semicolon ;\r\n\r\n  //-----LookAround Constructs-----\r\n  LookAheadStart, // (?=\r\n  NegLookAheadStart, // (?!\r\n  LookBehindStart, // (?<= -- JAVA: fixed length regex inside the look behind, JS: variable length\r\n  NegLookBehindStart, // (?<! -- JAVA: fixed length regex inside the look behind, JS: variable length\r\n\r\n  //-----Grouping Constructs-----\r\n  NonCaptureGroupStart, // (?:\r\n  NamedCaptureGroupStart, // (?<name>regex) -- JAVA: name start with a-zA-Z followed by a-zA-Z0-9, JS: name is a valid JS identifier (more permisive)\r\n  CaptureGroupStart, // (\r\n  CloseParen, // )\r\n  NamedBackReference, // \\k<name> -- JAVA: name start with a-zA-Z followed by a-zA-Z0-9, JS: name is a valid JS identifier (more permisive)\r\n  BackReference, // \\1\r\n\r\n  //-----Character Class Constructs-----\r\n  CharClassStart, // [\r\n  CloseBracket, // ] -- JAVA & JS: allowed without escape\r\n\r\n  //-----Quantifier Constructs-----\r\n  LazyVarRangeQuantifier, // {x,y}? or {x,}? or {x}?\r\n  GreedyVarRangeQuantifier, // {x,y} or {x,} or {x}\r\n  LazyZeroOrMoreQuantifier, // *?\r\n  GreedyZeroOrMoreQuantifier, // *\r\n  LazyOneOrMoreQuantifier, // +?\r\n  GreedyOneOrMoreQuantifier, // +\r\n  LazyZeroOrOneQuantifier, // ??\r\n  GreedyZeroOrOneQuantifier, // ?\r\n\r\n  //-----Shorthand Char Class Constructs-----\r\n  DotClass, // .\r\n  WhiteSpaceClass, // \\s -- JAVA: [ \\t\\n\\x0B\\f\\r], JS: the same + all other Unicode whitespace [ \\t\\n\\x0B\\f\\r\\v\\ufeff\\u2028\\u2029] and [\\u0020\\u3000\\u1680\\u2000-\\u2006\\u2008-\\u200A\\u205F\\u00A0\\u2007\\u202F]\r\n  NonWhiteSpaceClass, // \\S\r\n  DigitClass, // \\d\r\n  NonDigitClass, // \\D\r\n  WordClass, // \\w -- JAVA: [a-zA-Z0-9_], JS: same\r\n  NonWordClass, // \\W\r\n\r\n  //-----Boundary Matcher Constructs-----\r\n  WordBoundary, // \\b\r\n  NonWordBoundary, // \\B\r\n  StartOfString, // ^\r\n  EndOfString, // $\r\n\r\n  //-----Character Escape Constructs-----\r\n  FormFeed, // \\f\r\n  NewLine, // \\n\r\n  CarriageReturn, // \\r\r\n  Tab, // \\t\r\n  VerticalTab, // \\v -- JS: the vertical tab character \\u000B or \\x0B or \\013 or just \\v, JAVA: it's a shorthand character class recognizing [\\n\\x0B\\f\\r\\x85\\u2028\\u2029] and \\V is the negation of that\r\n  ControlCharEscape, // \\cX X is a letter [A-Za-z] -- JAVA supports only upper case letters after the \\c\r\n  HexadecimalEscape, // \\xhh -- h is a hexadecimal digit\r\n  UnicodeEscape, // \\uhhhh -- h is a hexadecimal digit\r\n  // \\xxx -- x is an octal digit - this would also include the Null character \\0 which is not an octal digit. TODO: pending to recognize this\r\n  // Backreferences that do not refer to an existing capturing group become legacy octal escapes.\r\n  OctalEscape,\r\n  CaretEscape, // \\^\r\n  DollarEscape, // \\$\r\n  BackslashEscape, // \\\\\r\n  AnyCharEscape, // \\.\r\n  StarEscape, // \\*\r\n  PlusEscape, // \\+\r\n  QuestionMarkEscape, // \\?\r\n  OpenParenEscape, // \\( -- needs to escape and match closing unless in char class\r\n  CloseParenEscape, // \\) -- needs to escape or match opening unless in char class\r\n  OpenSquareBracketEscape, // \\[ -- JAVA and JS do not support non-escaped square brackets unless in char class, there are special cases\r\n  CloseBracketEscape, // \\]\r\n  OpenCurlyBraceEscape, // \\{ -- JAVA does not support non-escaped curly braces unless in quantifier, JS does\r\n  CloseCurlyBraceEscape, // \\}\r\n  PipeEscape, // \\|\r\n  ForwardSlashEscape, // \\/ -- Needs special treatment in JS but not escape needed in JAVA\r\n\r\n  //-----Alternation Construct-----\r\n  Alternation, // |\r\n\r\n  //-----Literal Characters-----\r\n  Text,\r\n\r\n  //---------------------------------------------------------------------------------\r\n  // Complex token rules will represent more complex constructs that are built from the simple tokens,\r\n  // We don't need syntactical or semantical analysis, that is expected to be done by the JS regex engine\r\n  // The regexps are supposed to be syntactically and semantically correct, we want the ability to validate\r\n  // these more complex constructs, that validation is the only purpose of these tokens\r\n  //---------------------------------------------------------------------------------\r\n\r\n  //-----Complex Tokens-----\r\n  LookAheadContent,\r\n  NegLookAheadContent,\r\n  LookBehindContent,\r\n  NegLookBehindContent,\r\n  NonCaptureGroupContent,\r\n  NamedCaptureGroupContent,\r\n  CaptureGroupContent,\r\n  CharClassContent,\r\n}\r\n","import {\r\n  RegexpValidationError,\r\n  Token,\r\n  TokenKind,\r\n  ValidationRule,\r\n} from './types';\r\n\r\n// A character class can't contain && or be [] or be [^]\r\nconst validateCharacterClass = (\r\n  regexp: string,\r\n  token: Token,\r\n): RegexpValidationError[] => {\r\n  const errors: RegexpValidationError[] = [];\r\n  if (token.kind === TokenKind.CharClassContent) {\r\n    if (token.subTokens !== undefined) {\r\n      errors.push(\r\n        ...token.subTokens\r\n          .filter((token) => token.kind === TokenKind.Text)\r\n          .flatMap((token) =>\r\n            [...token.value.matchAll(/&&/g)].map((match) => ({\r\n              position: (match.index ?? 0) + token.position,\r\n              message: `Invalid regular expression: /${regexp}/: && is not supported inside a character class`,\r\n            })),\r\n          ),\r\n      );\r\n    }\r\n\r\n    if (token.value === '[]' || token.value === '[^]') {\r\n      errors.push({\r\n        position: token.position,\r\n        message: `Invalid regular expression: /${regexp}/: Character class ${token.value} is not supported`,\r\n      });\r\n    }\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\n// A text token can't contain unescaped opening brackets [ or braces {\r\nconst validateTextToken = (\r\n  regexp: string,\r\n  token: Token,\r\n): RegexpValidationError[] => {\r\n  let errors: RegexpValidationError[] = [];\r\n  if (token.kind === TokenKind.Text) {\r\n    errors = [\r\n      ...[...token.value.matchAll(/\\[/g)].map((match) => ({\r\n        position: (match.index ?? 0) + token.position,\r\n        message: `Invalid regular expression: /${regexp}/: Unescaped opening bracket [ is not supported`,\r\n      })),\r\n\r\n      ...[...token.value.matchAll(/\\{/g)].map((match) => ({\r\n        position: (match.index ?? 0) + token.position,\r\n        message: `Invalid regular expression: /${regexp}/: Unescaped opening brace { is not supported`,\r\n      })),\r\n    ];\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\n// A capture group name [ (?<name> ] can't start with a digit and can't contain non-alphanumeric characters\r\n// https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Pattern.html#groupname\r\nconst validateNamedCaptureGroupStart = (\r\n  regexp: string,\r\n  token: Token,\r\n): RegexpValidationError[] => {\r\n  const errors: RegexpValidationError[] = [];\r\n  if (token.kind === TokenKind.NamedCaptureGroupStart) {\r\n    const result = /\\(\\?<([^>]+)>/.exec(token.value);\r\n    if (result !== null && result[1] !== undefined) {\r\n      const name = result[1];\r\n      if (!/^[a-zA-Z][a-zA-Z0-9]*$/.test(name)) {\r\n        errors.push({\r\n          position: token.position + 3,\r\n          message: `Invalid regular expression: /${regexp}/: Invalid capture group name`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\n// A back reference name [ \\k<name> ] can't start with a digit and can't contain non-alphanumeric characters\r\nconst validateNamedBackReference = (\r\n  regexp: string,\r\n  token: Token,\r\n): RegexpValidationError[] => {\r\n  const errors: RegexpValidationError[] = [];\r\n  if (token.kind === TokenKind.NamedBackReference) {\r\n    const result = /\\\\k<([^>]+)>/.exec(token.value);\r\n    if (result !== null && result[1] !== undefined) {\r\n      const name = result[1];\r\n      if (!/^[a-zA-Z][a-zA-Z0-9]*$/.test(name)) {\r\n        errors.push({\r\n          position: token.position + 3,\r\n          message: `Invalid regular expression: /${regexp}/: Invalid back reference name`,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\n// Infinite quantifiers are not allowed inside look behind assertions\r\nconst getLookBehindInfiniteQuantifierErrors = (\r\n  regexp: string,\r\n  token: Token,\r\n): RegexpValidationError[] => {\r\n  const errors: RegexpValidationError[] = [];\r\n  if (token.subTokens !== undefined) {\r\n    errors.push(\r\n      ...token.subTokens\r\n        .filter(\r\n          (subToken) =>\r\n            [\r\n              TokenKind.LazyZeroOrMoreQuantifier,\r\n              TokenKind.GreedyZeroOrMoreQuantifier,\r\n              TokenKind.LazyOneOrMoreQuantifier,\r\n              TokenKind.GreedyOneOrMoreQuantifier,\r\n            ].includes(subToken.kind) ||\r\n            (subToken.kind === TokenKind.LazyVarRangeQuantifier &&\r\n              subToken.value.endsWith(',}?')) ||\r\n            (subToken.kind === TokenKind.GreedyVarRangeQuantifier &&\r\n              subToken.value.endsWith(',}')),\r\n        )\r\n        .map((subToken) => ({\r\n          position: subToken.position,\r\n          message: `Invalid regular expression: /${regexp}/: Infinite quantifiers not allowed inside look behind assertions`,\r\n        })),\r\n    );\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst validateLookBehindContent = (\r\n  regexp: string,\r\n  token: Token,\r\n): RegexpValidationError[] => {\r\n  if (token.kind === TokenKind.LookBehindContent) {\r\n    return getLookBehindInfiniteQuantifierErrors(regexp, token);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nconst validateNegativeLookBehindContent = (\r\n  regexp: string,\r\n  token: Token,\r\n): RegexpValidationError[] => {\r\n  if (token.kind === TokenKind.NegLookBehindContent) {\r\n    return getLookBehindInfiniteQuantifierErrors(regexp, token);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\n// Octal escape sequences and the null character are will not be allowed,\r\n// This rule is unused for now since octal char tokens are not recognized and confused with back references\r\n// Octal escape sequences are also deprecated in JavaScript\r\nconst validateOctalEscape = (\r\n  regexp: string,\r\n  token: Token,\r\n): RegexpValidationError[] => {\r\n  //pending to recognize octal char tokens\r\n  const errors: RegexpValidationError[] = [];\r\n  if (token.kind === TokenKind.OctalEscape) {\r\n    errors.push({\r\n      position: token.position,\r\n      message: `Invalid regular expression: /${regexp}/: Octal escape sequences and the null character are not supported`,\r\n    });\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const ValidationRules: ValidationRule[] = [\r\n  {\r\n    validate: validateCharacterClass,\r\n  },\r\n  {\r\n    validate: validateTextToken,\r\n  },\r\n  {\r\n    validate: validateNamedCaptureGroupStart,\r\n  },\r\n  {\r\n    validate: validateNamedBackReference,\r\n  },\r\n  {\r\n    validate: validateLookBehindContent,\r\n  },\r\n  {\r\n    validate: validateNegativeLookBehindContent,\r\n  },\r\n  {\r\n    validate: validateOctalEscape,\r\n  },\r\n];\r\n\r\nexport const validate = (\r\n  regexp: string,\r\n  tokens: Token[],\r\n  validationRules?: ValidationRule[],\r\n): RegexpValidationError[] => {\r\n  const rules = validationRules ?? ValidationRules;\r\n  return rules\r\n    .flatMap((rule) => tokens.flatMap((token) => rule.validate(regexp, token)))\r\n    .sort((a, b) => a.position - b.position);\r\n};\r\n","/**\r\n * See README in the telemetry directory for more on how to instrument certified events\r\n */\r\n\r\nexport enum MappingFeature {\r\n  JobCreate = 'DOMappingJobCreate', // Major scenario\r\n  JobListView = 'DOMappingJobListView', // Major scenario\r\n  JobDelete = 'DOMappingJobDelete', // Minor scenario\r\n  JobEdit = 'DOMappingJobEdit', // Minor scenario\r\n}\r\n\r\nexport enum JobCreateActivity {\r\n  CreateJobCalled = 'CreateJobCalled',\r\n  RunJobCalled = 'RunJobCalled',\r\n  ListLakehousesCalled = 'ListLakehousesCalled',\r\n  ListTablesCalled = 'ListTablesCalled',\r\n  GetTablePreviewCalled = 'GetTablePreviewCalled',\r\n  GetLakeHouseCalled = 'GetLakeHouseCalled',\r\n  GetTableDetailsCalled = 'GetTableDetailsCalled',\r\n}\r\n\r\nexport enum JobEditActivity {\r\n  EditJobCalled = 'EditJobCalled',\r\n}\r\n\r\nexport enum JobDeleteActivity {\r\n  DeleteJobCalled = 'DeleteJobCalled',\r\n}\r\n\r\nexport enum JobListViewActivity {\r\n  GetJobsCalled = 'GetJobsCalled',\r\n}\r\n","export enum ModelingFeatures {\r\n  ViewModelingJob = 'DOModelingViewModelingJob', // Major scenario\r\n  ViewModelsListPage = 'DOModelingViewModelsListPage', // Major scenario\r\n  ViewTwinsListPage = 'DOModelingViewTwinsListPage', // Major scenario\r\n  ViewModelDetailsPanel = 'DOModelingViewModelDetailsPanel', // Major scenario\r\n}\r\n\r\nexport enum ViewModelingJobActivities {\r\n  JobsListFetch = 'JobsListFetch',\r\n  JobsNextNavigated = 'JobsNextNavigated',\r\n  JobsPreviousNavigated = 'JobsPreviousNavigated',\r\n}\r\n\r\nexport enum ViewModelsListPageActivities {\r\n  ModelsListFetch = 'ModelsListFetch',\r\n  ModelsNextNavigated = 'ModelsNextNavigated',\r\n  ModelsPreviousNavigated = 'ModelsPreviousNavigated',\r\n  ModelsListFiltered = 'ModelsListFiltered',\r\n}\r\n\r\nexport enum ViewTwinsListPageActivities {\r\n  TwinsListFetch = 'TwinsListFetch',\r\n  TwinsNextNavigated = 'TwinsNextNavigated',\r\n  TwinsPreviousNavigated = 'TwinsPreviousNavigated',\r\n  TwinsListFiltered = 'TwinsListFiltered',\r\n}\r\n\r\nexport enum ViewModelDetailsPanelActivities {\r\n  ModelDetailsFetch = 'ModelDetailsFetch',\r\n  ModelDetailsUpdated = 'ModelDetailsUpdated',\r\n}\r\n","export * from './ModelingCertifiedEvents';\r\nexport * from './MappingCertifiedEvents';\r\n","/* eslint-disable no-console */\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport {\r\n  isNonProdEnvironment,\r\n  ImdxEnvironmentName,\r\n} from '../models/environment';\r\nimport { ILogger, LoggerConfig, TempObject } from './Logger.types';\r\n\r\n// IMDX Console Event\r\nconst LOG_TAG = '[IMDX]';\r\n\r\n/** @inheritdoc {ILogger} */\r\nexport class ConsoleLogger implements ILogger {\r\n  private config: LoggerConfig = { warn: true, error: true };\r\n\r\n  constructor(environment?: ImdxEnvironmentName, customConfig?: LoggerConfig) {\r\n    this.setLoggerConfig(environment, customConfig);\r\n  }\r\n\r\n  public setContext(_tempObject: TempObject): void {\r\n    // TODO add context here too.\r\n  }\r\n  public info(moduleName: string, message: string, payload?: unknown) {\r\n    if (this.config.info) {\r\n      console.info(`${LOG_TAG} [${moduleName}] ${message}`, payload);\r\n    }\r\n  }\r\n  public debug(moduleName: string, message: string, payload?: unknown) {\r\n    if (this.config.debug) {\r\n      console.debug(\r\n        `${LOG_TAG} [${moduleName}] [${new Date().toISOString()}] ${message}`,\r\n        payload,\r\n      );\r\n    }\r\n  }\r\n  public trace(moduleName: string, message: string, payload?: unknown) {\r\n    if (this.config.trace) {\r\n      console.trace(`${LOG_TAG} [${moduleName}] ${message}`, payload);\r\n    }\r\n  }\r\n  public warn(\r\n    moduleName: string,\r\n    message: string,\r\n    errorDetails?: unknown,\r\n    errorSource?: unknown,\r\n    messageDetails?: unknown,\r\n  ) {\r\n    if (this.config.warn) {\r\n      console.warn(\r\n        `${LOG_TAG} [${moduleName}] ${message}`,\r\n        errorDetails,\r\n        errorSource,\r\n        messageDetails,\r\n      );\r\n    }\r\n  }\r\n  public error(\r\n    moduleName: string,\r\n    message: string,\r\n    details?: unknown,\r\n    source?: unknown,\r\n    messageDetails?: unknown,\r\n  ) {\r\n    if (this.config.error) {\r\n      console.error(\r\n        `${LOG_TAG} [${moduleName}] ${message}`,\r\n        details,\r\n        source,\r\n        messageDetails,\r\n      );\r\n    }\r\n  }\r\n  public logStandardizedCertifiedEvent(_logConfig: Partial<FeatureEvent>) {\r\n    // Noop\r\n  }\r\n\r\n  private setLoggerConfig(\r\n    environment?: ImdxEnvironmentName,\r\n    customConfig?: LoggerConfig,\r\n  ) {\r\n    if (customConfig) {\r\n      this.config = customConfig;\r\n      return;\r\n    }\r\n\r\n    if (!environment || isNonProdEnvironment(environment)) {\r\n      // enable all logs for non prod\r\n      this.config = {\r\n        warn: true,\r\n        error: true,\r\n        debug: true,\r\n        info: true,\r\n        trace: true,\r\n      };\r\n      this.info(\r\n        `Initialized console logger with non-prod environment. {config: ${JSON.stringify(\r\n          this.config,\r\n        )}`,\r\n        'ConsoleLogger',\r\n      );\r\n    } else {\r\n      this.config = { warn: true, error: true };\r\n    }\r\n  }\r\n\r\n  public getLoggerConfig(): LoggerConfig {\r\n    return this.config;\r\n  }\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { FeatureEvent, Status } from '@trident/certified-events';\r\nimport { ImdxEnvironmentName } from '../models/environment';\r\nimport {\r\n  ILogger,\r\n  TempObjectContext,\r\n  LoggerConfig,\r\n  LogLevel,\r\n  TempObject,\r\n} from './Logger.types';\r\nimport { EXTENSION_NAMES } from '../constants/routing';\r\nimport { extensionVersion } from './config';\r\n\r\nexport const DIAGNOSTIC_LOGS_EXTENSION_NAME = 'IMDX.ExtensionEvent';\r\nexport const ORIGINATING_SERVICE = 'DigitalOperations';\r\n\r\n/** @inheritdoc {ILogger} */\r\nexport class ExtensionClientLogger implements ILogger {\r\n  private extensionClient: ExtensionClientAPI;\r\n  private context: TempObjectContext = {};\r\n\r\n  private config: LoggerConfig = {\r\n    debug: false,\r\n    error: true,\r\n    info: true,\r\n    trace: false,\r\n    warn: true,\r\n  };\r\n\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    environment: ImdxEnvironmentName,\r\n  ) {\r\n    this.extensionClient = extensionClient;\r\n    this.initContext(environment);\r\n    this.setLoggerConfig(environment);\r\n  }\r\n\r\n  private initContext(environmentName: ImdxEnvironmentName) {\r\n    const context: TempObjectContext = {};\r\n    // TODO this class should not depend on DOM.\r\n    const metas = document.getElementsByTagName('meta');\r\n    for (const meta of metas) {\r\n      if (meta.name === 'version') {\r\n        context.extensionVersion = meta.content;\r\n        break;\r\n      }\r\n    }\r\n    context.environmentName = environmentName;\r\n    context.extensionUrl = window.location.href;\r\n    context.extensionName = EXTENSION_NAMES.DigitalOperations;\r\n\r\n    this.context = context;\r\n  }\r\n\r\n  private setLoggerConfig(environment: ImdxEnvironmentName) {\r\n    if (environment === '__internal_Standalone') {\r\n      this.config = {}; // dont log anything in standalone\r\n    }\r\n  }\r\n\r\n  public info(moduleName: string, message: string, payload?: unknown) {\r\n    if (!this.config.info) return;\r\n    this.logEvent(LogLevel.Information, message, moduleName, payload);\r\n  }\r\n  public debug() {\r\n    // Don't send debug logs to ExtensionClient\r\n    return;\r\n  }\r\n  public trace(moduleName: string, message: string, payload?: unknown) {\r\n    if (!this.config.trace) return;\r\n    this.logEvent(LogLevel.Trace, message, moduleName, payload);\r\n  }\r\n  public warn(\r\n    moduleName: string,\r\n    message: string,\r\n    errorDetails?: unknown,\r\n    errorSource?: unknown,\r\n    messageDetails?: unknown,\r\n  ) {\r\n    if (!this.config.warn) return;\r\n    this.logEvent(\r\n      LogLevel.Warn,\r\n      message,\r\n      moduleName,\r\n      messageDetails,\r\n      errorDetails,\r\n      errorSource,\r\n    );\r\n  }\r\n  public error(\r\n    moduleName: string,\r\n    message: string,\r\n    errorDetails?: unknown,\r\n    sourceError?: unknown,\r\n    messageDetails?: unknown,\r\n  ) {\r\n    if (!this.config.error) return;\r\n    this.logEvent(\r\n      LogLevel.Error,\r\n      message,\r\n      moduleName,\r\n      messageDetails,\r\n      errorDetails,\r\n      sourceError,\r\n    );\r\n  }\r\n\r\n  public logStandardizedCertifiedEvent(logConfig: Partial<FeatureEvent>) {\r\n    const event: FeatureEvent = {\r\n      originatingService: ORIGINATING_SERVICE,\r\n      featureName: logConfig.featureName ?? 'missing featureName',\r\n      activityName: logConfig.activityName ?? 'missing activityName',\r\n      activityStatus: logConfig.activityStatus ?? Status.Pending,\r\n      ...logConfig,\r\n    };\r\n\r\n    if (!event.activityAttributes) {\r\n      event.activityAttributes = {};\r\n    }\r\n    event.activityAttributes.isExtensionDevMode =\r\n      (extensionVersion as string) === 'sideloaded';\r\n\r\n    if (event.operationStartTime && event.operationEndTime) {\r\n      event.durationMs =\r\n        new Date(event.operationEndTime).getTime() -\r\n        new Date(event.operationStartTime).getTime();\r\n    }\r\n\r\n    this.extensionClient.telemetry.logEvent(event);\r\n  }\r\n\r\n  // TODO: What should go in this context?\r\n  public setContext(tempObject: TempObject): void {\r\n    this.context = {\r\n      ...this.context,\r\n      artifactId: tempObject.id,\r\n      // workspaceId: tempObject.WorkspaceInfo.Id,\r\n      // capacityId: tempObject.CapacityId,\r\n      // warehouseId: tempObject.WarehouseProperties?.warehouseId ?? \"\",\r\n    };\r\n  }\r\n\r\n  private logEvent(\r\n    type: LogLevel,\r\n    message: string,\r\n    moduleName?: string,\r\n    details?: unknown,\r\n    errorDetails?: unknown,\r\n    sourceError?: unknown,\r\n  ) {\r\n    try {\r\n      this.sendToExtensionClient(\r\n        type,\r\n        message,\r\n        moduleName,\r\n        details,\r\n        errorDetails,\r\n        sourceError,\r\n      );\r\n    } catch {\r\n      console.error(moduleName, 'Failed to call telemetry APIs');\r\n    }\r\n  }\r\n\r\n  private sendToExtensionClient(\r\n    type: LogLevel,\r\n    message: string,\r\n    moduleName?: string,\r\n    details?: unknown,\r\n    errorDetails?: unknown,\r\n    sourceError?: unknown,\r\n  ) {\r\n    // The final object, which will be combined with platform default properties\r\n    // We may add or modified items based on the requirement\r\n    const event = {\r\n      name: DIAGNOSTIC_LOGS_EXTENSION_NAME,\r\n      properties: {\r\n        ...this.context,\r\n        message: message,\r\n        sourceError: sourceError ? convertTostring(sourceError) : '',\r\n        messageDetails: convertTostring(details),\r\n        errorDetails: convertTostring(errorDetails),\r\n        moduleName: moduleName || '',\r\n        severity: type,\r\n        extensionVersion,\r\n      },\r\n    };\r\n    this.extensionClient.telemetry.logEvent(event);\r\n  }\r\n\r\n  public getLoggerConfig() {\r\n    return this.config;\r\n  }\r\n}\r\n\r\n/**\r\n * helper function handles errors when using JSON stringify with circular reference\r\n */\r\nfunction convertTostring(object: unknown): string {\r\n  try {\r\n    return object ? JSON.stringify(object) : '';\r\n  } catch {\r\n    return 'ERROR: The detailed message/error cannot be stringified.';\r\n  }\r\n}\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { FeatureEvent } from '@trident/certified-events';\r\nimport { ImdxEnvironmentName } from '../models/environment';\r\nimport { ConsoleLogger } from './ConsoleLogger';\r\nimport { ExtensionClientLogger } from './ExtensionClientLogger';\r\nimport { ILogger, TempObject } from './Logger.types';\r\n\r\nexport class Logger implements ILogger {\r\n  private loggers: ILogger[] = [];\r\n\r\n  constructor(\r\n    extensionClient: ExtensionClientAPI,\r\n    environmentName: ImdxEnvironmentName,\r\n  ) {\r\n    this.loggers.push(new ConsoleLogger(environmentName));\r\n    this.loggers.push(\r\n      new ExtensionClientLogger(extensionClient, environmentName),\r\n    );\r\n  }\r\n\r\n  /** @inheritdoc {ILogger.info} */\r\n  public info(moduleName: string, message: string, payload?: unknown) {\r\n    this.loggers.forEach((logger) => logger.info(moduleName, message, payload));\r\n  }\r\n  /** @inheritdoc {ILogger.debug} */\r\n  public debug(moduleName: string, message: string, payload?: unknown) {\r\n    this.loggers.forEach((logger) =>\r\n      logger.debug(moduleName, message, payload),\r\n    );\r\n  }\r\n  /** @inheritdoc {ILogger.trace} */\r\n  public trace(moduleName: string, message: string, payload?: unknown) {\r\n    this.loggers.forEach((logger) =>\r\n      logger.trace(moduleName, message, payload),\r\n    );\r\n  }\r\n  /** @inheritdoc {ILogger.warn} */\r\n  public warn(\r\n    moduleName: string,\r\n    message: string,\r\n    errorDetails?: unknown,\r\n    errorSource?: unknown,\r\n    messageDetails?: unknown,\r\n  ) {\r\n    this.loggers.forEach((logger) =>\r\n      logger.warn(\r\n        moduleName,\r\n        message,\r\n        errorDetails,\r\n        errorSource,\r\n        messageDetails,\r\n      ),\r\n    );\r\n  }\r\n  /** @inheritdoc {ILogger.error} */\r\n  public error(\r\n    moduleName: string,\r\n    message: string,\r\n    errorDetails?: unknown,\r\n    errorSource?: unknown,\r\n    messageDetails?: unknown,\r\n  ) {\r\n    this.loggers.forEach((logger) =>\r\n      logger.error(\r\n        moduleName,\r\n        message,\r\n        errorDetails,\r\n        errorSource,\r\n        messageDetails,\r\n      ),\r\n    );\r\n  }\r\n  /** @inheritdoc {ILogger.logStandardizedCertifiedEvent} */\r\n  public logStandardizedCertifiedEvent(logConfig: Partial<FeatureEvent>) {\r\n    this.loggers.forEach((logger) =>\r\n      logger.logStandardizedCertifiedEvent(logConfig),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * if ExtensionClient logger is in use, set the context of app identifiers as part of telemetry\r\n   * it is called after the logger is initialized and it does not work for console logger\r\n   * @param tempObject the object contains all context information\r\n   */\r\n  public setContext(tempObject: TempObject) {\r\n    this.loggers.forEach((logger) => logger.setContext(tempObject));\r\n  }\r\n}\r\n","import { FeatureEvent } from '@trident/certified-events';\r\n\r\n/**\r\n * Interface describing our offering\r\n * TODO: Update and fill this in\r\n */\r\nexport interface TempObject {\r\n  id: string;\r\n  name?: string;\r\n}\r\n\r\n/**\r\n * Enum of log level, which will be the key of the eventName in Trident CustomEvent object\r\n */\r\nexport enum LogLevel {\r\n  Information = 'Info',\r\n  Warn = 'Warn',\r\n  Error = 'Error',\r\n  Trace = 'Trace',\r\n  Debug = 'Debug',\r\n}\r\n\r\n/**\r\n * for each individual log level, users can customize its logging mode or use default set\r\n */\r\nexport interface LoggerConfig {\r\n  info?: boolean;\r\n  warn?: boolean;\r\n  error?: boolean;\r\n  trace?: boolean;\r\n  debug?: boolean;\r\n}\r\n\r\n/**\r\n * TempObject specific context including multiple identifiers and tempObject name\r\n */\r\nexport interface TempObjectContext {\r\n  environmentName?: string;\r\n  extensionName?: string;\r\n  artifactId?: string;\r\n  workspaceId?: string;\r\n  capacityId?: string;\r\n  warehouseId?: string;\r\n  extensionVersion?: string;\r\n  extensionUrl?: string;\r\n}\r\n\r\n/**\r\n * Logger class which provides a series of logging methods: info, warn, error, debug, and trace.\r\n * The apis log message and optional details to either console or to the extension client's Kusto cluster.\r\n */\r\nexport interface ILogger {\r\n  /**\r\n   * warn-level logging method.\r\n   * @param message A string value to be recorded.\r\n   * @param moduleName The module or component which logs the event\r\n   * @param errorDetails An arbitrary data object, which will be stringified if log to remote database.\r\n   * @param sourceError the source of original error\r\n   * @param messageDetails Additional details to add with the log message\r\n   */\r\n  warn(\r\n    moduleName: string,\r\n    message: string,\r\n    errorDetails?: unknown,\r\n    sourceError?: unknown,\r\n    messageDetails?: unknown,\r\n  ): void;\r\n  /**\r\n   * error-level logging method.\r\n   * @param message A string value to be recorded.\r\n   * @param moduleName The module or component which logs the event\r\n   * @param errorDetails An arbitrary data object, which will be stringified if log to remote database.\r\n   * @param originalError the source of original error\r\n   * @param messageDetails Additional details to add with the log message\r\n   */\r\n  error(\r\n    moduleName: string,\r\n    message: string,\r\n    errorDetails?: unknown,\r\n    originalError?: unknown,\r\n    messageDetails?: unknown,\r\n  ): void;\r\n  /**\r\n   * Informational-level logging method.\r\n   * @param message A string value to be recorded.\r\n   * @param moduleName The module or component which logs the event\r\n   * @param payload An arbitrary data object, which will be stringified if logged to remote database.\r\n   */\r\n  info(moduleName: string, message: string, payload?: unknown): void;\r\n  /**\r\n   * debug-level logging method, which logs to console only\r\n   * @param message A string value to be recorded.\r\n   * @param moduleName The module or component which logs the event\r\n   * @param payload An arbitrary data object, which will be stringified if logged to remote database.\r\n   */\r\n  debug(moduleName: string, message: string, payload?: unknown): void;\r\n  /**\r\n   * trace-level logging method, which logs to console only\r\n   * @param message A string value to be recorded.\r\n   * @param moduleName The module or component which logs the event\r\n   * @param payload An arbitrary data object, which will be stringified if logged to remote database.\r\n   */\r\n  trace(moduleName: string, message: string, payload?: unknown): void;\r\n  /**\r\n   * Standardized certified event logging method\r\n   * @param logConfig CertifiedEventConfig object, which is a subset of the FeatureEvent that extensionClient expects\r\n   */\r\n  logStandardizedCertifiedEvent(logConfig: Partial<FeatureEvent>): void;\r\n\r\n  // TODO: What would go in context for our purposes?\r\n  /**\r\n   * Sets the global context for logger.\r\n   * @param tempObject Current tempObject.\r\n   */\r\n  setContext(tempObject: TempObject): void;\r\n}\r\n","export const extensionVersion = 'sideloaded';\r\nexport const publishDate = 'yyyy.mm.dd';\r\nexport const buildId = 'someBuildId';\r\n","import { ExtensionClientAPI } from '@trident/extension-client';\r\nimport { ImdxEnvironmentName } from '../models/environment';\r\nimport { ConsoleLogger } from './ConsoleLogger';\r\nimport { Logger } from './Logger';\r\nimport { ILogger } from './Logger.types';\r\n// This import needs to be this granular to avoid circular dependencies\r\nimport { ExtensionClientMock } from '../clients/TridentExtension/mock/ExtensionClientMock';\r\nimport { DEBUG_LOCAL_STORAGE_FLAG_KEY } from '../constants/debugging';\r\n\r\nlet logger: ILogger | undefined;\r\n\r\n/** bootstrap the global logger for the app */\r\nexport function initializeLogger(\r\n  extensionClient: ExtensionClientAPI,\r\n  environmentName: ImdxEnvironmentName,\r\n) {\r\n  logger = new Logger(extensionClient, environmentName);\r\n}\r\n\r\n/** for use in test cases only */\r\nexport function initializeMockLogger(enableLogging = true) {\r\n  // Set to true so all tests cover debug logging statements\r\n  localStorage.setItem(DEBUG_LOCAL_STORAGE_FLAG_KEY, String(enableLogging));\r\n  logger = new Logger(new ExtensionClientMock(), 'UnitTest');\r\n}\r\n\r\nexport function getLogger(): ILogger {\r\n  if (!logger) {\r\n    console.warn(\r\n      'The logger has not been initialized. A console logger is created',\r\n    );\r\n\r\n    // log everything to console, if it hasn't been initialized\r\n    logger = new ConsoleLogger(undefined, {\r\n      debug: true,\r\n      error: true,\r\n      info: true,\r\n      warn: true,\r\n      trace: true,\r\n    });\r\n  }\r\n  return logger;\r\n}\r\n\r\nexport * from './CertifiedEvents';\r\nexport * from './config';\r\n","export function deepCopy<T>(object: T): T {\r\n  if (object) {\r\n    return JSON.parse(JSON.stringify(object)) as T;\r\n  } else {\r\n    return object;\r\n  }\r\n}\r\n\r\n/** checks if a value is null or undefined and returns true if it's not one of those values */\r\nexport function isDefined(value: unknown) {\r\n  return value != null && value != undefined;\r\n}\r\n\r\n/**\r\n * Sort function to order items from ascending or descending order, for boolean, numbers and strings. Case insensitive sort\r\n * NOTE: only works when property is one layer down\r\n * @param propertyName name of the property to sort on\r\n *  @example listItems.sort(sortAscendingOrDescending('textPrimary'))\r\n * @returns Sort function to pass to `.sort()`\r\n */\r\nexport function sortAscendingOrDescending<T extends object>(\r\n  propertyName: keyof T,\r\n  descending?: boolean,\r\n) {\r\n  return (a: T | null | undefined, b: T | null | undefined) => {\r\n    let aVal = (a as any)[String(propertyName)] as unknown as string;\r\n    // handle the case where the property is not a string, if no value, fall back to empty string so we can sort undefined values consistently\r\n    aVal = aVal && typeof aVal === 'string' ? aVal.toLowerCase() : aVal || '';\r\n    let bVal = (b as any)[String(propertyName)] as unknown as string;\r\n    // handle the case where the property is not a string, if no value, fall back to empty string so we can sort undefined values consistently\r\n    bVal = bVal && typeof bVal === 'string' ? bVal.toLowerCase() : bVal || '';\r\n    let order = -1;\r\n    if (!descending) {\r\n      order = aVal > bVal ? 1 : -1;\r\n    } else {\r\n      order = aVal < bVal ? 1 : -1;\r\n    }\r\n    return order;\r\n  };\r\n}\r\n\r\n/**\r\n * Sorts a list alphabetically ignoring casing\r\n * @example listItems.sort(sortCaseInsensitiveAlphabetically())\r\n * @returns Sort function to pass to `.sort()`\r\n */\r\nexport function sortCaseInsensitive(descending?: boolean) {\r\n  return (a: string | null | undefined, b: string | null | undefined) => {\r\n    let order = 0;\r\n    if (a && b && typeof a === 'string' && typeof b === 'string') {\r\n      order = a.toLowerCase() > b.toLowerCase() ? 1 : -1;\r\n    } else if (isDefined(a)) {\r\n      order = -1;\r\n    } else if (isDefined(b)) {\r\n      order = 1;\r\n    }\r\n\r\n    if (descending) {\r\n      order = order * -1;\r\n    }\r\n\r\n    return order;\r\n  };\r\n}\r\n","export const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\r\n","import { CallState, DataState } from '../models';\r\nimport { isDefined } from './Utils';\r\n\r\n/**\r\n * Takes in a collection of states and returns back the most relevant state\r\n * @description Error takes top priority, then Loading, then NotCalled, then Complete.\r\n * If any state has a higher priority, then that is the one returned\r\n */\r\nexport function combineStates(...states: CallState[]): CallState {\r\n  if (states.includes('Error')) {\r\n    return 'Error';\r\n  }\r\n  if (states.includes('Loading')) {\r\n    return 'Loading';\r\n  }\r\n  if (states.includes('NotCalled')) {\r\n    return 'NotCalled';\r\n  }\r\n  return 'Complete';\r\n}\r\n/**\r\n * Takes in a collection of errors and returns back the first one that is defined\r\n */\r\nexport function combineErrors<E>(...errors: E[]): E | undefined {\r\n  return errors.find((e) => isDefined(e)) as E;\r\n}\r\n\r\n/** checks if the state is loading */\r\nexport function isLoading(state: CallState): boolean {\r\n  return state === 'Loading';\r\n}\r\n\r\n/**\r\n * @inheritdoc combineStates\r\n */\r\nexport function combineDataStates(\r\n  ...states: DataState<unknown, unknown>[]\r\n): CallState {\r\n  return combineStates(...states.map((s) => s.state));\r\n}\r\n\r\n/**\r\n * @inheritdoc combineErrors\r\n */\r\nexport function combineDataStateErrors<E>(\r\n  ...states: DataState<unknown, E>[]\r\n): E | undefined {\r\n  return combineErrors(...states.map((s) => s.error));\r\n}\r\n\r\n/**\r\n * Is any of the call states in loading state\r\n * @inheritdoc isCallStateLoading\r\n */\r\nexport function isDataStateLoading(\r\n  ...states: DataState<unknown, unknown>[]\r\n): boolean {\r\n  return states.find((x) => isLoading(x.state)) === undefined ? false : true;\r\n}\r\n","import { strings } from '@do/localization';\r\nimport TreeMap from 'ts-treemap';\r\n\r\nexport enum DurationUnits {\r\n  milliseconds = 0,\r\n  seconds = 1,\r\n  minutes = 2,\r\n  hours = 3,\r\n  days = 4,\r\n  years = 5,\r\n}\r\n\r\n/**\r\n * Takes in a duration in milliseconds and returns and object that has the value converted to the best units to describe that duration (ex: seconds, minutes, hours, days, years).\r\n * @param milliseconds millisecond duration to convert\r\n * @returns an object containing the scaled version and the locale resource key for the units, NOTE: the resource key expects the value to be passed in as an argument to populate the value ex: `t(formattedTime.displayStringKey, {value: formattedTime.value})`\r\n */\r\nexport function formatTimeInRelevantUnits(\r\n  milliseconds: number,\r\n  minimumUnits: DurationUnits = DurationUnits.milliseconds,\r\n): { value: number; displayStringKey: string } {\r\n  const DEFAULT_RESULT = {\r\n    value: 0,\r\n    displayStringKey: strings.duration.second,\r\n  };\r\n  if (!milliseconds || milliseconds < 1) {\r\n    return DEFAULT_RESULT;\r\n  }\r\n  const timeUnits = new TreeMap<number, string>();\r\n  minimumUnits <= DurationUnits.milliseconds &&\r\n    timeUnits.set(1, strings.duration.millisecond);\r\n  minimumUnits <= DurationUnits.seconds &&\r\n    timeUnits.set(1000, strings.duration.second);\r\n  minimumUnits <= DurationUnits.minutes &&\r\n    timeUnits.set(60 * 1000, strings.duration.minute);\r\n  minimumUnits <= DurationUnits.hours &&\r\n    timeUnits.set(60 * 60 * 1000, strings.duration.hour);\r\n  minimumUnits <= DurationUnits.days &&\r\n    timeUnits.set(24 * 60 * 60 * 1000, strings.duration.day);\r\n  minimumUnits <= DurationUnits.years &&\r\n    timeUnits.set(365 * 24 * 60 * 60 * 1000, strings.duration.year);\r\n\r\n  // get the next entry below, if there isn't one, get the next one larger\r\n  let unitBelow = timeUnits.floorEntry(milliseconds);\r\n  let value = 0;\r\n\r\n  if (!unitBelow) {\r\n    unitBelow = timeUnits.higherEntry(milliseconds);\r\n  } else {\r\n    value = milliseconds / unitBelow[0];\r\n  }\r\n\r\n  const units = unitBelow?.[1];\r\n  return {\r\n    value,\r\n    displayStringKey: units || '',\r\n  };\r\n}\r\n","export * from './data.utils';\r\nexport * from './date.utils';\r\nexport * from './shell.utils';\r\nexport * from './stringUtils';\r\nexport * from './url';\r\nexport * from './timezone.utils';\r\nexport * from './testing.utils';\r\nexport * from './Utils';\r\n","import { FetchError } from '@trident/data-access-artifact';\r\nimport { ITridentApiError } from '../models/shell.types';\r\n\r\n/** takes an error object from a Trident SDK call and returns back the error message */\r\nexport function getTridentAPIErrorMessage(obj: unknown): string {\r\n  if (!obj) {\r\n    return '';\r\n  }\r\n  if (typeof obj === 'string') {\r\n    return obj;\r\n  }\r\n\r\n  if (obj instanceof Object) {\r\n    // Typescript not recognizing obj as an Object makes any required here\r\n    // instanceof cannot be used with interfaces at runtime, so we check for the properties\r\n    // we need for this function to work\r\n    if ('response' in (obj as any) || 'message' in (obj as any)) {\r\n      const objAsFetchError = obj as FetchError;\r\n      // Artifact API error\r\n      const requestIdInfo = findRequestIdFromHeaders(\r\n        objAsFetchError.response?.headers,\r\n      );\r\n      let message = '';\r\n\r\n      const errorPayload = JSON.parse(\r\n        objAsFetchError.response?.body || '{}',\r\n      ) as ITridentApiError;\r\n      const detailMessages = errorPayload?.error?.['pbi.error']?.details;\r\n      // try to use the message details, these are the best\r\n      if (detailMessages && detailMessages.length > 0) {\r\n        let messageIndex = 0;\r\n        while (messageIndex < detailMessages.length && !message) {\r\n          const detail = detailMessages[messageIndex]?.detail;\r\n          if (detail) {\r\n            message = detail.value;\r\n          }\r\n          messageIndex++;\r\n        }\r\n        // add error code if available\r\n        const code =\r\n          errorPayload?.error?.['pbi.error']?.code || errorPayload?.error?.code;\r\n        if (message && code) {\r\n          message += ` (Error Code: \"${code}\")`;\r\n        }\r\n      }\r\n\r\n      // fallback to using the root message\r\n      if (!message) {\r\n        message = objAsFetchError.message;\r\n      }\r\n\r\n      // add the request info\r\n      if (requestIdInfo !== null) {\r\n        message += `, ${requestIdInfo.key}: ${requestIdInfo.value}`;\r\n      }\r\n      return message;\r\n    }\r\n  }\r\n\r\n  return JSON.stringify(obj);\r\n}\r\n\r\nfunction findRequestIdFromHeaders(\r\n  headers: unknown,\r\n): { key: string; value: unknown } | null {\r\n  if (headers != null) {\r\n    const requestIdKey = Object.keys(headers).find(\r\n      (key) =>\r\n        // in Artifact crud API response headers\r\n        key.toLocaleLowerCase() === 'requestid' ||\r\n        // in MWC POST API response headers\r\n        key.toLowerCase() === 'x-ms-root-activity-id' ||\r\n        // in MWC POST API request headers\r\n        key.toLowerCase() === 'x-ms-client-request-id',\r\n    );\r\n    if (requestIdKey != null) {\r\n      return { key: requestIdKey, value: (headers as any)[requestIdKey] };\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n","/**\r\n * Removes all leading or trailing occurences of a character from a specified string in {@link str}\r\n * @param str String to remove characters from\r\n * @param trimChar Character to remove, must be string of length 1.\r\n * @returns Trimmed string\r\n * @throws Error if trimChar is not a valid character.\r\n */\r\nexport function trim(str: string, trimChar: string) {\r\n  if (trimChar.length !== 1)\r\n    throw new Error('Invalid parameter trimChar. Expected string of length 1');\r\n  return trimEnd(trimStart(str, trimChar), trimChar);\r\n}\r\n\r\n/**\r\n * Removes all leading occurences of a character from a specified string in {@link str}\r\n * @param str String to remove characters from\r\n * @param trimChar Character to remove, must be string of length 1.\r\n * @returns Trimmed string\r\n * @throws Error if trimChar is not a valid character.\r\n */\r\nexport function trimStart(str: string, trimChar: string): string {\r\n  if (trimChar.length !== 1)\r\n    throw new Error('Invalid parameter trimChar. Expected string of length 1');\r\n\r\n  let startIndex = 0;\r\n  while (startIndex < str.length && str.charAt(startIndex) === trimChar)\r\n    startIndex++;\r\n\r\n  return str.substring(startIndex);\r\n}\r\n\r\n/**\r\n * Removes all trailing occurences of a character from a specified string in {@link str}\r\n * @param str String to remove characters from\r\n * @param trimChar Character to remove, must be string of length 1.\r\n * @returns Trimmed string\r\n * @throws Error if trimChar is not a valid character.\r\n */\r\nexport function trimEnd(str: string, trimChar: string): string {\r\n  if (trimChar.length !== 1)\r\n    throw new Error('Invalid parameter trimChar. Expected string of length 1');\r\n  let endIndex = str.length - 1;\r\n  while (endIndex >= 0 && str.charAt(endIndex) === trimChar) endIndex--;\r\n  return str.substring(0, endIndex + 1);\r\n}\r\n\r\n/**\r\n * Converts string to boolean. Only \"true\" evaluates to true.\r\n */\r\nexport function parseBoolean(\r\n  value: string | boolean | undefined | null,\r\n): boolean {\r\n  if (typeof value === 'boolean') {\r\n    return value;\r\n  }\r\n  if (typeof value === 'string') {\r\n    return value.trim().toLowerCase() === 'true' ? true : false;\r\n  }\r\n  return !!value;\r\n}\r\n","/* istanbul ignore file */\r\nimport { act, fireEvent, screen } from '@testing-library/react';\r\n\r\n/**\r\n * Will open a dropdown menu and click on one of the options to trigger the onChange event for a Fluent dropdown\r\n * @param output The output of the @testing-library/react render function\r\n * @param testId the data-testid value attached to the dropdown DOM element\r\n * @param optionIndex override the default option index of 1\r\n * @returns the selected option\r\n */\r\nexport const SelectDropdownOption = async (testId: string, optionIndex = 1) => {\r\n  const targetDropdownButton = await screen.findByTestId(testId);\r\n  expect(targetDropdownButton).toBeInTheDocument();\r\n\r\n  // ACT\r\n  act(() => {\r\n    targetDropdownButton.click(); // open menu\r\n  });\r\n  const options = await screen.findAllByRole('option');\r\n  expect(options[0]).toBeInTheDocument();\r\n  expect(options.length).toBeGreaterThan(0);\r\n  fireEvent.click(options[optionIndex]);\r\n\r\n  return options[optionIndex]?.textContent;\r\n};\r\n","import { strings, t } from '@do/localization';\r\n\r\n/**\r\n * This list of timezones is copied from https://dev.azure.com/powerbi/_git/PowerBIClients?path=/trident/libs/common/src/lib/timezone/timezone.ts\r\n * since `@trident/common` is not exported as a package.\r\n *\r\n * The timezones shown here correspond to the timezones accepted for a Spark Job\r\n * as documented here: https://msdn.microsoft.com/en-us/library/gg154758.aspx\r\n */\r\nexport const getTimeZones = () => [\r\n  {\r\n    key: 'Dateline Standard Time',\r\n    text: t(strings.scheduling.time_zone.Dateline),\r\n  },\r\n  {\r\n    key: 'UTC-11',\r\n    text: t(strings.scheduling.time_zone.UTC_Minus_11),\r\n  },\r\n  {\r\n    key: 'Samoa Standard Time',\r\n    text: t(strings.scheduling.time_zone.Samoa),\r\n  },\r\n  {\r\n    key: 'Hawaiian Standard Time',\r\n    text: t(strings.scheduling.time_zone.Hawaiian),\r\n  },\r\n  {\r\n    key: 'Alaskan Standard Time',\r\n    text: t(strings.scheduling.time_zone.Alaskan),\r\n  },\r\n  {\r\n    key: 'Pacific Standard Time',\r\n    text: t(strings.scheduling.time_zone.Pacific),\r\n  },\r\n  {\r\n    key: 'Pacific Standard Time (Mexico)',\r\n    text: t(strings.scheduling.time_zone.Pacific_Mexico),\r\n  },\r\n  {\r\n    key: 'Mountain Standard Time',\r\n    text: t(strings.scheduling.time_zone.Mountain),\r\n  },\r\n  {\r\n    key: 'Mountain Standard Time (Mexico)',\r\n    text: t(strings.scheduling.time_zone.Mountain_Mexico),\r\n  },\r\n  {\r\n    key: 'US Mountain Standard Time',\r\n    text: t(strings.scheduling.time_zone.US_Mountain),\r\n  },\r\n  {\r\n    key: 'Canada Central Standard Time',\r\n    text: t(strings.scheduling.time_zone.Canada_Central),\r\n  },\r\n  {\r\n    key: 'Central America Standard Time',\r\n    text: t(strings.scheduling.time_zone.Central_America),\r\n  },\r\n  {\r\n    key: 'Central Standard Time',\r\n    text: t(strings.scheduling.time_zone.Central),\r\n  },\r\n  {\r\n    key: 'Central Standard Time (Mexico)',\r\n    text: t(strings.scheduling.time_zone.Central_Mexico),\r\n  },\r\n  {\r\n    key: 'Eastern Standard Time',\r\n    text: t(strings.scheduling.time_zone.Eastern),\r\n  },\r\n  {\r\n    key: 'SA Pacific Standard Time',\r\n    text: t(strings.scheduling.time_zone.SA_Pacific),\r\n  },\r\n  {\r\n    key: 'US Eastern Standard Time',\r\n    text: t(strings.scheduling.time_zone.US_Eastern),\r\n  },\r\n  {\r\n    key: 'Venezuela Standard Time',\r\n    text: t(strings.scheduling.time_zone.Venezuela),\r\n  },\r\n  {\r\n    key: 'Atlantic Standard Time',\r\n    text: t(strings.scheduling.time_zone.Atlantic),\r\n  },\r\n  {\r\n    key: 'Central Brazilian Standard Time',\r\n    text: t(strings.scheduling.time_zone.Central_Brazilian),\r\n  },\r\n  {\r\n    key: 'Pacific SA Standard Time',\r\n    text: t(strings.scheduling.time_zone.Pacific_SA),\r\n  },\r\n  {\r\n    key: 'SA Western Standard Time',\r\n    text: t(strings.scheduling.time_zone.SA_Western),\r\n  },\r\n  {\r\n    key: 'Paraguay Standard Time',\r\n    text: t(strings.scheduling.time_zone.Paraguay),\r\n  },\r\n  {\r\n    key: 'Newfoundland Standard Time',\r\n    text: t(strings.scheduling.time_zone.Newfoundland),\r\n  },\r\n  {\r\n    key: 'E. South America Standard Time',\r\n    text: t(strings.scheduling.time_zone.E_South_America),\r\n  },\r\n  {\r\n    key: 'Greenland Standard Time',\r\n    text: t(strings.scheduling.time_zone.Greenland),\r\n  },\r\n  {\r\n    key: 'Montevideo Standard Time',\r\n    text: t(strings.scheduling.time_zone.Montevideo),\r\n  },\r\n  {\r\n    key: 'SA Eastern Standard Time',\r\n    text: t(strings.scheduling.time_zone.SA_Eastern),\r\n  },\r\n  {\r\n    key: 'Argentina Standard Time',\r\n    text: t(strings.scheduling.time_zone.Argentina),\r\n  },\r\n  {\r\n    key: 'Mid-Atlantic Standard Time',\r\n    text: t(strings.scheduling.time_zone.Mid_Atlantic),\r\n  },\r\n  {\r\n    key: 'UTC-02',\r\n    text: t(strings.scheduling.time_zone.UTC_Minus_2),\r\n  },\r\n  {\r\n    key: 'Azores Standard Time',\r\n    text: t(strings.scheduling.time_zone.Azores),\r\n  },\r\n\r\n  {\r\n    key: 'GMT Standard Time',\r\n    text: t(strings.scheduling.time_zone.GMT),\r\n  },\r\n  {\r\n    key: 'Greenwich Standard Time',\r\n    text: t(strings.scheduling.time_zone.Greenwich),\r\n  },\r\n  {\r\n    key: 'Morocco Standard Time',\r\n    text: t(strings.scheduling.time_zone.Morocco),\r\n  },\r\n  {\r\n    key: 'UTC',\r\n    text: t(strings.scheduling.time_zone.UTC),\r\n  },\r\n  {\r\n    key: 'Central Europe Standard Time',\r\n    text: t(strings.scheduling.time_zone.Central_Europe),\r\n  },\r\n  {\r\n    key: 'Central European Standard Time',\r\n    text: t(strings.scheduling.time_zone.Central_European),\r\n  },\r\n  {\r\n    key: 'Romance Standard Time',\r\n    text: t(strings.scheduling.time_zone.Romance),\r\n  },\r\n  {\r\n    key: 'W. Central Africa Standard Time',\r\n    text: t(strings.scheduling.time_zone.W_Central_Africa),\r\n  },\r\n  {\r\n    key: 'W. Europe Standard Time',\r\n    text: t(strings.scheduling.time_zone.W_Europe),\r\n  },\r\n  {\r\n    key: 'Namibia Standard Time',\r\n    text: t(strings.scheduling.time_zone.Namibia),\r\n  },\r\n  {\r\n    key: 'E. Europe Standard Time',\r\n    text: t(strings.scheduling.time_zone.E_Europe),\r\n  },\r\n  {\r\n    key: 'Egypt Standard Time',\r\n    text: t(strings.scheduling.time_zone.Egypt),\r\n  },\r\n  {\r\n    key: 'FLE Standard Time',\r\n    text: t(strings.scheduling.time_zone.FLE),\r\n  },\r\n  {\r\n    key: 'GTB Standard Time',\r\n    text: t(strings.scheduling.time_zone.GTB),\r\n  },\r\n  {\r\n    key: 'Israel Standard Time',\r\n    text: t(strings.scheduling.time_zone.Israel),\r\n  },\r\n  {\r\n    key: 'Jordan Standard Time',\r\n    text: t(strings.scheduling.time_zone.Jordan),\r\n  },\r\n  {\r\n    key: 'Middle East Standard Time',\r\n    text: t(strings.scheduling.time_zone.Middle_East),\r\n  },\r\n  {\r\n    key: 'South Africa Standard Time',\r\n    text: t(strings.scheduling.time_zone.South_Africa),\r\n  },\r\n  {\r\n    key: 'Syria Standard Time',\r\n    text: t(strings.scheduling.time_zone.Syria),\r\n  },\r\n  {\r\n    key: 'Turkey Standard Time',\r\n    text: t(strings.scheduling.time_zone.Turkey),\r\n  },\r\n  {\r\n    key: 'Arab Standard Time',\r\n    text: t(strings.scheduling.time_zone.Arab),\r\n  },\r\n  {\r\n    key: 'Arabic Standard Time',\r\n    text: t(strings.scheduling.time_zone.Arabic),\r\n  },\r\n  {\r\n    key: 'E. Africa Standard Time',\r\n    text: t(strings.scheduling.time_zone.E_Africa),\r\n  },\r\n  {\r\n    key: 'Kaliningrad Standard Time',\r\n    text: t(strings.scheduling.time_zone.Kaliningrad),\r\n  },\r\n  {\r\n    key: 'Iran Standard Time',\r\n    text: t(strings.scheduling.time_zone.Iran),\r\n  },\r\n  {\r\n    key: 'Russian Standard Time',\r\n    text: t(strings.scheduling.time_zone.Russian),\r\n  },\r\n  {\r\n    key: 'Arabian Standard Time',\r\n    text: t(strings.scheduling.time_zone.Arabian),\r\n  },\r\n  {\r\n    key: 'Azerbaijan Standard Time',\r\n    text: t(strings.scheduling.time_zone.Azerbaijan),\r\n  },\r\n  {\r\n    key: 'Caucasus Standard Time',\r\n    text: t(strings.scheduling.time_zone.Caucasus),\r\n  },\r\n  {\r\n    key: 'Georgian Standard Time',\r\n    text: t(strings.scheduling.time_zone.Georgian),\r\n  },\r\n  {\r\n    key: 'Mauritius Standard Time',\r\n    text: t(strings.scheduling.time_zone.Mauritius),\r\n  },\r\n  {\r\n    key: 'Afghanistan Standard Time',\r\n    text: t(strings.scheduling.time_zone.Afghanistan),\r\n  },\r\n  {\r\n    key: 'West Asia Standard Time',\r\n    text: t(strings.scheduling.time_zone.West_Asia),\r\n  },\r\n  {\r\n    key: 'Pakistan Standard Time',\r\n    text: t(strings.scheduling.time_zone.Pakistan),\r\n  },\r\n  {\r\n    key: 'India Standard Time',\r\n    text: t(strings.scheduling.time_zone.India),\r\n  },\r\n  {\r\n    key: 'Sri Lanka Standard Time',\r\n    text: t(strings.scheduling.time_zone.Sri_Lanka),\r\n  },\r\n  {\r\n    key: 'Nepal Standard Time',\r\n    text: t(strings.scheduling.time_zone.Nepal),\r\n  },\r\n  {\r\n    key: 'Ekaterinburg Standard Time',\r\n    text: t(strings.scheduling.time_zone.Ekaterinburg),\r\n  },\r\n  {\r\n    key: 'Central Asia Standard Time',\r\n    text: t(strings.scheduling.time_zone.Central_Asia),\r\n  },\r\n  {\r\n    key: 'Bangladesh Standard Time',\r\n    text: t(strings.scheduling.time_zone.Bangladesh),\r\n  },\r\n  {\r\n    key: 'Myanmar Standard Time',\r\n    text: t(strings.scheduling.time_zone.Myanmar),\r\n  },\r\n  {\r\n    key: 'N. Central Asia Standard Time',\r\n    text: t(strings.scheduling.time_zone.N_Central_Asia),\r\n  },\r\n  {\r\n    key: 'SE Asia Standard Time',\r\n    text: t(strings.scheduling.time_zone.SE_Asia),\r\n  },\r\n  {\r\n    key: 'North Asia Standard Time',\r\n    text: t(strings.scheduling.time_zone.North_Asia),\r\n  },\r\n  {\r\n    key: 'China Standard Time',\r\n    text: t(strings.scheduling.time_zone.China),\r\n  },\r\n  {\r\n    key: 'Singapore Standard Time',\r\n    text: t(strings.scheduling.time_zone.Singapore),\r\n  },\r\n  {\r\n    key: 'Taipei Standard Time',\r\n    text: t(strings.scheduling.time_zone.Taipei),\r\n  },\r\n  {\r\n    key: 'W. Australia Standard Time',\r\n    text: t(strings.scheduling.time_zone.W_Australia),\r\n  },\r\n  {\r\n    key: 'Ulaanbaatar Standard Time',\r\n    text: t(strings.scheduling.time_zone.Ulaanbaatar),\r\n  },\r\n  {\r\n    key: 'North Asia East Standard Time',\r\n    text: t(strings.scheduling.time_zone.North_Asia),\r\n  },\r\n  {\r\n    key: 'Korea Standard Time',\r\n    text: t(strings.scheduling.time_zone.Korea),\r\n  },\r\n  {\r\n    key: 'Tokyo Standard Time',\r\n    text: t(strings.scheduling.time_zone.Tokyo),\r\n  },\r\n  {\r\n    key: 'AUS Central Standard Time',\r\n    text: t(strings.scheduling.time_zone.AUS_Central),\r\n  },\r\n  {\r\n    key: 'Cen. Australia Standard Time',\r\n    text: t(strings.scheduling.time_zone.Cen_Australia),\r\n  },\r\n  {\r\n    key: 'Yakutsk Standard Time',\r\n    text: t(strings.scheduling.time_zone.Yakutsk),\r\n  },\r\n  {\r\n    key: 'AUS Eastern Standard Time',\r\n    text: t(strings.scheduling.time_zone.AUS_Eastern),\r\n  },\r\n  {\r\n    key: 'E. Australia Standard Time',\r\n    text: t(strings.scheduling.time_zone.E_Australia),\r\n  },\r\n  {\r\n    key: 'Tasmania Standard Time',\r\n    text: t(strings.scheduling.time_zone.Tasmania),\r\n  },\r\n  {\r\n    key: 'West Pacific Standard Time',\r\n    text: t(strings.scheduling.time_zone.West_Pacific),\r\n  },\r\n  {\r\n    key: 'Vladivostok Standard Time',\r\n    text: t(strings.scheduling.time_zone.Vladivostok),\r\n  },\r\n  {\r\n    key: 'Central Pacific Standard Time',\r\n    text: t(strings.scheduling.time_zone.Central_Pacific),\r\n  },\r\n  {\r\n    key: 'Magadan Standard Time',\r\n    text: t(strings.scheduling.time_zone.Magadan),\r\n  },\r\n  {\r\n    key: 'Fiji Standard Time',\r\n    text: t(strings.scheduling.time_zone.Fiji),\r\n  },\r\n  {\r\n    key: 'New Zealand Standard Time',\r\n    text: t(strings.scheduling.time_zone.New_Zealand),\r\n  },\r\n  {\r\n    key: 'UTC+12',\r\n    text: t(strings.scheduling.time_zone.UTC_Plus_12),\r\n  },\r\n  {\r\n    key: 'Tonga Standard Time',\r\n    text: t(strings.scheduling.time_zone.Tonga),\r\n  },\r\n];\r\n\r\n/**\r\n * This function is copied from https://dev.azure.com/powerbi/_git/PowerBIClients?path=/trident/libs/common/src/lib/timezone/timezone-util.ts&version=GBmaster&line=225&lineEnd=225&lineStartColumn=20&lineEndColumn=42&lineStyle=plain&_a=contents.\r\n * since `@trident/common` is not exported as a package.\r\n *\r\n * This function uses summer and winter offset to determine local time zone.\r\n * The result `localTimeZoneString` must be a subset of the strings used by server,\r\n * as documented here: https://msdn.microsoft.com/en-us/library/gg154758.aspx\r\n * @return Local timezone string or UTC if timezone cannot be found.\r\n */\r\nexport function getLocalTimeZoneString(): string {\r\n  const timeSummer = new Date(Date.UTC(2005, 6, 30, 0, 0, 0, 0));\r\n  const summerOffset = -1 * timeSummer.getTimezoneOffset();\r\n  const timeWinter = new Date(Date.UTC(2005, 12, 30, 0, 0, 0, 0));\r\n  const winterOffset = -1 * timeWinter.getTimezoneOffset();\r\n  let localTimeZoneString;\r\n\r\n  if (-720 === summerOffset && -720 === winterOffset) {\r\n    localTimeZoneString = 'Dateline Standard Time';\r\n  } else if (-660 === summerOffset && -660 === winterOffset) {\r\n    localTimeZoneString = 'UTC-11';\r\n  } else if (-600 === summerOffset && -600 === winterOffset) {\r\n    localTimeZoneString = 'Hawaiian Standard Time';\r\n  } else if (-480 === summerOffset && -540 === winterOffset) {\r\n    localTimeZoneString = 'Alaskan Standard Time';\r\n  } else if (-420 === summerOffset && -480 === winterOffset) {\r\n    localTimeZoneString = 'Pacific Standard Time';\r\n  } else if (-420 === summerOffset && -420 === winterOffset) {\r\n    localTimeZoneString = 'US Mountain Standard Time';\r\n  } else if (-360 === summerOffset && -420 === winterOffset) {\r\n    localTimeZoneString = 'Mountain Standard Time';\r\n  } else if (-360 === summerOffset && -360 === winterOffset) {\r\n    localTimeZoneString = 'Central America Standard Time';\r\n  } else if (-300 === summerOffset && -360 === winterOffset) {\r\n    localTimeZoneString = 'Central Standard Time';\r\n  } else if (-300 === summerOffset && -300 === winterOffset) {\r\n    localTimeZoneString = 'SA Pacific Standard Time';\r\n  } else if (-240 === summerOffset && -300 === winterOffset) {\r\n    localTimeZoneString = 'Eastern Standard Time';\r\n  } else if (-270 === summerOffset && -270 === winterOffset) {\r\n    localTimeZoneString = 'Venezuela Standard Time';\r\n  } else if (-240 === summerOffset && -240 === winterOffset) {\r\n    localTimeZoneString = 'SA Western Standard Time';\r\n  } else if (-240 === summerOffset && -180 === winterOffset) {\r\n    localTimeZoneString = 'Central Brazilian Standard Time';\r\n  } else if (-180 === summerOffset && -240 === winterOffset) {\r\n    localTimeZoneString = 'Atlantic Standard Time';\r\n  } else if (-180 === summerOffset && -180 === winterOffset) {\r\n    localTimeZoneString = 'Montevideo Standard Time';\r\n  } else if (-180 === summerOffset && -120 === winterOffset) {\r\n    localTimeZoneString = 'E. South America Standard Time';\r\n  } else if (-150 === summerOffset && -210 === winterOffset) {\r\n    localTimeZoneString = 'Mid-Atlantic Standard Time';\r\n  } else if (-120 === summerOffset && -120 === winterOffset) {\r\n    localTimeZoneString = 'SA Eastern Standard Time';\r\n  } else if (0 === summerOffset && 0 === winterOffset) {\r\n    localTimeZoneString = 'UTC';\r\n  } else if (60 === summerOffset && 0 === winterOffset) {\r\n    localTimeZoneString = 'GMT Standard Time';\r\n  } else if (60 === summerOffset && 120 === winterOffset) {\r\n    localTimeZoneString = 'Namibia Standard Time';\r\n  } else if (120 === summerOffset && 60 === winterOffset) {\r\n    localTimeZoneString = 'Romance Standard Time';\r\n  } else if (120 === summerOffset && 120 === winterOffset) {\r\n    localTimeZoneString = 'South Africa Standard Time';\r\n  } else if (180 === summerOffset && 120 === winterOffset) {\r\n    localTimeZoneString = 'GTB Standard Time';\r\n  } else if (180 === summerOffset && 180 === winterOffset) {\r\n    localTimeZoneString = 'E. Africa Standard Time';\r\n  } else if (240 === summerOffset && 180 === winterOffset) {\r\n    localTimeZoneString = 'Russian Standard Time';\r\n  } else if (240 === summerOffset && 240 === winterOffset) {\r\n    localTimeZoneString = 'Arabian Standard Time';\r\n  } else if (270 === summerOffset && 210 === winterOffset) {\r\n    localTimeZoneString = 'Iran Standard Time';\r\n  } else if (270 === summerOffset && 270 === winterOffset) {\r\n    localTimeZoneString = 'Afghanistan Standard Time';\r\n  } else if (300 === summerOffset && 240 === winterOffset) {\r\n    localTimeZoneString = 'Pakistan Standard Time';\r\n  } else if (300 === summerOffset && 300 === winterOffset) {\r\n    localTimeZoneString = 'West Asia Standard Time';\r\n  } else if (330 === summerOffset && 330 === winterOffset) {\r\n    localTimeZoneString = 'India Standard Time';\r\n  } else if (345 === summerOffset && 345 === winterOffset) {\r\n    localTimeZoneString = 'Nepal Standard Time';\r\n  } else if (360 === summerOffset && 300 === winterOffset) {\r\n    localTimeZoneString = 'N. Central Asia Standard Time';\r\n  } else if (360 === summerOffset && 360 === winterOffset) {\r\n    localTimeZoneString = 'Central Asia Standard Time';\r\n  } else if (390 === summerOffset && 390 === winterOffset) {\r\n    localTimeZoneString = 'Myanmar Standard Time';\r\n  } else if (420 === summerOffset && 360 === winterOffset) {\r\n    localTimeZoneString = 'North Asia Standard Time';\r\n  } else if (420 === summerOffset && 420 === winterOffset) {\r\n    localTimeZoneString = 'SE Asia Standard Time';\r\n  } else if (480 === summerOffset && 420 === winterOffset) {\r\n    localTimeZoneString = 'North Asia East Standard Time';\r\n  } else if (480 === summerOffset && 480 === winterOffset) {\r\n    localTimeZoneString = 'China Standard Time';\r\n  } else if (540 === summerOffset && 480 === winterOffset) {\r\n    localTimeZoneString = 'Yakutsk Standard Time';\r\n  } else if (540 === summerOffset && 540 === winterOffset) {\r\n    localTimeZoneString = 'Tokyo Standard Time';\r\n  } else if (570 === summerOffset && 570 === winterOffset) {\r\n    localTimeZoneString = 'Cen. Australia Standard Time';\r\n  } else if (600 === summerOffset && 600 === winterOffset) {\r\n    localTimeZoneString = 'E. Australia Standard Time';\r\n  } else if (600 === summerOffset && 660 === winterOffset) {\r\n    localTimeZoneString = 'AUS Eastern Standard Time';\r\n  } else if (660 === summerOffset && 600 === winterOffset) {\r\n    localTimeZoneString = 'Tasmania Standard Time';\r\n  } else if (660 === summerOffset && 660 === winterOffset) {\r\n    localTimeZoneString = 'West Pacific Standard Time';\r\n  } else if (690 === summerOffset && 690 === winterOffset) {\r\n    localTimeZoneString = 'Central Pacific Standard Time';\r\n  } else if (720 === summerOffset && 660 === winterOffset) {\r\n    localTimeZoneString = 'Magadan Standard Time';\r\n  } else if (720 === summerOffset && 720 === winterOffset) {\r\n    localTimeZoneString = 'Fiji Standard Time';\r\n  } else if (720 === summerOffset && 780 === winterOffset) {\r\n    localTimeZoneString = 'New Zealand Standard Time';\r\n  } else if (780 === summerOffset && 780 === winterOffset) {\r\n    localTimeZoneString = 'Tonga Standard Time';\r\n  } else {\r\n    localTimeZoneString = 'UTC';\r\n  }\r\n  return localTimeZoneString;\r\n}\r\n","export function useURLQueryParms<T>() {\r\n  const url = location.search;\r\n  const query = url.substring(1);\r\n  const result: Record<string, string> = {};\r\n  query.split('&').forEach(function (part) {\r\n    const item = part.split('=');\r\n    result[item[0]] = decodeURIComponent(item[1]);\r\n  });\r\n  return result as T;\r\n}\r\n","import { TimeSeriesControlsParameters, TimeSeriesPointData } from '@do/core';\r\n\r\nconst default_startDate = new Date(2020, 0, 1).getTime(); // Jan 1, 2020\r\nconst default_endDate = new Date(2024, 3, 20).getTime(); // March 20, 2024\r\nconst startHour = 0;\r\nconst endHour = 23;\r\n\r\nconst getNextDate = (\r\n  total: number,\r\n  index: number,\r\n  startDate: number = default_startDate,\r\n  endDate: number = default_endDate,\r\n  binWidth?: number,\r\n) => {\r\n  if (binWidth) {\r\n    return new Date(startDate + binWidth * 1000 * index);\r\n  } else {\r\n    const percent = (endDate - startDate) * (index / total);\r\n    const date = new Date(startDate + percent);\r\n    const hour = (startHour + Math.random() * (endHour - startHour)) | 0;\r\n    date.setHours(hour);\r\n    return date;\r\n  }\r\n};\r\n\r\ninterface IRandomWalkOptions {\r\n  n: number;\r\n  startValue: number;\r\n  threshold: number;\r\n  stepSize: number;\r\n  minValue: number;\r\n  maxValue: number;\r\n}\r\n\r\nconst randomWalk = (options: IRandomWalkOptions) => {\r\n  const randomWalkValues = [];\r\n  let previousValue = options.startValue;\r\n  let probability = 0;\r\n  for (let i = 0; i < options.n; i++) {\r\n    if (previousValue <= options.minValue) {\r\n      previousValue = options.minValue + options.stepSize;\r\n    } else if (previousValue >= options.maxValue) {\r\n      previousValue = options.maxValue - options.stepSize;\r\n    }\r\n    probability = Math.random();\r\n    if (probability >= options.threshold) {\r\n      previousValue += options.stepSize;\r\n    } else {\r\n      previousValue -= options.stepSize;\r\n    }\r\n    randomWalkValues.push(previousValue);\r\n    previousValue = randomWalkValues[i];\r\n  }\r\n  return randomWalkValues;\r\n};\r\n\r\nconst getAmountOfDataPoints = (\r\n  filterOptions: TimeSeriesControlsParameters,\r\n): number => {\r\n  if (\r\n    filterOptions.dateTimeStart &&\r\n    filterOptions.dateTimeEnd &&\r\n    filterOptions.binWidth\r\n  ) {\r\n    return (\r\n      Math.abs(\r\n        new Date(filterOptions.dateTimeEnd).getTime() -\r\n          new Date(filterOptions.dateTimeStart).getTime(),\r\n      ) /\r\n      (filterOptions.binWidth * 1000)\r\n    ); // Seconds to milliseconds\r\n  }\r\n  return 1000;\r\n};\r\n\r\nconst generateMockTimeSeries = (\r\n  randomWalkOptions: IRandomWalkOptions,\r\n  filterOptions?: TimeSeriesControlsParameters,\r\n): TimeSeriesPointData[] => {\r\n  const mockData = [];\r\n  const amountOfDataPoints = filterOptions\r\n    ? getAmountOfDataPoints(filterOptions)\r\n    : randomWalkOptions.n;\r\n  const randomWalkValues = randomWalk(randomWalkOptions);\r\n  const startDate = filterOptions?.dateTimeStart\r\n    ? new Date(filterOptions?.dateTimeStart).getTime()\r\n    : undefined;\r\n  const endDate = filterOptions?.dateTimeEnd\r\n    ? new Date(filterOptions?.dateTimeEnd).getTime()\r\n    : undefined;\r\n  for (let i = 0; i < amountOfDataPoints; i++) {\r\n    mockData.push({\r\n      timestamp: getNextDate(\r\n        amountOfDataPoints,\r\n        i,\r\n        startDate,\r\n        endDate,\r\n        filterOptions?.binWidth,\r\n      ).getTime(),\r\n      value: randomWalkValues[i],\r\n    });\r\n  }\r\n  return mockData;\r\n};\r\n\r\nexport const generateMockTimeSeriesData = (\r\n  filterOptions?: TimeSeriesControlsParameters,\r\n): TimeSeriesPointData[] => {\r\n  return generateMockTimeSeries(\r\n    {\r\n      n: 1000,\r\n      startValue: 25,\r\n      threshold: 0.5,\r\n      stepSize: 2,\r\n      minValue: 0,\r\n      maxValue: 100,\r\n    },\r\n    filterOptions,\r\n  );\r\n};\r\n\r\nexport const generateMultipleTimeSeries = (\r\n  timeSeriesIds: string[],\r\n): Record<string, TimeSeriesPointData[]> => {\r\n  const timeseriesData: Record<string, TimeSeriesPointData[]> = {};\r\n  for (let i = 0; i < timeSeriesIds.length; i++) {\r\n    timeseriesData[timeSeriesIds[i]] = generateMockTimeSeriesData();\r\n  }\r\n  return timeseriesData;\r\n};\r\n","import React from 'react';\r\nimport { initializeLocalization } from '../../locale';\r\nimport {\r\n  ILocalizationContext,\r\n  LocalizationContextProviderProps,\r\n} from './LocalizationContext.types';\r\n\r\nexport const LocalizationContext =\r\n  React.createContext<ILocalizationContext | null>(null);\r\n\r\nexport const useLocalizationContext = () => {\r\n  const context = React.useContext(LocalizationContext);\r\n  // istanbul ignore next\r\n  if (!context) {\r\n    throw new Error(\r\n      'useLocalizationContext must be used within a LocalizationContextProvider',\r\n    );\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LocalizationContextProvider = React.memo(\r\n  ({\r\n    children,\r\n    locale,\r\n  }: React.PropsWithChildren<LocalizationContextProviderProps>) => {\r\n    // state\r\n    const [i18n, setI18n] = React.useState(() =>\r\n      initializeLocalization(locale),\r\n    );\r\n\r\n    // side effects\r\n    React.useEffect(() => setI18n(initializeLocalization(locale)), [locale]);\r\n\r\n    return (\r\n      <LocalizationContext.Provider\r\n        value={React.useMemo(\r\n          () => ({\r\n            i18n,\r\n          }),\r\n          [i18n],\r\n        )}\r\n      >\r\n        {children}\r\n      </LocalizationContext.Provider>\r\n    );\r\n  },\r\n);\r\n","import { i18n } from 'i18next';\r\n\r\nexport type ILocalizationContext = {\r\n  i18n: i18n;\r\n};\r\nexport type LocalizationContextState = ILocalizationContext;\r\n\r\nexport interface LocalizationContextProviderProps {\r\n  locale: string;\r\n}\r\n\r\nexport enum LocalizationContextActionType {\r\n  SET_I18N = 'SET_I18N',\r\n}\r\n\r\nexport type LocalizationContextAction = {\r\n  type: LocalizationContextActionType.SET_I18N;\r\n  i18n: i18n;\r\n};\r\n","import { LocalizationContextState } from '../LocalizationContext.types';\r\nimport * as LocalizationContext from '../LocalizationContext';\r\nimport { i18n } from 'i18next';\r\n\r\nexport const initializeMockLocalizationContext = (language = 'en-US') => {\r\n  const mockContextState: LocalizationContextState = {\r\n    i18n: {\r\n      language,\r\n    } as i18n,\r\n  };\r\n\r\n  jest\r\n    .spyOn(LocalizationContext, 'useLocalizationContext')\r\n    .mockReturnValue(mockContextState);\r\n\r\n  return mockContextState;\r\n};\r\n","export * from './LocalizationContext';\r\nexport * from './__mocks__/LocalizationContext.mock';\r\nexport * from './LocalizationContext.types';\r\n","export * from './LocalizationContext';\r\n","import strings from './resourceKeys';\r\nexport { initializeLocalization } from './locale';\r\nexport * from './components';\r\nexport { strings };\r\nexport { t } from './t';\r\nexport { Trans } from 'react-i18next';\r\nexport { TFunction } from 'i18next';\r\n","import { getLogger } from '@do/core';\r\nimport i18n, { InitOptions } from 'i18next';\r\nimport Pseudo from 'i18next-pseudo';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst MODULE_NAME = 'Localization';\r\n\r\n// Azure_Languages\r\nconst supportedLanguages = [\r\n  'ar',\r\n  'bg',\r\n  'ca',\r\n  'cs',\r\n  'da',\r\n  'de',\r\n  'el',\r\n  'es',\r\n  'et',\r\n  'eu',\r\n  'fi',\r\n  'fr',\r\n  'gl',\r\n  'he',\r\n  'hi',\r\n  'hr',\r\n  'hu',\r\n  'id',\r\n  'it',\r\n  'ja',\r\n  'kk',\r\n  'ko',\r\n  'lt',\r\n  'lv',\r\n  'ms',\r\n  'nl',\r\n  'no',\r\n  'pl',\r\n  'pt-BR',\r\n  'pt-PT',\r\n  'ro',\r\n  'ru',\r\n  'sk',\r\n  'sl',\r\n  'sr-Cyrl-RS',\r\n  'sr-Latn-RS',\r\n  'sv',\r\n  'th',\r\n  'tr',\r\n  'uk',\r\n  'vi',\r\n  'zh-Hans',\r\n  'zh-Hant',\r\n];\r\n\r\nconst DEFAULT_LOCALE = 'en-US';\r\n\r\nexport const initializeLocalization = (\r\n  languageLocale: string = DEFAULT_LOCALE,\r\n) => {\r\n  const language =\r\n    supportedLanguages.find(\r\n      (language) => language.toLowerCase() === languageLocale.toLowerCase(),\r\n    ) || DEFAULT_LOCALE;\r\n\r\n  if (languageLocale !== language) {\r\n    getLogger().warn(\r\n      MODULE_NAME,\r\n      `Locale ${languageLocale} not found. Using default`,\r\n    );\r\n  }\r\n\r\n  let translation;\r\n  try {\r\n    translation = require(`./locales/strings.${language}.json`);\r\n  } catch (_err) {\r\n    getLogger().warn(\r\n      MODULE_NAME,\r\n      `Locale ${languageLocale} failed to load. Using default`,\r\n      _err,\r\n    );\r\n    translation = require(`./strings.json`);\r\n  }\r\n\r\n  if (language) {\r\n    const initConfig: InitOptions = {\r\n      lng: language,\r\n      postProcess: ['pseudo'],\r\n      debug: process.env.NODE_ENV === 'development',\r\n      resources: {\r\n        [language]: {\r\n          translation,\r\n        },\r\n      },\r\n    };\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n      i18n.use(\r\n        new Pseudo({\r\n          enabled: true,\r\n        }),\r\n      );\r\n    }\r\n\r\n    i18n.use(initReactI18next).init(initConfig);\r\n  }\r\n\r\n  return i18n;\r\n};\r\n","export default class ResourceKeys {\r\n    public static artifacts = {\r\n      operational_insights : {\r\n         create : {\r\n            artifact_name_label : 'artifacts.operational_insights.create.artifact_name_label',\r\n            artifact_name_placeholder : 'artifacts.operational_insights.create.artifact_name_placeholder',\r\n            title_create : 'artifacts.operational_insights.create.title_create',\r\n            title_edit : 'artifacts.operational_insights.create.title_edit',\r\n            workspace_id_label : 'artifacts.operational_insights.create.workspace_id_label',\r\n            workspace_id_placeholder : 'artifacts.operational_insights.create.workspace_id_placeholder',\r\n         },\r\n         edit : {\r\n            asset_tree : {\r\n               no_data_message : 'artifacts.operational_insights.edit.asset_tree.no_data_message',\r\n            },\r\n            explorer_title : 'artifacts.operational_insights.edit.explorer_title',\r\n            filter_placeholder : 'artifacts.operational_insights.edit.filter_placeholder',\r\n         },\r\n      },\r\n      prepare : {\r\n         contextualize : {\r\n            contextualization_jobs : {\r\n               create_contextualization_job : 'artifacts.prepare.contextualize.contextualization_jobs.create_contextualization_job',\r\n               empty : {\r\n                  header : 'artifacts.prepare.contextualize.contextualization_jobs.empty.header',\r\n                  subtitle : 'artifacts.prepare.contextualize.contextualization_jobs.empty.subtitle',\r\n               },\r\n            },\r\n         },\r\n         group_details : {\r\n            interface : {\r\n               group_id : 'artifacts.prepare.group_details.interface.group_id',\r\n               group_name : 'artifacts.prepare.group_details.interface.group_name',\r\n               title : 'artifacts.prepare.group_details.interface.title',\r\n            },\r\n            properties : {\r\n               empty : 'artifacts.prepare.group_details.properties.empty',\r\n               name : 'artifacts.prepare.group_details.properties.name',\r\n               title : 'artifacts.prepare.group_details.properties.title',\r\n               value_type : 'artifacts.prepare.group_details.properties.value_type',\r\n            },\r\n            telemetry : {\r\n               empty : 'artifacts.prepare.group_details.telemetry.empty',\r\n               id : 'artifacts.prepare.group_details.telemetry.id',\r\n               title : 'artifacts.prepare.group_details.telemetry.title',\r\n               value_type : 'artifacts.prepare.group_details.telemetry.value_type',\r\n            },\r\n            view_group_details : {\r\n               group_description : 'artifacts.prepare.group_details.view_group_details.group_description',\r\n               group_name : 'artifacts.prepare.group_details.view_group_details.group_name',\r\n               subtitle : 'artifacts.prepare.group_details.view_group_details.subtitle',\r\n               title : 'artifacts.prepare.group_details.view_group_details.title',\r\n            },\r\n         },\r\n         group_filter_configuration : {\r\n            group_filter_labels : {\r\n               group_name : 'artifacts.prepare.group_filter_configuration.group_filter_labels.group_name',\r\n            },\r\n            place_holder : {\r\n               group_name_placeholder : 'artifacts.prepare.group_filter_configuration.place_holder.group_name_placeholder',\r\n               group_validation_message : 'artifacts.prepare.group_filter_configuration.place_holder.group_validation_message',\r\n            },\r\n         },\r\n         grouping : {\r\n            grouping_jobs : 'artifacts.prepare.grouping.grouping_jobs',\r\n            groups : 'artifacts.prepare.grouping.groups',\r\n            job_history : 'artifacts.prepare.grouping.job_history',\r\n            title : 'artifacts.prepare.grouping.title',\r\n            twins : 'artifacts.prepare.grouping.twins',\r\n         },\r\n         groups : {\r\n            empty_state : 'artifacts.prepare.groups.empty_state',\r\n            group_created_date : 'artifacts.prepare.groups.group_created_date',\r\n            group_details : 'artifacts.prepare.groups.group_details',\r\n            group_id : 'artifacts.prepare.groups.group_id',\r\n            group_name : 'artifacts.prepare.groups.group_name',\r\n         },\r\n         job : {\r\n            actions : 'artifacts.prepare.job.actions',\r\n            empty : 'artifacts.prepare.job.empty',\r\n            history : {\r\n               duration : 'artifacts.prepare.job.history.duration',\r\n               end_time : 'artifacts.prepare.job.history.end_time',\r\n               job_created_time : 'artifacts.prepare.job.history.job_created_time',\r\n               job_details : 'artifacts.prepare.job.history.job_details',\r\n               job_details_info : 'artifacts.prepare.job.history.job_details_info',\r\n               job_details_text : 'artifacts.prepare.job.history.job_details_text',\r\n               title : 'artifacts.prepare.job.history.title',\r\n            },\r\n            job_name : 'artifacts.prepare.job.job_name',\r\n            last_run_status : 'artifacts.prepare.job.last_run_status',\r\n            last_run_time : 'artifacts.prepare.job.last_run_time',\r\n            schedule : 'artifacts.prepare.job.schedule',\r\n            title : 'artifacts.prepare.job.title',\r\n         },\r\n         mapping : {\r\n            delete : {\r\n               delete_failed_message : 'artifacts.prepare.mapping.delete.delete_failed_message',\r\n               delete_failed_title : 'artifacts.prepare.mapping.delete.delete_failed_title',\r\n               deleted_message : 'artifacts.prepare.mapping.delete.deleted_message',\r\n               deleted_title : 'artifacts.prepare.mapping.delete.deleted_title',\r\n               deleting_message : 'artifacts.prepare.mapping.delete.deleting_message',\r\n               deleting_title : 'artifacts.prepare.mapping.delete.deleting_title',\r\n               subtitle : 'artifacts.prepare.mapping.delete.subtitle',\r\n               title : 'artifacts.prepare.mapping.delete.title',\r\n               warning : 'artifacts.prepare.mapping.delete.warning',\r\n            },\r\n            empty : 'artifacts.prepare.mapping.empty',\r\n            empty_table_columns_title : 'artifacts.prepare.mapping.empty_table_columns_title',\r\n            empty_table_data_title : 'artifacts.prepare.mapping.empty_table_data_title',\r\n            empty_table_description : 'artifacts.prepare.mapping.empty_table_description',\r\n            new : 'artifacts.prepare.mapping.new',\r\n            scheduling : {\r\n               daily : 'artifacts.prepare.mapping.scheduling.daily',\r\n               hourly : 'artifacts.prepare.mapping.scheduling.hourly',\r\n               minutes : 'artifacts.prepare.mapping.scheduling.minutes',\r\n               weekly : 'artifacts.prepare.mapping.scheduling.weekly',\r\n            },\r\n            source_table : 'artifacts.prepare.mapping.source_table',\r\n            subtitle : 'artifacts.prepare.mapping.subtitle',\r\n            wizard : {\r\n               steps : {\r\n                  data_category : {\r\n                     activities : {\r\n                        description : 'artifacts.prepare.mapping.wizard.steps.data_category.activities.description',\r\n                        examples : 'artifacts.prepare.mapping.wizard.steps.data_category.activities.examples',\r\n                        title : 'artifacts.prepare.mapping.wizard.steps.data_category.activities.title',\r\n                     },\r\n                     activity_type_label : 'artifacts.prepare.mapping.wizard.steps.data_category.activity_type_label',\r\n                     activity_type_label_empty_error : 'artifacts.prepare.mapping.wizard.steps.data_category.activity_type_label_empty_error',\r\n                     activity_type_label_hint : 'artifacts.prepare.mapping.wizard.steps.data_category.activity_type_label_hint',\r\n                     data_category : 'artifacts.prepare.mapping.wizard.steps.data_category.data_category',\r\n                     data_category_description : 'artifacts.prepare.mapping.wizard.steps.data_category.data_category_description',\r\n                     data_category_info : 'artifacts.prepare.mapping.wizard.steps.data_category.data_category_info',\r\n                     data_source : 'artifacts.prepare.mapping.wizard.steps.data_category.data_source',\r\n                     data_source_info : 'artifacts.prepare.mapping.wizard.steps.data_category.data_source_info',\r\n                     events : {\r\n                        description : 'artifacts.prepare.mapping.wizard.steps.data_category.events.description',\r\n                        examples : 'artifacts.prepare.mapping.wizard.steps.data_category.events.examples',\r\n                        title : 'artifacts.prepare.mapping.wizard.steps.data_category.events.title',\r\n                     },\r\n                     examples : 'artifacts.prepare.mapping.wizard.steps.data_category.examples',\r\n                     hierarchy : {\r\n                        description : 'artifacts.prepare.mapping.wizard.steps.data_category.hierarchy.description',\r\n                        examples : 'artifacts.prepare.mapping.wizard.steps.data_category.hierarchy.examples',\r\n                        title : 'artifacts.prepare.mapping.wizard.steps.data_category.hierarchy.title',\r\n                     },\r\n                     job_name_empty_error : 'artifacts.prepare.mapping.wizard.steps.data_category.job_name_empty_error',\r\n                     job_name_info : 'artifacts.prepare.mapping.wizard.steps.data_category.job_name_info',\r\n                     job_name_placeholder : 'artifacts.prepare.mapping.wizard.steps.data_category.job_name_placeholder',\r\n                     tags : {\r\n                        description : 'artifacts.prepare.mapping.wizard.steps.data_category.tags.description',\r\n                        examples : 'artifacts.prepare.mapping.wizard.steps.data_category.tags.examples',\r\n                        title : 'artifacts.prepare.mapping.wizard.steps.data_category.tags.title',\r\n                     },\r\n                     time_series : {\r\n                        description : 'artifacts.prepare.mapping.wizard.steps.data_category.time_series.description',\r\n                        examples : 'artifacts.prepare.mapping.wizard.steps.data_category.time_series.examples',\r\n                        title : 'artifacts.prepare.mapping.wizard.steps.data_category.time_series.title',\r\n                     },\r\n                     title : 'artifacts.prepare.mapping.wizard.steps.data_category.title',\r\n                  },\r\n                  data_source : {\r\n                     lakehouse_dropdown_label : 'artifacts.prepare.mapping.wizard.steps.data_source.lakehouse_dropdown_label',\r\n                     lakehouse_dropdown_placeholder : 'artifacts.prepare.mapping.wizard.steps.data_source.lakehouse_dropdown_placeholder',\r\n                     lakehouse_empty_error : 'artifacts.prepare.mapping.wizard.steps.data_source.lakehouse_empty_error',\r\n                     lakehouse_info : 'artifacts.prepare.mapping.wizard.steps.data_source.lakehouse_info',\r\n                     lakehouse_undefined_error : 'artifacts.prepare.mapping.wizard.steps.data_source.lakehouse_undefined_error',\r\n                     source_preview : 'artifacts.prepare.mapping.wizard.steps.data_source.source_preview',\r\n                     table_dropdown_label : 'artifacts.prepare.mapping.wizard.steps.data_source.table_dropdown_label',\r\n                     table_dropdown_placeholder : 'artifacts.prepare.mapping.wizard.steps.data_source.table_dropdown_placeholder',\r\n                     table_empty_error : 'artifacts.prepare.mapping.wizard.steps.data_source.table_empty_error',\r\n                     title : 'artifacts.prepare.mapping.wizard.steps.data_source.title',\r\n                     workspace_dropdown_label : 'artifacts.prepare.mapping.wizard.steps.data_source.workspace_dropdown_label',\r\n                     workspace_dropdown_placeholder : 'artifacts.prepare.mapping.wizard.steps.data_source.workspace_dropdown_placeholder',\r\n                     workspace_empty_error : 'artifacts.prepare.mapping.wizard.steps.data_source.workspace_empty_error',\r\n                     workspace_info : 'artifacts.prepare.mapping.wizard.steps.data_source.workspace_info',\r\n                  },\r\n                  define_mapping : {\r\n                     category : 'artifacts.prepare.mapping.wizard.steps.define_mapping.category',\r\n                     column : {\r\n                        asset_id : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.asset_id',\r\n                        description : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.description',\r\n                        id : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.id',\r\n                        message : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.message',\r\n                        name : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.name',\r\n                        path : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.path',\r\n                        properties : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.properties',\r\n                        severity : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.severity',\r\n                        source : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.source',\r\n                        timestamp : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.timestamp',\r\n                        type : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.type',\r\n                        units : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.units',\r\n                        value : 'artifacts.prepare.mapping.wizard.steps.define_mapping.column.value',\r\n                     },\r\n                     description : 'artifacts.prepare.mapping.wizard.steps.define_mapping.description',\r\n                     empty_validation_message : 'artifacts.prepare.mapping.wizard.steps.define_mapping.empty_validation_message',\r\n                     loading_message : 'artifacts.prepare.mapping.wizard.steps.define_mapping.loading_message',\r\n                     mapping_configuration : 'artifacts.prepare.mapping.wizard.steps.define_mapping.mapping_configuration',\r\n                     path_delimiter : 'artifacts.prepare.mapping.wizard.steps.define_mapping.path_delimiter',\r\n                     path_delimiter_validation_message : 'artifacts.prepare.mapping.wizard.steps.define_mapping.path_delimiter_validation_message',\r\n                     source : 'artifacts.prepare.mapping.wizard.steps.define_mapping.source',\r\n                     source_preview : 'artifacts.prepare.mapping.wizard.steps.define_mapping.source_preview',\r\n                     table_details_error : 'artifacts.prepare.mapping.wizard.steps.define_mapping.table_details_error',\r\n                     title : 'artifacts.prepare.mapping.wizard.steps.define_mapping.title',\r\n                  },\r\n                  preview_mapping : 'artifacts.prepare.mapping.wizard.steps.preview_mapping',\r\n                  scheduling : {\r\n                     incremental_mapping_info : 'artifacts.prepare.mapping.wizard.steps.scheduling.incremental_mapping_info',\r\n                     incremental_mapping_label : 'artifacts.prepare.mapping.wizard.steps.scheduling.incremental_mapping_label',\r\n                     invalid_wizard_error : 'artifacts.prepare.mapping.wizard.steps.scheduling.invalid_wizard_error',\r\n                     loading_message : 'artifacts.prepare.mapping.wizard.steps.scheduling.loading_message',\r\n                     minutes_dropdown_aria_label : 'artifacts.prepare.mapping.wizard.steps.scheduling.minutes_dropdown_aria_label',\r\n                     no_client_error_message : 'artifacts.prepare.mapping.wizard.steps.scheduling.no_client_error_message',\r\n                     reset_button_label : 'artifacts.prepare.mapping.wizard.steps.scheduling.reset_button_label',\r\n                     run_on_save_info : 'artifacts.prepare.mapping.wizard.steps.scheduling.run_on_save_info',\r\n                     run_on_save_label : 'artifacts.prepare.mapping.wizard.steps.scheduling.run_on_save_label',\r\n                     save_and_run : 'artifacts.prepare.mapping.wizard.steps.scheduling.save_and_run',\r\n                     title : 'artifacts.prepare.mapping.wizard.steps.scheduling.title',\r\n                     unit_of_time_dropdown_aria_label : 'artifacts.prepare.mapping.wizard.steps.scheduling.unit_of_time_dropdown_aria_label',\r\n                  },\r\n                  start : {\r\n                     content : 'artifacts.prepare.mapping.wizard.steps.start.content',\r\n                     content_title : 'artifacts.prepare.mapping.wizard.steps.start.content_title',\r\n                     link : 'artifacts.prepare.mapping.wizard.steps.start.link',\r\n                     title : 'artifacts.prepare.mapping.wizard.steps.start.title',\r\n                  },\r\n               },\r\n            },\r\n         },\r\n         page_tabs : {\r\n            home : 'artifacts.prepare.page_tabs.home',\r\n            staging : 'artifacts.prepare.page_tabs.staging',\r\n            twin_groups : 'artifacts.prepare.page_tabs.twin_groups',\r\n         },\r\n         prepare_ribbon : {\r\n            button_titles : {\r\n               contextualize : 'artifacts.prepare.prepare_ribbon.button_titles.contextualize',\r\n               generate_groups : 'artifacts.prepare.prepare_ribbon.button_titles.generate_groups',\r\n               get_data : 'artifacts.prepare.prepare_ribbon.button_titles.get_data',\r\n               mappings : 'artifacts.prepare.prepare_ribbon.button_titles.mappings',\r\n               more_options : 'artifacts.prepare.prepare_ribbon.button_titles.more_options',\r\n               refresh : 'artifacts.prepare.prepare_ribbon.button_titles.refresh',\r\n               settings : 'artifacts.prepare.prepare_ribbon.button_titles.settings',\r\n            },\r\n            generate_groups_menu_items : {\r\n               generate_groups : 'artifacts.prepare.prepare_ribbon.generate_groups_menu_items.generate_groups',\r\n               view_groups : 'artifacts.prepare.prepare_ribbon.generate_groups_menu_items.view_groups',\r\n               view_past_jobs : 'artifacts.prepare.prepare_ribbon.generate_groups_menu_items.view_past_jobs',\r\n               view_twins : 'artifacts.prepare.prepare_ribbon.generate_groups_menu_items.view_twins',\r\n            },\r\n            get_data_menu_items : {\r\n               alice_springs_connector : 'artifacts.prepare.prepare_ribbon.get_data_menu_items.alice_springs_connector',\r\n               new_data_pipeline : 'artifacts.prepare.prepare_ribbon.get_data_menu_items.new_data_pipeline',\r\n               new_dataflow_gen2 : 'artifacts.prepare.prepare_ribbon.get_data_menu_items.new_dataflow_gen2',\r\n               new_shortcut : 'artifacts.prepare.prepare_ribbon.get_data_menu_items.new_shortcut',\r\n               upload_files : 'artifacts.prepare.prepare_ribbon.get_data_menu_items.upload_files',\r\n            },\r\n            search : {\r\n               placeholder : 'artifacts.prepare.prepare_ribbon.search.placeholder',\r\n               title : 'artifacts.prepare.prepare_ribbon.search.title',\r\n            },\r\n            title : 'artifacts.prepare.prepare_ribbon.title',\r\n         },\r\n         select_twins_dialog : {\r\n            preview : 'artifacts.prepare.select_twins_dialog.preview',\r\n            select_twins : 'artifacts.prepare.select_twins_dialog.select_twins',\r\n            subtitle : 'artifacts.prepare.select_twins_dialog.subtitle',\r\n            title : 'artifacts.prepare.select_twins_dialog.title',\r\n            total_twins : 'artifacts.prepare.select_twins_dialog.total_twins',\r\n         },\r\n         twin_filter_configuration : {\r\n            created_date : {\r\n               label : 'artifacts.prepare.twin_filter_configuration.created_date.label',\r\n               last_15days : 'artifacts.prepare.twin_filter_configuration.created_date.last_15days',\r\n               last_1day : 'artifacts.prepare.twin_filter_configuration.created_date.last_1day',\r\n               last_7days : 'artifacts.prepare.twin_filter_configuration.created_date.last_7days',\r\n               last_month : 'artifacts.prepare.twin_filter_configuration.created_date.last_month',\r\n            },\r\n            group_name_options : {\r\n               ungrouped_twins : 'artifacts.prepare.twin_filter_configuration.group_name_options.ungrouped_twins',\r\n            },\r\n            place_holder : {\r\n               twin_description_placeholder : 'artifacts.prepare.twin_filter_configuration.place_holder.twin_description_placeholder',\r\n               twin_description_validation_message : 'artifacts.prepare.twin_filter_configuration.place_holder.twin_description_validation_message',\r\n               twin_name_placeholder : 'artifacts.prepare.twin_filter_configuration.place_holder.twin_name_placeholder',\r\n               twin_validation_message : 'artifacts.prepare.twin_filter_configuration.place_holder.twin_validation_message',\r\n            },\r\n            twin_filter_labels : {\r\n               group_name : 'artifacts.prepare.twin_filter_configuration.twin_filter_labels.group_name',\r\n               twin_created_date : 'artifacts.prepare.twin_filter_configuration.twin_filter_labels.twin_created_date',\r\n               twin_description : 'artifacts.prepare.twin_filter_configuration.twin_filter_labels.twin_description',\r\n               twin_name : 'artifacts.prepare.twin_filter_configuration.twin_filter_labels.twin_name',\r\n            },\r\n         },\r\n         twin_information : {\r\n            display_name : 'artifacts.prepare.twin_information.display_name',\r\n            group_name : 'artifacts.prepare.twin_information.group_name',\r\n            twin_created_date : 'artifacts.prepare.twin_information.twin_created_date',\r\n            twin_id : 'artifacts.prepare.twin_information.twin_id',\r\n         },\r\n         twin_information_with_predicted_group : {\r\n            display_name : 'artifacts.prepare.twin_information_with_predicted_group.display_name',\r\n            empty_state : 'artifacts.prepare.twin_information_with_predicted_group.empty_state',\r\n            group_name : 'artifacts.prepare.twin_information_with_predicted_group.group_name',\r\n            predicted_group_name : 'artifacts.prepare.twin_information_with_predicted_group.predicted_group_name',\r\n            twin_id : 'artifacts.prepare.twin_information_with_predicted_group.twin_id',\r\n         },\r\n      },\r\n   };\r\n   public static common = {\r\n      apply : 'common.apply',\r\n      back : 'common.back',\r\n      cancel : 'common.cancel',\r\n      close : 'common.close',\r\n      collapse : 'common.collapse',\r\n      copy : 'common.copy',\r\n      create : 'common.create',\r\n      creating : 'common.creating',\r\n      delete : 'common.delete',\r\n      disabled : 'common.disabled',\r\n      done : 'common.done',\r\n      download : 'common.download',\r\n      edit : 'common.edit',\r\n      enabled : 'common.enabled',\r\n      error : 'common.error',\r\n      expand : 'common.expand',\r\n      job_status : {\r\n         canceled : 'common.job_status.canceled',\r\n         failed : 'common.job_status.failed',\r\n         failure : 'common.job_status.failure',\r\n         in_progress : 'common.job_status.in_progress',\r\n         not_run : 'common.job_status.not_run',\r\n         not_started : 'common.job_status.not_started',\r\n         owner_user_missing : 'common.job_status.owner_user_missing',\r\n         queued : 'common.job_status.queued',\r\n         running : 'common.job_status.running',\r\n         succeeded : 'common.job_status.succeeded',\r\n         success : 'common.job_status.success',\r\n         unknown : 'common.job_status.unknown',\r\n      },\r\n      learn_more : 'common.learn_more',\r\n      loading : 'common.loading',\r\n      name : 'common.name',\r\n      next : 'common.next',\r\n      no : 'common.no',\r\n      none : 'common.none',\r\n      off : 'common.off',\r\n      on : 'common.on',\r\n      open_in_new_tab : 'common.open_in_new_tab',\r\n      previous : 'common.previous',\r\n      refresh : 'common.refresh',\r\n      remove : 'common.remove',\r\n      rerun : 'common.rerun',\r\n      revert : 'common.revert',\r\n      save : 'common.save',\r\n      saving : 'common.saving',\r\n      search : 'common.search',\r\n      submit : 'common.submit',\r\n      yes : 'common.yes',\r\n   };\r\n   public static data_contextualization = {\r\n      tabs : {\r\n         assets : 'data_contextualization.tabs.assets',\r\n         device_telemetry : 'data_contextualization.tabs.device_telemetry',\r\n         maintenance : 'data_contextualization.tabs.maintenance',\r\n         work_order : 'data_contextualization.tabs.work_order',\r\n      },\r\n   };\r\n   public static date = {\r\n      ago : 'date.ago',\r\n   };\r\n   public static duration = {\r\n      day : 'duration.day',\r\n      day_other : 'duration.day_other',\r\n      hour : 'duration.hour',\r\n      hour_other : 'duration.hour_other',\r\n      millisecond : 'duration.millisecond',\r\n      millisecond_other : 'duration.millisecond_other',\r\n      minute : 'duration.minute',\r\n      minute_other : 'duration.minute_other',\r\n      second : 'duration.second',\r\n      second_other : 'duration.second_other',\r\n      year : 'duration.year',\r\n      year_other : 'duration.year_other',\r\n   };\r\n   public static empty_contents = {\r\n      title : 'empty_contents.title',\r\n   };\r\n   public static explorer = {\r\n      events : {\r\n         event_list : {\r\n            created_timestamp : 'explorer.events.event_list.created_timestamp',\r\n            event_id : 'explorer.events.event_list.event_id',\r\n            event_type : 'explorer.events.event_list.event_type',\r\n            message : 'explorer.events.event_list.message',\r\n            no_data_message : 'explorer.events.event_list.no_data_message',\r\n            severity : 'explorer.events.event_list.severity',\r\n            source : 'explorer.events.event_list.source',\r\n            timestamp : 'explorer.events.event_list.timestamp',\r\n            twin_id : 'explorer.events.event_list.twin_id',\r\n         },\r\n      },\r\n      nav : {\r\n         events : 'explorer.nav.events',\r\n         timeseries : 'explorer.nav.timeseries',\r\n         twins : 'explorer.nav.twins',\r\n      },\r\n      query_panel : {\r\n         add_filter_button : 'explorer.query_panel.add_filter_button',\r\n         boolean_value_validation_message : 'explorer.query_panel.boolean_value_validation_message',\r\n         date_value_validation_message : 'explorer.query_panel.date_value_validation_message',\r\n         delete_filter_row_tooltip : 'explorer.query_panel.delete_filter_row_tooltip',\r\n         empty_order_validation_message : 'explorer.query_panel.empty_order_validation_message',\r\n         empty_property_validation_message : 'explorer.query_panel.empty_property_validation_message',\r\n         filter_section_title : 'explorer.query_panel.filter_section_title',\r\n         first_filter_prefix : 'explorer.query_panel.first_filter_prefix',\r\n         group_picker_placeholder : 'explorer.query_panel.group_picker_placeholder',\r\n         group_section_title : 'explorer.query_panel.group_section_title',\r\n         logical_operators : {\r\n            and : 'explorer.query_panel.logical_operators.and',\r\n            or : 'explorer.query_panel.logical_operators.or',\r\n         },\r\n         number_value_validation_message : 'explorer.query_panel.number_value_validation_message',\r\n         operator_picker_placeholder : 'explorer.query_panel.operator_picker_placeholder',\r\n         operators : {\r\n            contains : 'explorer.query_panel.operators.contains',\r\n            equals : 'explorer.query_panel.operators.equals',\r\n            false : 'explorer.query_panel.operators.false',\r\n            greater_than : 'explorer.query_panel.operators.greater_than',\r\n            greater_than_or_equals : 'explorer.query_panel.operators.greater_than_or_equals',\r\n            is_after : 'explorer.query_panel.operators.is_after',\r\n            is_before : 'explorer.query_panel.operators.is_before',\r\n            less_than : 'explorer.query_panel.operators.less_than',\r\n            less_than_or_equals : 'explorer.query_panel.operators.less_than_or_equals',\r\n            not_equals : 'explorer.query_panel.operators.not_equals',\r\n            true : 'explorer.query_panel.operators.true',\r\n         },\r\n         order_ascending : 'explorer.query_panel.order_ascending',\r\n         order_descending : 'explorer.query_panel.order_descending',\r\n         order_picker_placeholder : 'explorer.query_panel.order_picker_placeholder',\r\n         primary_button_title : 'explorer.query_panel.primary_button_title',\r\n         property_picker_placeholder : 'explorer.query_panel.property_picker_placeholder',\r\n         sort_section_title : 'explorer.query_panel.sort_section_title',\r\n         subtitle : 'explorer.query_panel.subtitle',\r\n         successive_filter_prefix : 'explorer.query_panel.successive_filter_prefix',\r\n         time_series_and : 'explorer.query_panel.time_series_and',\r\n         time_series_between : 'explorer.query_panel.time_series_between',\r\n         title : 'explorer.query_panel.title',\r\n         tooltip_content : 'explorer.query_panel.tooltip_content',\r\n         value_field_placeholder : 'explorer.query_panel.value_field_placeholder',\r\n         value_types : {\r\n            boolean : 'explorer.query_panel.value_types.boolean',\r\n            date_time : 'explorer.query_panel.value_types.date_time',\r\n            double : 'explorer.query_panel.value_types.double',\r\n            integer : 'explorer.query_panel.value_types.integer',\r\n            string : 'explorer.query_panel.value_types.string',\r\n            time_series : 'explorer.query_panel.value_types.time_series',\r\n         },\r\n      },\r\n      ribbon : {\r\n         refresh : 'explorer.ribbon.refresh',\r\n         search_placeholder : 'explorer.ribbon.search_placeholder',\r\n      },\r\n      tabActions : {\r\n         advanced_query : 'explorer.tabActions.advanced_query',\r\n         column_options : 'explorer.tabActions.column_options',\r\n      },\r\n      time_series : {\r\n         controls : {\r\n            aggregation : {\r\n               aria_label : 'explorer.time_series.controls.aggregation.aria_label',\r\n               options : {\r\n                  average : 'explorer.time_series.controls.aggregation.options.average',\r\n                  maximum : 'explorer.time_series.controls.aggregation.options.maximum',\r\n                  minimum : 'explorer.time_series.controls.aggregation.options.minimum',\r\n               },\r\n            },\r\n            bin_intervals : {\r\n               aria_label : 'explorer.time_series.controls.bin_intervals.aria_label',\r\n               options : {\r\n                  fifteen_minutes : 'explorer.time_series.controls.bin_intervals.options.fifteen_minutes',\r\n                  five_minutes : 'explorer.time_series.controls.bin_intervals.options.five_minutes',\r\n                  one_day : 'explorer.time_series.controls.bin_intervals.options.one_day',\r\n                  one_hour : 'explorer.time_series.controls.bin_intervals.options.one_hour',\r\n                  one_minute : 'explorer.time_series.controls.bin_intervals.options.one_minute',\r\n                  thirty_minutes : 'explorer.time_series.controls.bin_intervals.options.thirty_minutes',\r\n               },\r\n            },\r\n            chart_type : {\r\n               aria_label : 'explorer.time_series.controls.chart_type.aria_label',\r\n               options : {\r\n                  line : 'explorer.time_series.controls.chart_type.options.line',\r\n                  scatter : 'explorer.time_series.controls.chart_type.options.scatter',\r\n               },\r\n            },\r\n            errors : {\r\n               error_title : 'explorer.time_series.controls.errors.error_title',\r\n               failed_to_load : 'explorer.time_series.controls.errors.failed_to_load',\r\n               no_data : 'explorer.time_series.controls.errors.no_data',\r\n            },\r\n            time_range : {\r\n               end_aria_label : 'explorer.time_series.controls.time_range.end_aria_label',\r\n               start_aria_label : 'explorer.time_series.controls.time_range.start_aria_label',\r\n            },\r\n            y_axis_display : {\r\n               aria_label : 'explorer.time_series.controls.y_axis_display.aria_label',\r\n               options : {\r\n                  lanes : 'explorer.time_series.controls.y_axis_display.options.lanes',\r\n               },\r\n            },\r\n         },\r\n         time_series_list : {\r\n            asset_id : 'explorer.time_series.time_series_list.asset_id',\r\n            created_time : 'explorer.time_series.time_series_list.created_time',\r\n            description : 'explorer.time_series.time_series_list.description',\r\n            empty_state : 'explorer.time_series.time_series_list.empty_state',\r\n            formulas : 'explorer.time_series.time_series_list.formulas',\r\n            time_series_id : 'explorer.time_series.time_series_list.time_series_id',\r\n            time_series_name : 'explorer.time_series.time_series_list.time_series_name',\r\n            uom : 'explorer.time_series.time_series_list.uom',\r\n            updated_time : 'explorer.time_series.time_series_list.updated_time',\r\n         },\r\n      },\r\n      twin_details : {\r\n         details_panel : {\r\n            attributes : {\r\n               empty : 'explorer.twin_details.details_panel.attributes.empty',\r\n               name : 'explorer.twin_details.details_panel.attributes.name',\r\n               value : 'explorer.twin_details.details_panel.attributes.value',\r\n            },\r\n            created : 'explorer.twin_details.details_panel.created',\r\n            description : 'explorer.twin_details.details_panel.description',\r\n            header : 'explorer.twin_details.details_panel.header',\r\n            id : 'explorer.twin_details.details_panel.id',\r\n            label : 'explorer.twin_details.details_panel.label',\r\n            labels : 'explorer.twin_details.details_panel.labels',\r\n            name : 'explorer.twin_details.details_panel.name',\r\n            updated : 'explorer.twin_details.details_panel.updated',\r\n         },\r\n         nav : {\r\n            details : 'explorer.twin_details.nav.details',\r\n            events : 'explorer.twin_details.nav.events',\r\n            related_twins : 'explorer.twin_details.nav.related_twins',\r\n            tags : 'explorer.twin_details.nav.tags',\r\n            time_series : 'explorer.twin_details.nav.time_series',\r\n         },\r\n         related_twins : {\r\n            empty : 'explorer.twin_details.related_twins.empty',\r\n            origin_types : {\r\n               source : 'explorer.twin_details.related_twins.origin_types.source',\r\n               target : 'explorer.twin_details.related_twins.origin_types.target',\r\n            },\r\n            relationship_id : 'explorer.twin_details.related_twins.relationship_id',\r\n            relationship_name : 'explorer.twin_details.related_twins.relationship_name',\r\n            relationship_type : 'explorer.twin_details.related_twins.relationship_type',\r\n            twin_name : 'explorer.twin_details.related_twins.twin_name',\r\n         },\r\n      },\r\n      twins : {\r\n         events : {\r\n            eventId : 'explorer.twins.events.eventId',\r\n            eventMessage : 'explorer.twins.events.eventMessage',\r\n            eventSeverity : 'explorer.twins.events.eventSeverity',\r\n            eventSource : 'explorer.twins.events.eventSource',\r\n            eventTimestamp : 'explorer.twins.events.eventTimestamp',\r\n            eventType : 'explorer.twins.events.eventType',\r\n            no_data_message : 'explorer.twins.events.no_data_message',\r\n            no_name : 'explorer.twins.events.no_name',\r\n         },\r\n         graph : {\r\n            collapseNode : 'explorer.twins.graph.collapseNode',\r\n            expandNode : 'explorer.twins.graph.expandNode',\r\n            viewTwinDetails : 'explorer.twins.graph.viewTwinDetails',\r\n         },\r\n         hierarchy : {\r\n            createdTimestamp : 'explorer.twins.hierarchy.createdTimestamp',\r\n            description : 'explorer.twins.hierarchy.description',\r\n            displayName : 'explorer.twins.hierarchy.displayName',\r\n            groupId : 'explorer.twins.hierarchy.groupId',\r\n            twinId : 'explorer.twins.hierarchy.twinId',\r\n            updatedTimestamp : 'explorer.twins.hierarchy.updatedTimestamp',\r\n         },\r\n         list : {\r\n            createdTime : 'explorer.twins.list.createdTime',\r\n            description : 'explorer.twins.list.description',\r\n            groupId : 'explorer.twins.list.groupId',\r\n            no_data_message : 'explorer.twins.list.no_data_message',\r\n            state : 'explorer.twins.list.state',\r\n            twin_id : 'explorer.twins.list.twin_id',\r\n            twin_name : 'explorer.twins.list.twin_name',\r\n            updatedTime : 'explorer.twins.list.updatedTime',\r\n         },\r\n         nav : {\r\n            graph : 'explorer.twins.nav.graph',\r\n            hierarchy : 'explorer.twins.nav.hierarchy',\r\n            list : 'explorer.twins.nav.list',\r\n         },\r\n         time_series : {\r\n            assetId : 'explorer.twins.time_series.assetId',\r\n            description : 'explorer.twins.time_series.description',\r\n            formula : 'explorer.twins.time_series.formula',\r\n            formulas : 'explorer.twins.time_series.formulas',\r\n            id : 'explorer.twins.time_series.id',\r\n            name : 'explorer.twins.time_series.name',\r\n            time_stamp : 'explorer.twins.time_series.time_stamp',\r\n            twin_id : 'explorer.twins.time_series.twin_id',\r\n            unit_of_measure : 'explorer.twins.time_series.unit_of_measure',\r\n         },\r\n      },\r\n   };\r\n   public static filter_combobox = {\r\n      no_options_message : 'filter_combobox.no_options_message',\r\n   };\r\n   public static form = {\r\n      required : 'form.required',\r\n   };\r\n   public static hierarchy_tree = {\r\n      aria_label : 'hierarchy_tree.aria_label',\r\n      display_with_child_count_format : 'hierarchy_tree.display_with_child_count_format',\r\n      empty : 'hierarchy_tree.empty',\r\n      show_more : 'hierarchy_tree.show_more',\r\n   };\r\n   public static home = {\r\n      calc_engine : {\r\n         cards : {\r\n            formulas : {\r\n               button : 'home.calc_engine.cards.formulas.button',\r\n               description : 'home.calc_engine.cards.formulas.description',\r\n               title : 'home.calc_engine.cards.formulas.title',\r\n            },\r\n         },\r\n         description : 'home.calc_engine.description',\r\n         title : 'home.calc_engine.title',\r\n      },\r\n      explorer : {\r\n         cards : {\r\n            explorer : {\r\n               button : 'home.explorer.cards.explorer.button',\r\n               description : 'home.explorer.cards.explorer.description',\r\n               title : 'home.explorer.cards.explorer.title',\r\n            },\r\n         },\r\n         description : 'home.explorer.description',\r\n         title : 'home.explorer.title',\r\n      },\r\n      prepare : {\r\n         cards : {\r\n            contextualization : {\r\n               button : 'home.prepare.cards.contextualization.button',\r\n               description : 'home.prepare.cards.contextualization.description',\r\n               title : 'home.prepare.cards.contextualization.title',\r\n            },\r\n            grouping : {\r\n               button : 'home.prepare.cards.grouping.button',\r\n               description : 'home.prepare.cards.grouping.description',\r\n               title : 'home.prepare.cards.grouping.title',\r\n            },\r\n            mapping : {\r\n               button : 'home.prepare.cards.mapping.button',\r\n               description : 'home.prepare.cards.mapping.description',\r\n               title : 'home.prepare.cards.mapping.title',\r\n            },\r\n         },\r\n         description : 'home.prepare.description',\r\n         title : 'home.prepare.title',\r\n      },\r\n      title : 'home.title',\r\n   };\r\n   public static insights = {\r\n      editor : {\r\n         title_expression : 'insights.editor.title_expression',\r\n         title_function : 'insights.editor.title_function',\r\n         title_input : 'insights.editor.title_input',\r\n         title_output : 'insights.editor.title_output',\r\n      },\r\n      element_base_editor : {\r\n         element_label : {\r\n            description : 'insights.element_base_editor.element_label.description',\r\n            name : 'insights.element_base_editor.element_label.name',\r\n         },\r\n         name_validation_message : 'insights.element_base_editor.name_validation_message',\r\n         no_empty_name_message : 'insights.element_base_editor.no_empty_name_message',\r\n         placeholder : {\r\n            description_placeholder : 'insights.element_base_editor.placeholder.description_placeholder',\r\n            name_placeholder : 'insights.element_base_editor.placeholder.name_placeholder',\r\n         },\r\n      },\r\n      element_pickers : {\r\n         common : {\r\n            no_data : 'insights.element_pickers.common.no_data',\r\n            no_data_with_search : 'insights.element_pickers.common.no_data_with_search',\r\n            search_placeholder : 'insights.element_pickers.common.search_placeholder',\r\n         },\r\n         default_names : {\r\n            expression : 'insights.element_pickers.default_names.expression',\r\n            function : 'insights.element_pickers.default_names.function',\r\n            output : 'insights.element_pickers.default_names.output',\r\n         },\r\n         function_picker : {\r\n            aggregation_category : 'insights.element_pickers.function_picker.aggregation_category',\r\n            built_in_category : 'insights.element_pickers.function_picker.built_in_category',\r\n            function_name_avg : 'insights.element_pickers.function_picker.function_name_avg',\r\n            function_name_count : 'insights.element_pickers.function_picker.function_name_count',\r\n            function_name_duration : 'insights.element_pickers.function_picker.function_name_duration',\r\n            function_name_max : 'insights.element_pickers.function_picker.function_name_max',\r\n            function_name_min : 'insights.element_pickers.function_picker.function_name_min',\r\n            function_name_standard_deviation : 'insights.element_pickers.function_picker.function_name_standard_deviation',\r\n            function_name_sum : 'insights.element_pickers.function_picker.function_name_sum',\r\n            title : 'insights.element_pickers.function_picker.title',\r\n         },\r\n         input_picker : {\r\n            title : 'insights.element_pickers.input_picker.title',\r\n         },\r\n         output_picker : {\r\n            create_button_text : 'insights.element_pickers.output_picker.create_button_text',\r\n            title : 'insights.element_pickers.output_picker.title',\r\n         },\r\n      },\r\n      expression_editor : {\r\n         context_menu : {\r\n            expressions : 'insights.expression_editor.context_menu.expressions',\r\n            functions : 'insights.expression_editor.context_menu.functions',\r\n            input_properties : 'insights.expression_editor.context_menu.input_properties',\r\n         },\r\n         expression_editor_tabs : {\r\n            operations : 'insights.expression_editor.expression_editor_tabs.operations',\r\n            operations_button_groups : {\r\n               computing : {\r\n                  subtitle : 'insights.expression_editor.expression_editor_tabs.operations_button_groups.computing.subtitle',\r\n                  title : 'insights.expression_editor.expression_editor_tabs.operations_button_groups.computing.title',\r\n               },\r\n               logarithmic : {\r\n                  subtitle : 'insights.expression_editor.expression_editor_tabs.operations_button_groups.logarithmic.subtitle',\r\n                  title : 'insights.expression_editor.expression_editor_tabs.operations_button_groups.logarithmic.title',\r\n               },\r\n               mathematical : {\r\n                  subtitle : 'insights.expression_editor.expression_editor_tabs.operations_button_groups.mathematical.subtitle',\r\n                  title : 'insights.expression_editor.expression_editor_tabs.operations_button_groups.mathematical.title',\r\n               },\r\n               trigonometric : {\r\n                  subtitle : 'insights.expression_editor.expression_editor_tabs.operations_button_groups.trigonometric.subtitle',\r\n                  title : 'insights.expression_editor.expression_editor_tabs.operations_button_groups.trigonometric.title',\r\n               },\r\n            },\r\n            templates : 'insights.expression_editor.expression_editor_tabs.templates',\r\n            templates_tab : {\r\n               placeholder : 'insights.expression_editor.expression_editor_tabs.templates_tab.placeholder',\r\n            },\r\n         },\r\n         instructions : 'insights.expression_editor.instructions',\r\n         label : 'insights.expression_editor.label',\r\n         placeholder : 'insights.expression_editor.placeholder',\r\n         title : 'insights.expression_editor.title',\r\n      },\r\n      formula_builder : {\r\n         default_formula_name : 'insights.formula_builder.default_formula_name',\r\n         empty_contents : {\r\n            button_title : 'insights.formula_builder.empty_contents.button_title',\r\n            header : 'insights.formula_builder.empty_contents.header',\r\n            subtitle : 'insights.formula_builder.empty_contents.subtitle',\r\n         },\r\n         flow_editor : {\r\n            expression : 'insights.formula_builder.flow_editor.expression',\r\n            function : 'insights.formula_builder.flow_editor.function',\r\n            input_property : 'insights.formula_builder.flow_editor.input_property',\r\n            output_property : 'insights.formula_builder.flow_editor.output_property',\r\n         },\r\n      },\r\n      formulas : {\r\n         list : {\r\n            created_on : 'insights.formulas.list.created_on',\r\n            formula_name : 'insights.formulas.list.formula_name',\r\n            formulas_link_placeholder : 'insights.formulas.list.formulas_link_placeholder',\r\n            group_id : 'insights.formulas.list.group_id',\r\n            header : 'insights.formulas.list.header',\r\n            last_run : 'insights.formulas.list.last_run',\r\n            output_property : 'insights.formulas.list.output_property',\r\n            select_all_rows : 'insights.formulas.list.select_all_rows',\r\n            status : 'insights.formulas.list.status',\r\n         },\r\n      },\r\n      function_editor : {\r\n         arguments_field_label : 'insights.function_editor.arguments_field_label',\r\n         arguments_field_placeholder : 'insights.function_editor.arguments_field_placeholder',\r\n         source_dropdown_label : 'insights.function_editor.source_dropdown_label',\r\n         source_dropdown_placeholder : 'insights.function_editor.source_dropdown_placeholder',\r\n         type_dropdown_label : 'insights.function_editor.type_dropdown_label',\r\n         type_dropdown_placeholder : 'insights.function_editor.type_dropdown_placeholder',\r\n      },\r\n      input_editor : {\r\n         property_picker_label : 'insights.input_editor.property_picker_label',\r\n         twin_picker_label : 'insights.input_editor.twin_picker_label',\r\n      },\r\n      left_panel_tray : {\r\n         left_pan_main_title : 'insights.left_panel_tray.left_pan_main_title',\r\n         templates_tab_title : 'insights.left_panel_tray.templates_tab_title',\r\n         twins_tab_title : 'insights.left_panel_tray.twins_tab_title',\r\n      },\r\n      node_details_tray : {\r\n         data_preview_tab_title : 'insights.node_details_tray.data_preview_tab_title',\r\n         error_logs_tab_title : 'insights.node_details_tray.error_logs_tab_title',\r\n      },\r\n      ribbon : {\r\n         button_titles : {\r\n            add_element : 'insights.ribbon.button_titles.add_element',\r\n            add_element_expression : 'insights.ribbon.button_titles.add_element_expression',\r\n            add_element_function : 'insights.ribbon.button_titles.add_element_function',\r\n            add_element_input : 'insights.ribbon.button_titles.add_element_input',\r\n            add_element_output : 'insights.ribbon.button_titles.add_element_output',\r\n            back_to_insights : 'insights.ribbon.button_titles.back_to_insights',\r\n            build_new_formula : 'insights.ribbon.button_titles.build_new_formula',\r\n            build_new_formula_for_this_twin : 'insights.ribbon.button_titles.build_new_formula_for_this_twin',\r\n            build_new_formula_for_twin_group : 'insights.ribbon.button_titles.build_new_formula_for_twin_group',\r\n            edit_schedule : 'insights.ribbon.button_titles.edit_schedule',\r\n            pause_formula : 'insights.ribbon.button_titles.pause_formula',\r\n            run_data_preview : 'insights.ribbon.button_titles.run_data_preview',\r\n            run_formula : 'insights.ribbon.button_titles.run_formula',\r\n            save_formula : 'insights.ribbon.button_titles.save_formula',\r\n         },\r\n         title : 'insights.ribbon.title',\r\n         validation_messages : {\r\n            dangling_elements : 'insights.ribbon.validation_messages.dangling_elements',\r\n            empty_formula : 'insights.ribbon.validation_messages.empty_formula',\r\n            invalid_elements : 'insights.ribbon.validation_messages.invalid_elements',\r\n            no_formula_to_save : 'insights.ribbon.validation_messages.no_formula_to_save',\r\n            output_element_missing : 'insights.ribbon.validation_messages.output_element_missing',\r\n         },\r\n      },\r\n      save_formula_panel : {\r\n         existing_formula_name_error : 'insights.save_formula_panel.existing_formula_name_error',\r\n         formula_error_message : 'insights.save_formula_panel.formula_error_message',\r\n         formula_name_empty_error : 'insights.save_formula_panel.formula_name_empty_error',\r\n         formula_name_placeholder : 'insights.save_formula_panel.formula_name_placeholder',\r\n         formula_success_message : 'insights.save_formula_panel.formula_success_message',\r\n         title : 'insights.save_formula_panel.title',\r\n      },\r\n      scheduling_editing_tray : {\r\n         calculation_interval_label : 'insights.scheduling_editing_tray.calculation_interval_label',\r\n         edit_schedule_title : 'insights.scheduling_editing_tray.edit_schedule_title',\r\n         frequency_by_days_placeholder : 'insights.scheduling_editing_tray.frequency_by_days_placeholder',\r\n         frequency_by_hours_placeholder : 'insights.scheduling_editing_tray.frequency_by_hours_placeholder',\r\n         frequency_by_minutes_placeholder : 'insights.scheduling_editing_tray.frequency_by_minutes_placeholder',\r\n         frequency_by_year_placeholder : 'insights.scheduling_editing_tray.frequency_by_year_placeholder',\r\n         radio_button_labels : {\r\n            schedule_off : 'insights.scheduling_editing_tray.radio_button_labels.schedule_off',\r\n            schedule_on : 'insights.scheduling_editing_tray.radio_button_labels.schedule_on',\r\n         },\r\n         repeat_frequency_options : {\r\n            by_day : 'insights.scheduling_editing_tray.repeat_frequency_options.by_day',\r\n            by_hour : 'insights.scheduling_editing_tray.repeat_frequency_options.by_hour',\r\n            by_minute : 'insights.scheduling_editing_tray.repeat_frequency_options.by_minute',\r\n            by_year : 'insights.scheduling_editing_tray.repeat_frequency_options.by_year',\r\n         },\r\n         scheduled_run_radio_labels : 'insights.scheduling_editing_tray.scheduled_run_radio_labels',\r\n         scheduling_by_day_hint : 'insights.scheduling_editing_tray.scheduling_by_day_hint',\r\n         scheduling_by_hour_hint : 'insights.scheduling_editing_tray.scheduling_by_hour_hint',\r\n         scheduling_by_minute_hint : 'insights.scheduling_editing_tray.scheduling_by_minute_hint',\r\n         scheduling_by_year_hint : 'insights.scheduling_editing_tray.scheduling_by_year_hint',\r\n         scheduling_interval_label : 'insights.scheduling_editing_tray.scheduling_interval_label',\r\n         scheduling_repeat_interval_dropdown_label : 'insights.scheduling_editing_tray.scheduling_repeat_interval_dropdown_label',\r\n         scheduling_repeat_interval_label : 'insights.scheduling_editing_tray.scheduling_repeat_interval_label',\r\n         start_date_and_time_hint : 'insights.scheduling_editing_tray.start_date_and_time_hint',\r\n         start_date_and_time_label : 'insights.scheduling_editing_tray.start_date_and_time_label',\r\n      },\r\n   };\r\n   public static main_nav = {\r\n      discover : 'main_nav.discover',\r\n      explore : 'main_nav.explore',\r\n      learn : 'main_nav.learn',\r\n      prepare : 'main_nav.prepare',\r\n   };\r\n   public static prepare = {\r\n      entity_matching : {\r\n         dataset_selector : {\r\n            add_matching_condition : 'prepare.entity_matching.dataset_selector.add_matching_condition',\r\n            conditions : 'prepare.entity_matching.dataset_selector.conditions',\r\n            data_grid_count : 'prepare.entity_matching.dataset_selector.data_grid_count',\r\n            matching_conditions_button_label : 'prepare.entity_matching.dataset_selector.matching_conditions_button_label',\r\n            matching_conditions_description : 'prepare.entity_matching.dataset_selector.matching_conditions_description',\r\n            no_grid_selected_content : 'prepare.entity_matching.dataset_selector.no_grid_selected_content',\r\n            no_matching_records : 'prepare.entity_matching.dataset_selector.no_matching_records',\r\n            select_column : 'prepare.entity_matching.dataset_selector.select_column',\r\n            select_dataset : 'prepare.entity_matching.dataset_selector.select_dataset',\r\n            title : 'prepare.entity_matching.dataset_selector.title',\r\n         },\r\n         entity_matching : 'prepare.entity_matching.entity_matching',\r\n         pipeline_list : {\r\n            action : 'prepare.entity_matching.pipeline_list.action',\r\n            approve_matches : 'prepare.entity_matching.pipeline_list.approve_matches',\r\n            delete : {\r\n               subtitle : 'prepare.entity_matching.pipeline_list.delete.subtitle',\r\n               title : 'prepare.entity_matching.pipeline_list.delete.title',\r\n               warning : 'prepare.entity_matching.pipeline_list.delete.warning',\r\n            },\r\n            delete_pipeline : 'prepare.entity_matching.pipeline_list.delete_pipeline',\r\n            edit_pipeline : 'prepare.entity_matching.pipeline_list.edit_pipeline',\r\n            name : 'prepare.entity_matching.pipeline_list.name',\r\n            no_data_message : 'prepare.entity_matching.pipeline_list.no_data_message',\r\n            rerun : {\r\n               subtitle : 'prepare.entity_matching.pipeline_list.rerun.subtitle',\r\n               title : 'prepare.entity_matching.pipeline_list.rerun.title',\r\n               warning : 'prepare.entity_matching.pipeline_list.rerun.warning',\r\n            },\r\n            results : 'prepare.entity_matching.pipeline_list.results',\r\n            run_pipeline : 'prepare.entity_matching.pipeline_list.run_pipeline',\r\n            status : 'prepare.entity_matching.pipeline_list.status',\r\n         },\r\n         results_panel : {\r\n            approved_matches : {\r\n               button_titles : {\r\n                  rollback_matches : 'prepare.entity_matching.results_panel.approved_matches.button_titles.rollback_matches',\r\n               },\r\n               instructions : 'prepare.entity_matching.results_panel.approved_matches.instructions',\r\n               no_results_message : 'prepare.entity_matching.results_panel.approved_matches.no_results_message',\r\n               tab_title : 'prepare.entity_matching.results_panel.approved_matches.tab_title',\r\n               title : 'prepare.entity_matching.results_panel.approved_matches.title',\r\n            },\r\n            button_titles : {\r\n               edit_job_settings : 'prepare.entity_matching.results_panel.button_titles.edit_job_settings',\r\n               rerun_job : 'prepare.entity_matching.results_panel.button_titles.rerun_job',\r\n            },\r\n            error_messages : {\r\n               approve_matches : {\r\n                  no_client : 'prepare.entity_matching.results_panel.error_messages.approve_matches.no_client',\r\n                  request_failed_template : 'prepare.entity_matching.results_panel.error_messages.approve_matches.request_failed_template',\r\n                  unknown_exception_template : 'prepare.entity_matching.results_panel.error_messages.approve_matches.unknown_exception_template',\r\n               },\r\n               get_results : {\r\n                  general_fail_message : 'prepare.entity_matching.results_panel.error_messages.get_results.general_fail_message',\r\n                  no_client : 'prepare.entity_matching.results_panel.error_messages.get_results.no_client',\r\n                  request_failed_template : 'prepare.entity_matching.results_panel.error_messages.get_results.request_failed_template',\r\n                  unknown_exception_template : 'prepare.entity_matching.results_panel.error_messages.get_results.unknown_exception_template',\r\n               },\r\n               rerun_job : {\r\n                  no_client : 'prepare.entity_matching.results_panel.error_messages.rerun_job.no_client',\r\n                  no_pipeline_id : 'prepare.entity_matching.results_panel.error_messages.rerun_job.no_pipeline_id',\r\n                  request_failed_template : 'prepare.entity_matching.results_panel.error_messages.rerun_job.request_failed_template',\r\n                  unknown_exception_template : 'prepare.entity_matching.results_panel.error_messages.rerun_job.unknown_exception_template',\r\n               },\r\n            },\r\n            manual_matches : {\r\n               action_column_title : 'prepare.entity_matching.results_panel.manual_matches.action_column_title',\r\n               button_titles : {\r\n                  add_match : 'prepare.entity_matching.results_panel.manual_matches.button_titles.add_match',\r\n                  approve_matches : 'prepare.entity_matching.results_panel.manual_matches.button_titles.approve_matches',\r\n                  deselect_matches : 'prepare.entity_matching.results_panel.manual_matches.button_titles.deselect_matches',\r\n               },\r\n               instructions : 'prepare.entity_matching.results_panel.manual_matches.instructions',\r\n               preview_table_title : 'prepare.entity_matching.results_panel.manual_matches.preview_table_title',\r\n               selector : {\r\n                  source_placeholder : 'prepare.entity_matching.results_panel.manual_matches.selector.source_placeholder',\r\n                  source_placeholder_with_selected : 'prepare.entity_matching.results_panel.manual_matches.selector.source_placeholder_with_selected',\r\n                  target_placeholder : 'prepare.entity_matching.results_panel.manual_matches.selector.target_placeholder',\r\n               },\r\n               tab_title : 'prepare.entity_matching.results_panel.manual_matches.tab_title',\r\n               title : 'prepare.entity_matching.results_panel.manual_matches.title',\r\n            },\r\n            matches_table : {\r\n               controls : {\r\n                  header_checkbox : 'prepare.entity_matching.results_panel.matches_table.controls.header_checkbox',\r\n                  row_checkbox : 'prepare.entity_matching.results_panel.matches_table.controls.row_checkbox',\r\n               },\r\n               page_items_count_format : 'prepare.entity_matching.results_panel.matches_table.page_items_count_format',\r\n               portion_approved_format : 'prepare.entity_matching.results_panel.matches_table.portion_approved_format',\r\n               score_column_title : 'prepare.entity_matching.results_panel.matches_table.score_column_title',\r\n            },\r\n            pending_matches : {\r\n               tab_title : 'prepare.entity_matching.results_panel.pending_matches.tab_title',\r\n               title : 'prepare.entity_matching.results_panel.pending_matches.title',\r\n            },\r\n            suggested_matches : {\r\n               button_titles : {\r\n                  approve_matches : 'prepare.entity_matching.results_panel.suggested_matches.button_titles.approve_matches',\r\n               },\r\n               instructions : 'prepare.entity_matching.results_panel.suggested_matches.instructions',\r\n               no_results_message : 'prepare.entity_matching.results_panel.suggested_matches.no_results_message',\r\n               title : 'prepare.entity_matching.results_panel.suggested_matches.title',\r\n            },\r\n            title : 'prepare.entity_matching.results_panel.title',\r\n         },\r\n         wizard : {\r\n            define_relationship : {\r\n               data_information_format : 'prepare.entity_matching.wizard.define_relationship.data_information_format',\r\n               description : 'prepare.entity_matching.wizard.define_relationship.description',\r\n               dropdown : {\r\n                  add_custom_name_button_label : 'prepare.entity_matching.wizard.define_relationship.dropdown.add_custom_name_button_label',\r\n                  aria_label : 'prepare.entity_matching.wizard.define_relationship.dropdown.aria_label',\r\n                  input_custom_name_label : 'prepare.entity_matching.wizard.define_relationship.dropdown.input_custom_name_label',\r\n                  option_child_of : 'prepare.entity_matching.wizard.define_relationship.dropdown.option_child_of',\r\n                  option_depends_on : 'prepare.entity_matching.wizard.define_relationship.dropdown.option_depends_on',\r\n                  option_is_linked : 'prepare.entity_matching.wizard.define_relationship.dropdown.option_is_linked',\r\n                  option_produces : 'prepare.entity_matching.wizard.define_relationship.dropdown.option_produces',\r\n                  placeholder : 'prepare.entity_matching.wizard.define_relationship.dropdown.placeholder',\r\n               },\r\n               title : 'prepare.entity_matching.wizard.define_relationship.title',\r\n            },\r\n            get_started : {\r\n               content_paragraph : 'prepare.entity_matching.wizard.get_started.content_paragraph',\r\n               content_title : 'prepare.entity_matching.wizard.get_started.content_title',\r\n               external_link : 'prepare.entity_matching.wizard.get_started.external_link',\r\n               title : 'prepare.entity_matching.wizard.get_started.title',\r\n            },\r\n            job_details : {\r\n               input_label : 'prepare.entity_matching.wizard.job_details.input_label',\r\n               input_placeholder : 'prepare.entity_matching.wizard.job_details.input_placeholder',\r\n               invalid_pipeline_name_message : 'prepare.entity_matching.wizard.job_details.invalid_pipeline_name_message',\r\n               job_name_already_exist : 'prepare.entity_matching.wizard.job_details.job_name_already_exist',\r\n               job_name_empty : 'prepare.entity_matching.wizard.job_details.job_name_empty',\r\n               matching_option_fuzzy : 'prepare.entity_matching.wizard.job_details.matching_option_fuzzy',\r\n               matching_option_fuzzy_description : 'prepare.entity_matching.wizard.job_details.matching_option_fuzzy_description',\r\n               matching_option_regex : 'prepare.entity_matching.wizard.job_details.matching_option_regex',\r\n               matching_option_regex_description : 'prepare.entity_matching.wizard.job_details.matching_option_regex_description',\r\n               mode_label : 'prepare.entity_matching.wizard.job_details.mode_label',\r\n               select_matching_mode_description : 'prepare.entity_matching.wizard.job_details.select_matching_mode_description',\r\n               title : 'prepare.entity_matching.wizard.job_details.title',\r\n            },\r\n            regex_capture_groups : {\r\n               dataset : {\r\n                  expression : {\r\n                     suggest_expression : 'prepare.entity_matching.wizard.regex_capture_groups.dataset.expression.suggest_expression',\r\n                  },\r\n                  no_rows : 'prepare.entity_matching.wizard.regex_capture_groups.dataset.no_rows',\r\n                  placeholder : 'prepare.entity_matching.wizard.regex_capture_groups.dataset.placeholder',\r\n                  row_selection : 'prepare.entity_matching.wizard.regex_capture_groups.dataset.row_selection',\r\n                  title_1 : 'prepare.entity_matching.wizard.regex_capture_groups.dataset.title_1',\r\n                  title_2 : 'prepare.entity_matching.wizard.regex_capture_groups.dataset.title_2',\r\n               },\r\n               external_link : 'prepare.entity_matching.wizard.regex_capture_groups.external_link',\r\n               groups : {\r\n                  create : {\r\n                     prompt : 'prepare.entity_matching.wizard.regex_capture_groups.groups.create.prompt',\r\n                     regex_validation_message : 'prepare.entity_matching.wizard.regex_capture_groups.groups.create.regex_validation_message',\r\n                     title : 'prepare.entity_matching.wizard.regex_capture_groups.groups.create.title',\r\n                  },\r\n                  organize : {\r\n                     prompt : 'prepare.entity_matching.wizard.regex_capture_groups.groups.organize.prompt',\r\n                     title : 'prepare.entity_matching.wizard.regex_capture_groups.groups.organize.title',\r\n                  },\r\n                  preview : {\r\n                     description : 'prepare.entity_matching.wizard.regex_capture_groups.groups.preview.description',\r\n                     title : 'prepare.entity_matching.wizard.regex_capture_groups.groups.preview.title',\r\n                  },\r\n                  select : {\r\n                     placeholder : 'prepare.entity_matching.wizard.regex_capture_groups.groups.select.placeholder',\r\n                     prompt : 'prepare.entity_matching.wizard.regex_capture_groups.groups.select.prompt',\r\n                     title : 'prepare.entity_matching.wizard.regex_capture_groups.groups.select.title',\r\n                  },\r\n               },\r\n               matching_mode : {\r\n                  description : 'prepare.entity_matching.wizard.regex_capture_groups.matching_mode.description',\r\n                  switch_label : 'prepare.entity_matching.wizard.regex_capture_groups.matching_mode.switch_label',\r\n                  title : 'prepare.entity_matching.wizard.regex_capture_groups.matching_mode.title',\r\n               },\r\n               title : 'prepare.entity_matching.wizard.regex_capture_groups.title',\r\n            },\r\n            select_data : {\r\n               description : 'prepare.entity_matching.wizard.select_data.description',\r\n               input_group_one_label : 'prepare.entity_matching.wizard.select_data.input_group_one_label',\r\n               input_group_two_label : 'prepare.entity_matching.wizard.select_data.input_group_two_label',\r\n               source_column : {\r\n                  aria_label : 'prepare.entity_matching.wizard.select_data.source_column.aria_label',\r\n                  placeholder : 'prepare.entity_matching.wizard.select_data.source_column.placeholder',\r\n               },\r\n               source_dataset : {\r\n                  aria_label : 'prepare.entity_matching.wizard.select_data.source_dataset.aria_label',\r\n                  placeholder : 'prepare.entity_matching.wizard.select_data.source_dataset.placeholder',\r\n               },\r\n               target_column : {\r\n                  aria_label : 'prepare.entity_matching.wizard.select_data.target_column.aria_label',\r\n                  placeholder : 'prepare.entity_matching.wizard.select_data.target_column.placeholder',\r\n               },\r\n               target_dataset : {\r\n                  aria_label : 'prepare.entity_matching.wizard.select_data.target_dataset.aria_label',\r\n                  placeholder : 'prepare.entity_matching.wizard.select_data.target_dataset.placeholder',\r\n               },\r\n               title : 'prepare.entity_matching.wizard.select_data.title',\r\n            },\r\n            steps : {\r\n               step_data_set_1_rule_step : 'prepare.entity_matching.wizard.steps.step_data_set_1_rule_step',\r\n               step_data_set_2_rule_step : 'prepare.entity_matching.wizard.steps.step_data_set_2_rule_step',\r\n               step_job_details : 'prepare.entity_matching.wizard.steps.step_job_details',\r\n               step_relationships : 'prepare.entity_matching.wizard.steps.step_relationships',\r\n               step_select_data : 'prepare.entity_matching.wizard.steps.step_select_data',\r\n               step_start : 'prepare.entity_matching.wizard.steps.step_start',\r\n               step_submit : 'prepare.entity_matching.wizard.steps.step_submit',\r\n            },\r\n            submit : {\r\n               banner : {\r\n                  create_expressions : 'prepare.entity_matching.wizard.submit.banner.create_expressions',\r\n                  defined_relationships : 'prepare.entity_matching.wizard.submit.banner.defined_relationships',\r\n                  linked_your_data : 'prepare.entity_matching.wizard.submit.banner.linked_your_data',\r\n                  organized_groups : 'prepare.entity_matching.wizard.submit.banner.organized_groups',\r\n                  title : 'prepare.entity_matching.wizard.submit.banner.title',\r\n               },\r\n               content_title : 'prepare.entity_matching.wizard.submit.content_title',\r\n               error_message : {\r\n                  create_no_run : 'prepare.entity_matching.wizard.submit.error_message.create_no_run',\r\n                  failed : 'prepare.entity_matching.wizard.submit.error_message.failed',\r\n                  name_conflict : 'prepare.entity_matching.wizard.submit.error_message.name_conflict',\r\n                  unknown : 'prepare.entity_matching.wizard.submit.error_message.unknown',\r\n               },\r\n               fuzzy_disabled_regex : 'prepare.entity_matching.wizard.submit.fuzzy_disabled_regex',\r\n               fuzzy_enabled_regex : 'prepare.entity_matching.wizard.submit.fuzzy_enabled_regex',\r\n               group_format : 'prepare.entity_matching.wizard.submit.group_format',\r\n               label_dataset_one : 'prepare.entity_matching.wizard.submit.label_dataset_one',\r\n               label_dataset_two : 'prepare.entity_matching.wizard.submit.label_dataset_two',\r\n               label_match_mode : 'prepare.entity_matching.wizard.submit.label_match_mode',\r\n               label_relationship : 'prepare.entity_matching.wizard.submit.label_relationship',\r\n               loading_message : 'prepare.entity_matching.wizard.submit.loading_message',\r\n               pattern_format : 'prepare.entity_matching.wizard.submit.pattern_format',\r\n               relationship_format : 'prepare.entity_matching.wizard.submit.relationship_format',\r\n               title : 'prepare.entity_matching.wizard.submit.title',\r\n            },\r\n         },\r\n      },\r\n      transformation : {\r\n         create_transformation_dialog : {\r\n            dialog_title : 'prepare.transformation.create_transformation_dialog.dialog_title',\r\n            transform_name_label : 'prepare.transformation.create_transformation_dialog.transform_name_label',\r\n         },\r\n         transform_wizard_format_options : {\r\n            asset_hierarchy_dropdown_option : 'prepare.transformation.transform_wizard_format_options.asset_hierarchy_dropdown_option',\r\n            format_label : 'prepare.transformation.transform_wizard_format_options.format_label',\r\n            opc_ua_dropdown_option : 'prepare.transformation.transform_wizard_format_options.opc_ua_dropdown_option',\r\n            other_dropdown_option : 'prepare.transformation.transform_wizard_format_options.other_dropdown_option',\r\n            time_series_dropdown_option : 'prepare.transformation.transform_wizard_format_options.time_series_dropdown_option',\r\n         },\r\n         transfrom_wizard : {\r\n            action_type_label : 'prepare.transformation.transfrom_wizard.action_type_label',\r\n            action_type_option_create : 'prepare.transformation.transfrom_wizard.action_type_option_create',\r\n            action_type_option_delete : 'prepare.transformation.transfrom_wizard.action_type_option_delete',\r\n            automatic_transform_label : 'prepare.transformation.transfrom_wizard.automatic_transform_label',\r\n            column_mapping : {\r\n               table_headers : {\r\n                  column : 'prepare.transformation.transfrom_wizard.column_mapping.table_headers.column',\r\n                  type : 'prepare.transformation.transfrom_wizard.column_mapping.table_headers.type',\r\n                  use_column : 'prepare.transformation.transfrom_wizard.column_mapping.table_headers.use_column',\r\n               },\r\n            },\r\n            manual_transform_label : 'prepare.transformation.transfrom_wizard.manual_transform_label',\r\n            table_mapping : {\r\n               add_row_label : 'prepare.transformation.transfrom_wizard.table_mapping.add_row_label',\r\n               source_label : 'prepare.transformation.transfrom_wizard.table_mapping.source_label',\r\n               target_label : 'prepare.transformation.transfrom_wizard.table_mapping.target_label',\r\n               twin_groups_label : 'prepare.transformation.transfrom_wizard.table_mapping.twin_groups_label',\r\n            },\r\n            table_mapping_add_button : 'prepare.transformation.transfrom_wizard.table_mapping_add_button',\r\n            table_mapping_header : 'prepare.transformation.transfrom_wizard.table_mapping_header',\r\n            transformation_name_label : 'prepare.transformation.transfrom_wizard.transformation_name_label',\r\n         },\r\n      },\r\n   };\r\n   public static scheduling = {\r\n      add_a_time_label : 'scheduling.add_a_time_label',\r\n      days_of_week_validation_message : 'scheduling.days_of_week_validation_message',\r\n      every : 'scheduling.every',\r\n      every_hint : 'scheduling.every_hint',\r\n      every_hint_hour : 'scheduling.every_hint_hour',\r\n      every_hint_minute : 'scheduling.every_hint_minute',\r\n      scheduled_run_label : 'scheduling.scheduled_run_label',\r\n      start_date_hint : 'scheduling.start_date_hint',\r\n      time_of_day_label : 'scheduling.time_of_day_label',\r\n      time_zone : {\r\n         AUS_Central : 'scheduling.time_zone.AUS_Central',\r\n         AUS_Eastern : 'scheduling.time_zone.AUS_Eastern',\r\n         Afghanistan : 'scheduling.time_zone.Afghanistan',\r\n         Alaskan : 'scheduling.time_zone.Alaskan',\r\n         Arab : 'scheduling.time_zone.Arab',\r\n         Arabian : 'scheduling.time_zone.Arabian',\r\n         Arabic : 'scheduling.time_zone.Arabic',\r\n         Argentina : 'scheduling.time_zone.Argentina',\r\n         Atlantic : 'scheduling.time_zone.Atlantic',\r\n         Azerbaijan : 'scheduling.time_zone.Azerbaijan',\r\n         Azores : 'scheduling.time_zone.Azores',\r\n         Bangladesh : 'scheduling.time_zone.Bangladesh',\r\n         Canada_Central : 'scheduling.time_zone.Canada_Central',\r\n         Caucasus : 'scheduling.time_zone.Caucasus',\r\n         Cen_Australia : 'scheduling.time_zone.Cen_Australia',\r\n         Central : 'scheduling.time_zone.Central',\r\n         Central_America : 'scheduling.time_zone.Central_America',\r\n         Central_Asia : 'scheduling.time_zone.Central_Asia',\r\n         Central_Brazilian : 'scheduling.time_zone.Central_Brazilian',\r\n         Central_Europe : 'scheduling.time_zone.Central_Europe',\r\n         Central_European : 'scheduling.time_zone.Central_European',\r\n         Central_Mexico : 'scheduling.time_zone.Central_Mexico',\r\n         Central_Pacific : 'scheduling.time_zone.Central_Pacific',\r\n         China : 'scheduling.time_zone.China',\r\n         Dateline : 'scheduling.time_zone.Dateline',\r\n         E_Africa : 'scheduling.time_zone.E_Africa',\r\n         E_Australia : 'scheduling.time_zone.E_Australia',\r\n         E_Europe : 'scheduling.time_zone.E_Europe',\r\n         E_South_America : 'scheduling.time_zone.E_South_America',\r\n         Eastern : 'scheduling.time_zone.Eastern',\r\n         Egypt : 'scheduling.time_zone.Egypt',\r\n         Ekaterinburg : 'scheduling.time_zone.Ekaterinburg',\r\n         FLE : 'scheduling.time_zone.FLE',\r\n         Fiji : 'scheduling.time_zone.Fiji',\r\n         GMT : 'scheduling.time_zone.GMT',\r\n         GTB : 'scheduling.time_zone.GTB',\r\n         Georgian : 'scheduling.time_zone.Georgian',\r\n         Greenland : 'scheduling.time_zone.Greenland',\r\n         Greenwich : 'scheduling.time_zone.Greenwich',\r\n         Hawaiian : 'scheduling.time_zone.Hawaiian',\r\n         India : 'scheduling.time_zone.India',\r\n         Iran : 'scheduling.time_zone.Iran',\r\n         Israel : 'scheduling.time_zone.Israel',\r\n         Jordan : 'scheduling.time_zone.Jordan',\r\n         Kaliningrad : 'scheduling.time_zone.Kaliningrad',\r\n         Korea : 'scheduling.time_zone.Korea',\r\n         Magadan : 'scheduling.time_zone.Magadan',\r\n         Mauritius : 'scheduling.time_zone.Mauritius',\r\n         Mid_Atlantic : 'scheduling.time_zone.Mid_Atlantic',\r\n         Middle_East : 'scheduling.time_zone.Middle_East',\r\n         Montevideo : 'scheduling.time_zone.Montevideo',\r\n         Morocco : 'scheduling.time_zone.Morocco',\r\n         Mountain : 'scheduling.time_zone.Mountain',\r\n         Mountain_Mexico : 'scheduling.time_zone.Mountain_Mexico',\r\n         Myanmar : 'scheduling.time_zone.Myanmar',\r\n         N_Central_Asia : 'scheduling.time_zone.N_Central_Asia',\r\n         Namibia : 'scheduling.time_zone.Namibia',\r\n         Nepal : 'scheduling.time_zone.Nepal',\r\n         New_Zealand : 'scheduling.time_zone.New_Zealand',\r\n         Newfoundland : 'scheduling.time_zone.Newfoundland',\r\n         North_Asia : 'scheduling.time_zone.North_Asia',\r\n         North_Asia_East : 'scheduling.time_zone.North_Asia_East',\r\n         Pacific : 'scheduling.time_zone.Pacific',\r\n         Pacific_Mexico : 'scheduling.time_zone.Pacific_Mexico',\r\n         Pacific_SA : 'scheduling.time_zone.Pacific_SA',\r\n         Pakistan : 'scheduling.time_zone.Pakistan',\r\n         Paraguay : 'scheduling.time_zone.Paraguay',\r\n         Romance : 'scheduling.time_zone.Romance',\r\n         Russian : 'scheduling.time_zone.Russian',\r\n         SA_Eastern : 'scheduling.time_zone.SA_Eastern',\r\n         SA_Pacific : 'scheduling.time_zone.SA_Pacific',\r\n         SA_Western : 'scheduling.time_zone.SA_Western',\r\n         SE_Asia : 'scheduling.time_zone.SE_Asia',\r\n         Samoa : 'scheduling.time_zone.Samoa',\r\n         Singapore : 'scheduling.time_zone.Singapore',\r\n         South_Africa : 'scheduling.time_zone.South_Africa',\r\n         Sri_Lanka : 'scheduling.time_zone.Sri_Lanka',\r\n         Syria : 'scheduling.time_zone.Syria',\r\n         Taipei : 'scheduling.time_zone.Taipei',\r\n         Tasmania : 'scheduling.time_zone.Tasmania',\r\n         Tokyo : 'scheduling.time_zone.Tokyo',\r\n         Tonga : 'scheduling.time_zone.Tonga',\r\n         Turkey : 'scheduling.time_zone.Turkey',\r\n         US_Eastern : 'scheduling.time_zone.US_Eastern',\r\n         US_Mountain : 'scheduling.time_zone.US_Mountain',\r\n         UTC : 'scheduling.time_zone.UTC',\r\n         UTC_Minus_11 : 'scheduling.time_zone.UTC_Minus_11',\r\n         UTC_Minus_2 : 'scheduling.time_zone.UTC_Minus_2',\r\n         UTC_Plus_12 : 'scheduling.time_zone.UTC_Plus_12',\r\n         Ulaanbaatar : 'scheduling.time_zone.Ulaanbaatar',\r\n         Venezuela : 'scheduling.time_zone.Venezuela',\r\n         Vladivostok : 'scheduling.time_zone.Vladivostok',\r\n         W_Australia : 'scheduling.time_zone.W_Australia',\r\n         W_Central_Africa : 'scheduling.time_zone.W_Central_Africa',\r\n         W_Europe : 'scheduling.time_zone.W_Europe',\r\n         West_Asia : 'scheduling.time_zone.West_Asia',\r\n         West_Pacific : 'scheduling.time_zone.West_Pacific',\r\n         Yakutsk : 'scheduling.time_zone.Yakutsk',\r\n      },\r\n      time_zone_dropdown_aria_label : 'scheduling.time_zone_dropdown_aria_label',\r\n      time_zone_label : 'scheduling.time_zone_label',\r\n      times_of_day_validation_message_duplicate : 'scheduling.times_of_day_validation_message_duplicate',\r\n      times_of_day_validation_message_empty : 'scheduling.times_of_day_validation_message_empty',\r\n      unit_of_time_dropdown_aria_label : 'scheduling.unit_of_time_dropdown_aria_label',\r\n      unit_of_time_dropdown_option : 'scheduling.unit_of_time_dropdown_option',\r\n      unit_of_time_dropdown_option_day : 'scheduling.unit_of_time_dropdown_option_day',\r\n      unit_of_time_dropdown_option_hour : 'scheduling.unit_of_time_dropdown_option_hour',\r\n      unit_of_time_dropdown_option_minute : 'scheduling.unit_of_time_dropdown_option_minute',\r\n      unit_of_time_dropdown_option_week : 'scheduling.unit_of_time_dropdown_option_week',\r\n      unit_of_time_label : 'scheduling.unit_of_time_label',\r\n   };\r\n   public static select_source = {\r\n      button_text : 'select_source.button_text',\r\n   };\r\n   public static time_range_controls = {\r\n      aggregation : 'time_range_controls.aggregation',\r\n      bin_width : 'time_range_controls.bin_width',\r\n      default_date : 'time_range_controls.default_date',\r\n      end_date : 'time_range_controls.end_date',\r\n      error_messages : {\r\n         both_date_values_required : 'time_range_controls.error_messages.both_date_values_required',\r\n         date_format_invalid : 'time_range_controls.error_messages.date_format_invalid',\r\n         end_date_after_start : 'time_range_controls.error_messages.end_date_after_start',\r\n         end_date_required : 'time_range_controls.error_messages.end_date_required',\r\n         start_date_required : 'time_range_controls.error_messages.start_date_required',\r\n      },\r\n      start_date : 'time_range_controls.start_date',\r\n   };\r\n   public static wizard = {\r\n      skip_intro : 'wizard.skip_intro',\r\n      steps : {\r\n         status : {\r\n            error : 'wizard.steps.status.error',\r\n            success : 'wizard.steps.status.success',\r\n         },\r\n      },\r\n   };\r\n}\n","import { t } from 'i18next';\r\n\r\ntype StringMap = { [key: string]: any };\r\n\r\nconst tFunc = (key: string, params?: StringMap) => {\r\n  const results = params === undefined ? t(key) : t(key, params);\r\n  return results ?? key;\r\n};\r\n\r\nexport { tFunc as t };\r\n","var map = {\n\t\"./strings.ar.json\": \"./src/localization/locales/strings.ar.json\",\n\t\"./strings.bg.json\": \"./src/localization/locales/strings.bg.json\",\n\t\"./strings.ca.json\": \"./src/localization/locales/strings.ca.json\",\n\t\"./strings.cs.json\": \"./src/localization/locales/strings.cs.json\",\n\t\"./strings.da.json\": \"./src/localization/locales/strings.da.json\",\n\t\"./strings.de.json\": \"./src/localization/locales/strings.de.json\",\n\t\"./strings.el.json\": \"./src/localization/locales/strings.el.json\",\n\t\"./strings.es.json\": \"./src/localization/locales/strings.es.json\",\n\t\"./strings.et.json\": \"./src/localization/locales/strings.et.json\",\n\t\"./strings.eu.json\": \"./src/localization/locales/strings.eu.json\",\n\t\"./strings.fi.json\": \"./src/localization/locales/strings.fi.json\",\n\t\"./strings.fr.json\": \"./src/localization/locales/strings.fr.json\",\n\t\"./strings.gl.json\": \"./src/localization/locales/strings.gl.json\",\n\t\"./strings.he.json\": \"./src/localization/locales/strings.he.json\",\n\t\"./strings.hi.json\": \"./src/localization/locales/strings.hi.json\",\n\t\"./strings.hr.json\": \"./src/localization/locales/strings.hr.json\",\n\t\"./strings.hu.json\": \"./src/localization/locales/strings.hu.json\",\n\t\"./strings.id.json\": \"./src/localization/locales/strings.id.json\",\n\t\"./strings.it.json\": \"./src/localization/locales/strings.it.json\",\n\t\"./strings.ja.json\": \"./src/localization/locales/strings.ja.json\",\n\t\"./strings.kk.json\": \"./src/localization/locales/strings.kk.json\",\n\t\"./strings.ko.json\": \"./src/localization/locales/strings.ko.json\",\n\t\"./strings.lt.json\": \"./src/localization/locales/strings.lt.json\",\n\t\"./strings.lv.json\": \"./src/localization/locales/strings.lv.json\",\n\t\"./strings.ms.json\": \"./src/localization/locales/strings.ms.json\",\n\t\"./strings.nl.json\": \"./src/localization/locales/strings.nl.json\",\n\t\"./strings.no.json\": \"./src/localization/locales/strings.no.json\",\n\t\"./strings.pl.json\": \"./src/localization/locales/strings.pl.json\",\n\t\"./strings.pt-BR.json\": \"./src/localization/locales/strings.pt-BR.json\",\n\t\"./strings.pt-PT.json\": \"./src/localization/locales/strings.pt-PT.json\",\n\t\"./strings.ro.json\": \"./src/localization/locales/strings.ro.json\",\n\t\"./strings.ru.json\": \"./src/localization/locales/strings.ru.json\",\n\t\"./strings.sk.json\": \"./src/localization/locales/strings.sk.json\",\n\t\"./strings.sl.json\": \"./src/localization/locales/strings.sl.json\",\n\t\"./strings.sr-Cyrl-RS.json\": \"./src/localization/locales/strings.sr-Cyrl-RS.json\",\n\t\"./strings.sr-Latn-RS.json\": \"./src/localization/locales/strings.sr-Latn-RS.json\",\n\t\"./strings.sv.json\": \"./src/localization/locales/strings.sv.json\",\n\t\"./strings.th.json\": \"./src/localization/locales/strings.th.json\",\n\t\"./strings.tr.json\": \"./src/localization/locales/strings.tr.json\",\n\t\"./strings.uk.json\": \"./src/localization/locales/strings.uk.json\",\n\t\"./strings.vi.json\": \"./src/localization/locales/strings.vi.json\",\n\t\"./strings.zh-Hans.json\": \"./src/localization/locales/strings.zh-Hans.json\",\n\t\"./strings.zh-Hant.json\": \"./src/localization/locales/strings.zh-Hant.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/localization/locales sync recursive ^\\\\.\\\\/strings\\\\..*\\\\.json$\";","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":""}